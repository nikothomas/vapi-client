openapi: 3.0.1
info:
  title: Vapi API
  version: 1.0.0
servers:
- url: https://api.vapi.ai
  description: Default
paths:
  /call:
    get:
      tags:
      - Calls
      summary: List Calls
      operationId: calls_list
      parameters:
      - name: id
        in: query
        description: This is the unique identifier for the call.
        required: false
        schema:
          type: string
          nullable: true
      - name: assistantId
        in: query
        description: This will return calls with the specified assistantId.
        required: false
        schema:
          type: string
          nullable: true
      - name: phoneNumberId
        in: query
        description: |-
          This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.

          Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        required: false
        schema:
          type: string
          nullable: true
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                  - type: inboundPhoneCall
                    costs:
                    - minutes: 1.1
                      cost: 1.1
                      type: transport
                    messages:
                    - role: role
                      message: message
                      time: 1.1
                      endTime: 1.1
                      secondsFromStart: 1.1
                    phoneCallProvider: twilio
                    phoneCallTransport: sip
                    status: scheduled
                    endedReason: call-start-error-neither-assistant-nor-server-set
                    destination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                      description: description
                      type: number
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    startedAt: 2024-01-15T09:30:00Z
                    endedAt: 2024-01-15T09:30:00Z
                    cost: 1.1
                    costBreakdown:
                      transport: 1.1
                      stt: 1.1
                      llm: 1.1
                      tts: 1.1
                      vapi: 1.1
                      total: 1.1
                      llmPromptTokens: 1.1
                      llmCompletionTokens: 1.1
                      ttsCharacters: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                      recordingPath: recordingPath
                    analysis:
                      summary: summary
                      structuredData:
                        key: value
                      structuredDataMulti:
                      - key: value
                      successEvaluation: successEvaluation
                    monitor:
                      listenUrl: listenUrl
                      controlUrl: controlUrl
                    artifact:
                      messages:
                      - role: role
                        message: message
                        time: 1.1
                        endTime: 1.1
                        secondsFromStart: 1.1
                      messagesOpenAIFormatted:
                      - role: assistant
                      recordingUrl: recordingUrl
                      stereoRecordingUrl: stereoRecordingUrl
                      videoRecordingUrl: videoRecordingUrl
                      videoRecordingStartDelaySeconds: 1.1
                      transcript: transcript
                      pcapUrl: pcapUrl
                    transport:
                      provider: twilio
                      assistantVideoEnabled: true
                    phoneCallProviderId: phoneCallProviderId
                    assistantId: assistantId
                    assistant:
                      transcriber:
                        provider: assembly-ai
                      model:
                        model: model
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      metadata:
                        key: value
                      artifactPlan:
                        recordingEnabled: true
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                    assistantOverrides:
                      transcriber:
                        provider: assembly-ai
                      model:
                        model: model
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      metadata:
                        key: value
                      artifactPlan:
                        recordingEnabled: true
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                    squadId: squadId
                    squad:
                      name: name
                      members:
                      - {}
                      membersOverrides:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                    phoneNumberId: phoneNumberId
                    phoneNumber:
                      fallbackDestination:
                        number: number
                        type: number
                      twilioPhoneNumber: twilioPhoneNumber
                      twilioAccountSid: twilioAccountSid
                      twilioAuthToken: twilioAuthToken
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                    customerId: customerId
                    customer:
                      numberE164CheckEnabled: true
                      extension: extension
                      number: number
                      sipUri: sipUri
                      name: name
                    name: name
                    schedulePlan:
                      earliestAt: 2024-01-15T09:30:00Z
                      latestAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    post:
      tags:
      - Calls
      summary: Create Call
      operationId: calls_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/call_body'
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallsCreateResponse'
      security:
      - BearerAuth: []
  /call/{id}:
    get:
      tags:
      - Calls
      summary: Get Call
      operationId: calls_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                    type: inboundPhoneCall
                    costs:
                    - provider: twilio
                      minutes: 1.1
                      cost: 1.1
                      type: transport
                    messages:
                    - role: role
                      message: message
                      time: 1.1
                      endTime: 1.1
                      secondsFromStart: 1.1
                      duration: 1.1
                    phoneCallProvider: twilio
                    phoneCallTransport: sip
                    status: scheduled
                    endedReason: call-start-error-neither-assistant-nor-server-set
                    destination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    startedAt: 2024-01-15T09:30:00Z
                    endedAt: 2024-01-15T09:30:00Z
                    cost: 1.1
                    costBreakdown:
                      transport: 1.1
                      stt: 1.1
                      llm: 1.1
                      tts: 1.1
                      vapi: 1.1
                      total: 1.1
                      llmPromptTokens: 1.1
                      llmCompletionTokens: 1.1
                      ttsCharacters: 1.1
                      analysisCostBreakdown:
                        summary: 1.1
                        summaryPromptTokens: 1.1
                        summaryCompletionTokens: 1.1
                        structuredData: 1.1
                        structuredDataPromptTokens: 1.1
                        structuredDataCompletionTokens: 1.1
                        successEvaluation: 1.1
                        successEvaluationPromptTokens: 1.1
                        successEvaluationCompletionTokens: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    analysis:
                      summary: summary
                      structuredData:
                        key: value
                      structuredDataMulti:
                      - key: value
                      successEvaluation: successEvaluation
                    monitor:
                      listenUrl: listenUrl
                      controlUrl: controlUrl
                    artifact:
                      messages:
                      - role: role
                        message: message
                        time: 1.1
                        endTime: 1.1
                        secondsFromStart: 1.1
                      messagesOpenAIFormatted:
                      - role: assistant
                      recordingUrl: recordingUrl
                      stereoRecordingUrl: stereoRecordingUrl
                      videoRecordingUrl: videoRecordingUrl
                      videoRecordingStartDelaySeconds: 1.1
                      transcript: transcript
                      pcapUrl: pcapUrl
                    transport:
                      provider: twilio
                      assistantVideoEnabled: true
                    phoneCallProviderId: phoneCallProviderId
                    assistantId: assistantId
                    assistant:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    assistantOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    squadId: squadId
                    squad:
                      name: name
                      members:
                      - {}
                      membersOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                    phoneNumberId: phoneNumberId
                    phoneNumber:
                      fallbackDestination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      twilioPhoneNumber: twilioPhoneNumber
                      twilioAccountSid: twilioAccountSid
                      twilioAuthToken: twilioAuthToken
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                    customerId: customerId
                    customer:
                      numberE164CheckEnabled: true
                      extension: extension
                      number: number
                      sipUri: sipUri
                      name: name
                    name: name
                    schedulePlan:
                      earliestAt: 2024-01-15T09:30:00Z
                      latestAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    delete:
      tags:
      - Calls
      summary: Delete Call Data
      operationId: calls_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                    type: inboundPhoneCall
                    costs:
                    - provider: twilio
                      minutes: 1.1
                      cost: 1.1
                      type: transport
                    messages:
                    - role: role
                      message: message
                      time: 1.1
                      endTime: 1.1
                      secondsFromStart: 1.1
                      duration: 1.1
                    phoneCallProvider: twilio
                    phoneCallTransport: sip
                    status: scheduled
                    endedReason: call-start-error-neither-assistant-nor-server-set
                    destination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    startedAt: 2024-01-15T09:30:00Z
                    endedAt: 2024-01-15T09:30:00Z
                    cost: 1.1
                    costBreakdown:
                      transport: 1.1
                      stt: 1.1
                      llm: 1.1
                      tts: 1.1
                      vapi: 1.1
                      total: 1.1
                      llmPromptTokens: 1.1
                      llmCompletionTokens: 1.1
                      ttsCharacters: 1.1
                      analysisCostBreakdown:
                        summary: 1.1
                        summaryPromptTokens: 1.1
                        summaryCompletionTokens: 1.1
                        structuredData: 1.1
                        structuredDataPromptTokens: 1.1
                        structuredDataCompletionTokens: 1.1
                        successEvaluation: 1.1
                        successEvaluationPromptTokens: 1.1
                        successEvaluationCompletionTokens: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    analysis:
                      summary: summary
                      structuredData:
                        key: value
                      structuredDataMulti:
                      - key: value
                      successEvaluation: successEvaluation
                    monitor:
                      listenUrl: listenUrl
                      controlUrl: controlUrl
                    artifact:
                      messages:
                      - role: role
                        message: message
                        time: 1.1
                        endTime: 1.1
                        secondsFromStart: 1.1
                      messagesOpenAIFormatted:
                      - role: assistant
                      recordingUrl: recordingUrl
                      stereoRecordingUrl: stereoRecordingUrl
                      videoRecordingUrl: videoRecordingUrl
                      videoRecordingStartDelaySeconds: 1.1
                      transcript: transcript
                      pcapUrl: pcapUrl
                    transport:
                      provider: twilio
                      assistantVideoEnabled: true
                    phoneCallProviderId: phoneCallProviderId
                    assistantId: assistantId
                    assistant:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    assistantOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    squadId: squadId
                    squad:
                      name: name
                      members:
                      - {}
                      membersOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                    phoneNumberId: phoneNumberId
                    phoneNumber:
                      fallbackDestination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      twilioPhoneNumber: twilioPhoneNumber
                      twilioAccountSid: twilioAccountSid
                      twilioAuthToken: twilioAuthToken
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                    customerId: customerId
                    customer:
                      numberE164CheckEnabled: true
                      extension: extension
                      number: number
                      sipUri: sipUri
                      name: name
                    name: name
                    schedulePlan:
                      earliestAt: 2024-01-15T09:30:00Z
                      latestAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    patch:
      tags:
      - Calls
      summary: Update Call
      operationId: calls_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/call_id_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                    type: inboundPhoneCall
                    costs:
                    - provider: twilio
                      minutes: 1.1
                      cost: 1.1
                      type: transport
                    messages:
                    - role: role
                      message: message
                      time: 1.1
                      endTime: 1.1
                      secondsFromStart: 1.1
                      duration: 1.1
                    phoneCallProvider: twilio
                    phoneCallTransport: sip
                    status: scheduled
                    endedReason: call-start-error-neither-assistant-nor-server-set
                    destination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    startedAt: 2024-01-15T09:30:00Z
                    endedAt: 2024-01-15T09:30:00Z
                    cost: 1.1
                    costBreakdown:
                      transport: 1.1
                      stt: 1.1
                      llm: 1.1
                      tts: 1.1
                      vapi: 1.1
                      total: 1.1
                      llmPromptTokens: 1.1
                      llmCompletionTokens: 1.1
                      ttsCharacters: 1.1
                      analysisCostBreakdown:
                        summary: 1.1
                        summaryPromptTokens: 1.1
                        summaryCompletionTokens: 1.1
                        structuredData: 1.1
                        structuredDataPromptTokens: 1.1
                        structuredDataCompletionTokens: 1.1
                        successEvaluation: 1.1
                        successEvaluationPromptTokens: 1.1
                        successEvaluationCompletionTokens: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    analysis:
                      summary: summary
                      structuredData:
                        key: value
                      structuredDataMulti:
                      - key: value
                      successEvaluation: successEvaluation
                    monitor:
                      listenUrl: listenUrl
                      controlUrl: controlUrl
                    artifact:
                      messages:
                      - role: role
                        message: message
                        time: 1.1
                        endTime: 1.1
                        secondsFromStart: 1.1
                      messagesOpenAIFormatted:
                      - role: assistant
                      recordingUrl: recordingUrl
                      stereoRecordingUrl: stereoRecordingUrl
                      videoRecordingUrl: videoRecordingUrl
                      videoRecordingStartDelaySeconds: 1.1
                      transcript: transcript
                      pcapUrl: pcapUrl
                    transport:
                      provider: twilio
                      assistantVideoEnabled: true
                    phoneCallProviderId: phoneCallProviderId
                    assistantId: assistantId
                    assistant:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    assistantOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    squadId: squadId
                    squad:
                      name: name
                      members:
                      - {}
                      membersOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                    phoneNumberId: phoneNumberId
                    phoneNumber:
                      fallbackDestination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      twilioPhoneNumber: twilioPhoneNumber
                      twilioAccountSid: twilioAccountSid
                      twilioAuthToken: twilioAuthToken
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                    customerId: customerId
                    customer:
                      numberE164CheckEnabled: true
                      extension: extension
                      number: number
                      sipUri: sipUri
                      name: name
                    name: name
                    schedulePlan:
                      earliestAt: 2024-01-15T09:30:00Z
                      latestAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
  /assistant:
    get:
      tags:
      - Assistants
      summary: List Assistants
      operationId: assistants_list
      parameters:
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                  - transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                      - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                        - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                      speed: 1.1
                      fallbackPlan:
                        voices:
                        - voiceId: andrew
                          provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                    - conversation-update
                    - function-call
                    - hang
                    - model-output
                    - speech-update
                    - status-update
                    - transfer-update
                    - transcript
                    - tool-calls
                    - user-interrupted
                    - voice-input
                    - workflow.node.started
                    serverMessages:
                    - conversation-update
                    - end-of-call-report
                    - function-call
                    - hang
                    - speech-update
                    - status-update
                    - tool-calls
                    - transfer-destination-request
                    - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: "off"
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                    - provider: twilio
                      timeout: 60
                      record: false
                    observabilityPlan:
                      provider: langfuse
                      tags:
                      - tags
                      metadata:
                        key: value
                    credentials:
                    - apiKey: apiKey
                      provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                    - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      structuredDataMultiPlan:
                      - key: key
                        plan: {}
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                      - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                      - regex: regex
                        timeoutSeconds: 1.1
                        type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                      - i understand
                      - i see
                      - i got it
                      - i hear you
                      - im listening
                      - im with you
                      - right
                      - okay
                      - ok
                      - sure
                      - alright
                      - got it
                      - understood
                      - yeah
                      - "yes"
                      - uh-huh
                      - mm-hmm
                      - gotcha
                      - mhmm
                      - ah
                      - yeah okay
                      - yeah sure
                      interruptionPhrases:
                      - stop
                      - shut
                      - up
                      - enough
                      - quiet
                      - silence
                      - but
                      - dont
                      - not
                      - "no"
                      - hold
                      - wait
                      - cut
                      - pause
                      - nope
                      - nah
                      - nevermind
                      - never
                      - bad
                      - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                    - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                    - "on": call.ending
                      do:
                      - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    post:
      tags:
      - Assistants
      summary: Create Assistant
      operationId: assistants_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssistantDto'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                      - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                        - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                        - 。
                        - ，
                        - "."
                        - '!'
                        - '?'
                        - ;
                        - ،
                        - ۔
                        - ।
                        - ॥
                        - '|'
                        - '||'
                        - ","
                        - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                        - voiceId: andrew
                          provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                    - conversation-update
                    - function-call
                    - hang
                    - model-output
                    - speech-update
                    - status-update
                    - transfer-update
                    - transcript
                    - tool-calls
                    - user-interrupted
                    - voice-input
                    - workflow.node.started
                    serverMessages:
                    - conversation-update
                    - end-of-call-report
                    - function-call
                    - hang
                    - speech-update
                    - status-update
                    - tool-calls
                    - transfer-destination-request
                    - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: "off"
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                    - provider: twilio
                      timeout: 60
                      record: false
                      recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                      - tags
                      metadata:
                        key: value
                    credentials:
                    - apiKey: apiKey
                      name: name
                      provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                    - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                        - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                      - key: key
                        plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                      - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                      - regex: regex
                        timeoutSeconds: 1.1
                        type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                      - i understand
                      - i see
                      - i got it
                      - i hear you
                      - im listening
                      - im with you
                      - right
                      - okay
                      - ok
                      - sure
                      - alright
                      - got it
                      - understood
                      - yeah
                      - "yes"
                      - uh-huh
                      - mm-hmm
                      - gotcha
                      - mhmm
                      - ah
                      - yeah okay
                      - yeah sure
                      interruptionPhrases:
                      - stop
                      - shut
                      - up
                      - enough
                      - quiet
                      - silence
                      - but
                      - dont
                      - not
                      - "no"
                      - hold
                      - wait
                      - cut
                      - pause
                      - nope
                      - nah
                      - nevermind
                      - never
                      - bad
                      - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                    - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                    - "on": call.ending
                      filters:
                      - type: oneOf
                        key: key
                        oneOf:
                        - oneOf
                      do:
                      - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
  /assistant/{id}:
    get:
      tags:
      - Assistants
      summary: Get Assistant
      operationId: assistants_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                      - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                        - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                        - 。
                        - ，
                        - "."
                        - '!'
                        - '?'
                        - ;
                        - ،
                        - ۔
                        - ।
                        - ॥
                        - '|'
                        - '||'
                        - ","
                        - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                        - voiceId: andrew
                          provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                    - conversation-update
                    - function-call
                    - hang
                    - model-output
                    - speech-update
                    - status-update
                    - transfer-update
                    - transcript
                    - tool-calls
                    - user-interrupted
                    - voice-input
                    - workflow.node.started
                    serverMessages:
                    - conversation-update
                    - end-of-call-report
                    - function-call
                    - hang
                    - speech-update
                    - status-update
                    - tool-calls
                    - transfer-destination-request
                    - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: "off"
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                    - provider: twilio
                      timeout: 60
                      record: false
                      recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                      - tags
                      metadata:
                        key: value
                    credentials:
                    - apiKey: apiKey
                      name: name
                      provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                    - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                        - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                      - key: key
                        plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                      - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                      - regex: regex
                        timeoutSeconds: 1.1
                        type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                      - i understand
                      - i see
                      - i got it
                      - i hear you
                      - im listening
                      - im with you
                      - right
                      - okay
                      - ok
                      - sure
                      - alright
                      - got it
                      - understood
                      - yeah
                      - "yes"
                      - uh-huh
                      - mm-hmm
                      - gotcha
                      - mhmm
                      - ah
                      - yeah okay
                      - yeah sure
                      interruptionPhrases:
                      - stop
                      - shut
                      - up
                      - enough
                      - quiet
                      - silence
                      - but
                      - dont
                      - not
                      - "no"
                      - hold
                      - wait
                      - cut
                      - pause
                      - nope
                      - nah
                      - nevermind
                      - never
                      - bad
                      - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                    - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                    - "on": call.ending
                      filters:
                      - type: oneOf
                        key: key
                        oneOf:
                        - oneOf
                      do:
                      - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    delete:
      tags:
      - Assistants
      summary: Delete Assistant
      operationId: assistants_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                      - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                        - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                        - 。
                        - ，
                        - "."
                        - '!'
                        - '?'
                        - ;
                        - ،
                        - ۔
                        - ।
                        - ॥
                        - '|'
                        - '||'
                        - ","
                        - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                        - voiceId: andrew
                          provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                    - conversation-update
                    - function-call
                    - hang
                    - model-output
                    - speech-update
                    - status-update
                    - transfer-update
                    - transcript
                    - tool-calls
                    - user-interrupted
                    - voice-input
                    - workflow.node.started
                    serverMessages:
                    - conversation-update
                    - end-of-call-report
                    - function-call
                    - hang
                    - speech-update
                    - status-update
                    - tool-calls
                    - transfer-destination-request
                    - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: "off"
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                    - provider: twilio
                      timeout: 60
                      record: false
                      recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                      - tags
                      metadata:
                        key: value
                    credentials:
                    - apiKey: apiKey
                      name: name
                      provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                    - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                        - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                      - key: key
                        plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                      - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                      - regex: regex
                        timeoutSeconds: 1.1
                        type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                      - i understand
                      - i see
                      - i got it
                      - i hear you
                      - im listening
                      - im with you
                      - right
                      - okay
                      - ok
                      - sure
                      - alright
                      - got it
                      - understood
                      - yeah
                      - "yes"
                      - uh-huh
                      - mm-hmm
                      - gotcha
                      - mhmm
                      - ah
                      - yeah okay
                      - yeah sure
                      interruptionPhrases:
                      - stop
                      - shut
                      - up
                      - enough
                      - quiet
                      - silence
                      - but
                      - dont
                      - not
                      - "no"
                      - hold
                      - wait
                      - cut
                      - pause
                      - nope
                      - nah
                      - nevermind
                      - never
                      - bad
                      - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                    - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                    - "on": call.ending
                      filters:
                      - type: oneOf
                        key: key
                        oneOf:
                        - oneOf
                      do:
                      - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    patch:
      tags:
      - Assistants
      summary: Update Assistant
      operationId: assistants_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assistant_id_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                      - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                        - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                        - 。
                        - ，
                        - "."
                        - '!'
                        - '?'
                        - ;
                        - ،
                        - ۔
                        - ।
                        - ॥
                        - '|'
                        - '||'
                        - ","
                        - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                        - voiceId: andrew
                          provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                    - conversation-update
                    - function-call
                    - hang
                    - model-output
                    - speech-update
                    - status-update
                    - transfer-update
                    - transcript
                    - tool-calls
                    - user-interrupted
                    - voice-input
                    - workflow.node.started
                    serverMessages:
                    - conversation-update
                    - end-of-call-report
                    - function-call
                    - hang
                    - speech-update
                    - status-update
                    - tool-calls
                    - transfer-destination-request
                    - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: "off"
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                    - provider: twilio
                      timeout: 60
                      record: false
                      recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                      - tags
                      metadata:
                        key: value
                    credentials:
                    - apiKey: apiKey
                      name: name
                      provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                    - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                        - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                      - key: key
                        plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                        - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                      - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                      - regex: regex
                        timeoutSeconds: 1.1
                        type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                      - i understand
                      - i see
                      - i got it
                      - i hear you
                      - im listening
                      - im with you
                      - right
                      - okay
                      - ok
                      - sure
                      - alright
                      - got it
                      - understood
                      - yeah
                      - "yes"
                      - uh-huh
                      - mm-hmm
                      - gotcha
                      - mhmm
                      - ah
                      - yeah okay
                      - yeah sure
                      interruptionPhrases:
                      - stop
                      - shut
                      - up
                      - enough
                      - quiet
                      - silence
                      - but
                      - dont
                      - not
                      - "no"
                      - hold
                      - wait
                      - cut
                      - pause
                      - nope
                      - nah
                      - nevermind
                      - never
                      - bad
                      - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                    - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                    - "on": call.ending
                      filters:
                      - type: oneOf
                        key: key
                        oneOf:
                        - oneOf
                      do:
                      - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
  /phone-number:
    get:
      tags:
      - PhoneNumbers
      summary: List Phone Numbers
      operationId: phoneNumbers_list
      parameters:
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhoneNumbersListResponseItem'
              examples:
                Example1:
                  value:
                  - fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      security:
      - BearerAuth: []
    post:
      tags:
      - PhoneNumbers
      summary: Create Phone Number
      operationId: phoneNumbers_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumbersCreateRequest'
            examples:
              Example1:
                value:
                  credentialId: credentialId
                  provider: byo-phone-number
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersCreateResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      security:
      - BearerAuth: []
  /phone-number/{id}:
    get:
      tags:
      - PhoneNumbers
      summary: Get Phone Number
      operationId: phoneNumbers_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersGetResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      security:
      - BearerAuth: []
    delete:
      tags:
      - PhoneNumbers
      summary: Delete Phone Number
      operationId: phoneNumbers_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersDeleteResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      security:
      - BearerAuth: []
    patch:
      tags:
      - PhoneNumbers
      summary: Update Phone Number
      operationId: phoneNumbers_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumbersUpdateRequest'
            examples:
              Example1:
                value:
                  provider: byo-phone-number
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersUpdateResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      security:
      - BearerAuth: []
  /tool:
    get:
      tags:
      - Tools
      summary: List Tools
      operationId: tools_list
      parameters:
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolsListResponseItem'
              examples:
                Example1:
                  value:
                  - async: false
                    messages:
                    - blocking: false
                      type: request-start
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      security:
      - BearerAuth: []
    post:
      tags:
      - Tools
      summary: Create Tool
      operationId: tools_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolsCreateRequest'
            examples:
              Example1:
                value:
                  type: dtmf
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsCreateResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                    - contents:
                      - type: text
                        text: text
                        language: aa
                      blocking: false
                      content: content
                      conditions:
                      - operator: eq
                        param: param
                        value:
                          key: value
                      type: request-start
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                        - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      security:
      - BearerAuth: []
  /tool/{id}:
    get:
      tags:
      - Tools
      summary: Get Tool
      operationId: tools_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsGetResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                    - contents:
                      - type: text
                        text: text
                        language: aa
                      blocking: false
                      content: content
                      conditions:
                      - operator: eq
                        param: param
                        value:
                          key: value
                      type: request-start
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                        - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      security:
      - BearerAuth: []
    delete:
      tags:
      - Tools
      summary: Delete Tool
      operationId: tools_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsDeleteResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                    - contents:
                      - type: text
                        text: text
                        language: aa
                      blocking: false
                      content: content
                      conditions:
                      - operator: eq
                        param: param
                        value:
                          key: value
                      type: request-start
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                        - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      security:
      - BearerAuth: []
    patch:
      tags:
      - Tools
      summary: Update Tool
      operationId: tools_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolsUpdateRequest'
            examples:
              Example1:
                value:
                  type: dtmf
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsUpdateResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                    - contents:
                      - type: text
                        text: text
                        language: aa
                      blocking: false
                      content: content
                      conditions:
                      - operator: eq
                        param: param
                        value:
                          key: value
                      type: request-start
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                        - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      security:
      - BearerAuth: []
  /file:
    get:
      tags:
      - Files
      summary: List Files
      operationId: files_list
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                  - object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    post:
      tags:
      - Files
      summary: Upload File
      operationId: files_create
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/file_body'
        required: true
      responses:
        "200":
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
        "400":
          description: ""
          content:
            application/json:
              schema: {}
      security:
      - BearerAuth: []
  /file/{id}:
    get:
      tags:
      - Files
      summary: Get File
      operationId: files_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    delete:
      tags:
      - Files
      summary: Delete File
      operationId: files_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    patch:
      tags:
      - Files
      summary: Update File
      operationId: files_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/file_id_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
  /knowledge-base:
    get:
      tags:
      - KnowledgeBases
      summary: List Knowledge Bases
      operationId: knowledgeBases_list
      parameters:
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBasesListResponseItem'
              examples:
                Example1:
                  value:
                  - name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      security:
      - BearerAuth: []
    post:
      tags:
      - KnowledgeBases
      summary: Create Knowledge Base
      operationId: knowledgeBases_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBasesCreateRequest'
            examples:
              Example1:
                value:
                  provider: trieve
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesCreateResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      security:
      - BearerAuth: []
  /knowledge-base/{id}:
    get:
      tags:
      - KnowledgeBases
      summary: Get Knowledge Base
      operationId: knowledgeBases_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesGetResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      security:
      - BearerAuth: []
    delete:
      tags:
      - KnowledgeBases
      summary: Delete Knowledge Base
      operationId: knowledgeBases_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesDeleteResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      security:
      - BearerAuth: []
    patch:
      tags:
      - KnowledgeBases
      summary: Update Knowledge Base
      operationId: knowledgeBases_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBasesUpdateRequest'
            examples:
              Example1:
                value:
                  provider: trieve
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesUpdateResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      security:
      - BearerAuth: []
  /workflow:
    get:
      tags:
      - Workflow
      summary: Get Workflows
      operationId: workflow_WorkflowController_findAll
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                  - nodes:
                    - name: name
                      type: say
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    edges:
                    - from: from
                      to: to
      security:
      - BearerAuth: []
    post:
      tags:
      - Workflow
      summary: Create Workflow
      operationId: workflow_WorkflowController_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowDto'
            examples:
              Example1:
                value:
                  nodes:
                  - name: name
                    type: say
                  name: name
                  edges:
                  - from: from
                    to: to
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                    - exact: exact
                      prompt: prompt
                      name: name
                      metadata:
                        key: value
                      type: say
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    edges:
                    - condition:
                        matches:
                        - matches
                        type: ai
                      from: from
                      to: to
                      metadata:
                        key: value
      security:
      - BearerAuth: []
  /workflow/{id}:
    get:
      tags:
      - Workflow
      summary: Get Workflow
      operationId: workflow_WorkflowController_findOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                    - exact: exact
                      prompt: prompt
                      name: name
                      metadata:
                        key: value
                      type: say
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    edges:
                    - condition:
                        matches:
                        - matches
                        type: ai
                      from: from
                      to: to
                      metadata:
                        key: value
      security:
      - BearerAuth: []
    delete:
      tags:
      - Workflow
      summary: Delete Workflow
      operationId: workflow_WorkflowController_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                    - exact: exact
                      prompt: prompt
                      name: name
                      metadata:
                        key: value
                      type: say
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    edges:
                    - condition:
                        matches:
                        - matches
                        type: ai
                      from: from
                      to: to
                      metadata:
                        key: value
      security:
      - BearerAuth: []
    patch:
      tags:
      - Workflow
      summary: Update Workflow
      operationId: workflow_WorkflowController_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow_id_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                    - exact: exact
                      prompt: prompt
                      name: name
                      metadata:
                        key: value
                      type: say
                    model:
                      messages:
                      - role: assistant
                      tools:
                      - async: false
                        type: dtmf
                      toolIds:
                      - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    edges:
                    - condition:
                        matches:
                        - matches
                        type: ai
                      from: from
                      to: to
                      metadata:
                        key: value
      security:
      - BearerAuth: []
  /squad:
    get:
      tags:
      - Squads
      summary: List Squads
      operationId: squads_list
      parameters:
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                  - name: name
                    members:
                    - {}
                    membersOverrides:
                      transcriber:
                        provider: assembly-ai
                      model:
                        model: model
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      metadata:
                        key: value
                      artifactPlan:
                        recordingEnabled: true
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    post:
      tags:
      - Squads
      summary: Create Squad
      operationId: squads_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSquadDto'
            examples:
              Example1:
                value:
                  members:
                  - {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                    - assistantId: assistantId
                      assistant:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantOverrides:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantDestinations:
                      - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
  /squad/{id}:
    get:
      tags:
      - Squads
      summary: Get Squad
      operationId: squads_get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                    - assistantId: assistantId
                      assistant:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantOverrides:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantDestinations:
                      - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    delete:
      tags:
      - Squads
      summary: Delete Squad
      operationId: squads_delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                    - assistantId: assistantId
                      assistant:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantOverrides:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantDestinations:
                      - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
    patch:
      tags:
      - Squads
      summary: Update Squad
      operationId: squads_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/squad_id_body'
            examples:
              Example1:
                value:
                  members:
                  - {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                    - assistantId: assistantId
                      assistant:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantOverrides:
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                      assistantDestinations:
                      - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                        - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                          - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                        - role: assistant
                        tools:
                        - async: false
                          type: dtmf
                        toolIds:
                        - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                          - voiceId: andrew
                            provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                      serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: "off"
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                        - tags
                        metadata:
                          key: value
                      credentials:
                      - apiKey: apiKey
                        provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                      - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                        - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - "yes"
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                        interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - "no"
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                      - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                      - "on": call.ending
                        do:
                        - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
      security:
      - BearerAuth: []
  /test-suite:
    get:
      tags:
      - TestSuites
      summary: List Test Suites
      operationId: testSuites_TestSuiteController_findAllPaginated
      parameters:
      - name: page
        in: query
        description: This is the page number to return. Defaults to 1.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: sortOrder
        in: query
        description: This is the sort order for pagination. Defaults to 'DESC'.
        required: false
        schema:
          $ref: '#/components/schemas/TestSuiteControllerFindAllPaginatedRequestSortOrder'
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuitesPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                    - id: id
                      orgId: orgId
                      createdAt: 2024-01-15T09:30:00Z
                      updatedAt: 2024-01-15T09:30:00Z
                      name: name
                      phoneNumberId: phoneNumberId
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      security:
      - BearerAuth: []
    post:
      tags:
      - TestSuites
      summary: Create Test Suite
      operationId: testSuites_TestSuiteController_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/testsuite_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      security:
      - BearerAuth: []
  /test-suite/{id}:
    get:
      tags:
      - TestSuites
      summary: Get Test Suite
      operationId: testSuites_TestSuiteController_findOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      security:
      - BearerAuth: []
    delete:
      tags:
      - TestSuites
      summary: Delete Test Suite
      operationId: testSuites_TestSuiteController_remove
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      security:
      - BearerAuth: []
    patch:
      tags:
      - TestSuites
      summary: Update Test Suite
      operationId: testSuites_TestSuiteController_update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/testsuite_id_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                        serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: "off"
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                          - tags
                        credentials:
                        - apiKey: apiKey
                          provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                        - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                        - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                        - "on": call.ending
                          do:
                          - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      security:
      - BearerAuth: []
  /test-suite/{testSuiteId}/test:
    get:
      tags:
      - TestSuiteTests
      summary: List Tests
      operationId: testSuiteTests_TestSuiteTestController_findAllPaginated
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: page
        in: query
        description: This is the page number to return. Defaults to 1.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: sortOrder
        in: query
        description: This is the sort order for pagination. Defaults to 'DESC'.
        required: false
        schema:
          $ref: '#/components/schemas/TestSuiteTestControllerFindAllPaginatedRequestSortOrder'
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestsPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                    - scorers:
                      - type: ai
                        rubric: rubric
                      id: id
                      testSuiteId: testSuiteId
                      orgId: orgId
                      createdAt: 2024-01-15T09:30:00Z
                      updatedAt: 2024-01-15T09:30:00Z
                      name: name
                      script: script
                      numAttempts: 1.1
                      type: voice
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      security:
      - BearerAuth: []
    post:
      tags:
      - TestSuiteTests
      summary: Create Test
      operationId: testSuiteTests_TestSuiteTestController_create
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuiteTestControllerCreateRequest'
            examples:
              Example1:
                value:
                  scorers:
                  - type: ai
                    rubric: rubric
                  script: script
                  type: voice
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerCreateResponse'
              examples:
                Example1:
                  value:
                    scorers:
                    - type: ai
                      rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      security:
      - BearerAuth: []
  /test-suite/{testSuiteId}/test/{id}:
    get:
      tags:
      - TestSuiteTests
      summary: Get Test
      operationId: testSuiteTests_TestSuiteTestController_findOne
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerFindOneResponse'
              examples:
                Example1:
                  value:
                    scorers:
                    - type: ai
                      rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      security:
      - BearerAuth: []
    delete:
      tags:
      - TestSuiteTests
      summary: Delete Test
      operationId: testSuiteTests_TestSuiteTestController_remove
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerRemoveResponse'
              examples:
                Example1:
                  value:
                    scorers:
                    - type: ai
                      rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      security:
      - BearerAuth: []
    patch:
      tags:
      - TestSuiteTests
      summary: Update Test
      operationId: testSuiteTests_TestSuiteTestController_update
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuiteTestControllerUpdateRequest'
            examples:
              Example1:
                value:
                  type: voice
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerUpdateResponse'
              examples:
                Example1:
                  value:
                    scorers:
                    - type: ai
                      rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      security:
      - BearerAuth: []
  /test-suite/{testSuiteId}/run:
    get:
      tags:
      - TestSuiteRuns
      summary: List Test Suite Runs
      operationId: testSuiteRuns_TestSuiteRunController_findAllPaginated
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: page
        in: query
        description: This is the page number to return. Defaults to 1.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: sortOrder
        in: query
        description: This is the sort order for pagination. Defaults to 'DESC'.
        required: false
        schema:
          $ref: '#/components/schemas/TestSuiteRunControllerFindAllPaginatedRequestSortOrder'
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRunsPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                    - status: queued
                      id: id
                      orgId: orgId
                      testSuiteId: testSuiteId
                      createdAt: 2024-01-15T09:30:00Z
                      updatedAt: 2024-01-15T09:30:00Z
                      testResults:
                      - test:
                          scorers:
                          - type: ai
                            rubric: rubric
                          id: id
                          testSuiteId: testSuiteId
                          orgId: orgId
                          createdAt: 2024-01-15T09:30:00Z
                          updatedAt: 2024-01-15T09:30:00Z
                          script: script
                        attempts:
                        - scorerResults:
                          - type: ai
                            result: pass
                            reasoning: reasoning
                            rubric: rubric
                      name: name
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      security:
      - BearerAuth: []
    post:
      tags:
      - TestSuiteRuns
      summary: Create Test Suite Run
      operationId: testSuiteRuns_TestSuiteRunController_create
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/testSuiteId_run_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    testResults:
                    - test:
                        scorers:
                        - type: ai
                          rubric: rubric
                        id: id
                        testSuiteId: testSuiteId
                        orgId: orgId
                        createdAt: 2024-01-15T09:30:00Z
                        updatedAt: 2024-01-15T09:30:00Z
                        script: script
                      attempts:
                      - scorerResults:
                        - type: ai
                          result: pass
                          reasoning: reasoning
                          rubric: rubric
                    name: name
      security:
      - BearerAuth: []
  /test-suite/{testSuiteId}/run/{id}:
    get:
      tags:
      - TestSuiteRuns
      summary: Get Test Suite Run
      operationId: testSuiteRuns_TestSuiteRunController_findOne
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    testResults:
                    - test:
                        scorers:
                        - type: ai
                          rubric: rubric
                        id: id
                        testSuiteId: testSuiteId
                        orgId: orgId
                        createdAt: 2024-01-15T09:30:00Z
                        updatedAt: 2024-01-15T09:30:00Z
                        script: script
                      attempts:
                      - scorerResults:
                        - type: ai
                          result: pass
                          reasoning: reasoning
                          rubric: rubric
                    name: name
      security:
      - BearerAuth: []
    delete:
      tags:
      - TestSuiteRuns
      summary: Delete Test Suite Run
      operationId: testSuiteRuns_TestSuiteRunController_remove
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    testResults:
                    - test:
                        scorers:
                        - type: ai
                          rubric: rubric
                        id: id
                        testSuiteId: testSuiteId
                        orgId: orgId
                        createdAt: 2024-01-15T09:30:00Z
                        updatedAt: 2024-01-15T09:30:00Z
                        script: script
                      attempts:
                      - scorerResults:
                        - type: ai
                          result: pass
                          reasoning: reasoning
                          rubric: rubric
                    name: name
      security:
      - BearerAuth: []
    patch:
      tags:
      - TestSuiteRuns
      summary: Update Test Suite Run
      operationId: testSuiteRuns_TestSuiteRunController_update
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: testSuiteId
      - name: id
        in: path
        required: true
        schema:
          type: string
        examples:
          Example1:
            value: id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/run_id_body'
            examples:
              Example1:
                value: {}
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: 2024-01-15T09:30:00Z
                    updatedAt: 2024-01-15T09:30:00Z
                    testResults:
                    - test:
                        scorers:
                        - type: ai
                          rubric: rubric
                        id: id
                        testSuiteId: testSuiteId
                        orgId: orgId
                        createdAt: 2024-01-15T09:30:00Z
                        updatedAt: 2024-01-15T09:30:00Z
                        script: script
                      attempts:
                      - scorerResults:
                        - type: ai
                          result: pass
                          reasoning: reasoning
                          rubric: rubric
                    name: name
      security:
      - BearerAuth: []
  /analytics:
    post:
      tags:
      - Analytics
      summary: Create Analytics Queries
      operationId: analytics_get
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/analytics_body'
            examples:
              Example1:
                value:
                  queries:
                  - table: call
                    name: name
                    operations:
                    - operation: sum
                      column: id
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyticsQueryResult'
              examples:
                Example1:
                  value:
                  - name: name
                    timeRange:
                      step: second
                      start: 2024-01-15T09:30:00Z
                      end: 2024-01-15T09:30:00Z
                      timezone: timezone
                    result:
                    - key: value
      security:
      - BearerAuth: []
  /logs:
    get:
      tags:
      - Logs
      summary: Get Logs
      operationId: logs_get
      parameters:
      - name: type
        in: query
        description: This is the type of the log.
        required: false
        schema:
          $ref: '#/components/schemas/LogsGetRequestType'
      - name: webhookType
        in: query
        description: "This is the type of the webhook, given the log is from a webhook."
        required: false
        schema:
          type: string
          nullable: true
      - name: assistantId
        in: query
        description: This is the ID of the assistant.
        required: false
        schema:
          type: string
          nullable: true
      - name: phoneNumberId
        in: query
        description: This is the ID of the phone number.
        required: false
        schema:
          type: string
          nullable: true
      - name: customerId
        in: query
        description: This is the ID of the customer.
        required: false
        schema:
          type: string
          nullable: true
      - name: squadId
        in: query
        description: This is the ID of the squad.
        required: false
        schema:
          type: string
          nullable: true
      - name: callId
        in: query
        description: This is the ID of the call.
        required: false
        schema:
          type: string
          nullable: true
      - name: page
        in: query
        description: This is the page number to return. Defaults to 1.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: sortOrder
        in: query
        description: This is the sort order for pagination. Defaults to 'DESC'.
        required: false
        schema:
          $ref: '#/components/schemas/LogsGetRequestSortOrder'
      - name: limit
        in: query
        description: This is the maximum number of items to return. Defaults to 100.
        required: false
        schema:
          type: number
          format: double
          nullable: true
      - name: createdAtGt
        in: query
        description: This will return items where the createdAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLt
        in: query
        description: This will return items where the createdAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtGe
        in: query
        description: This will return items where the createdAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: createdAtLe
        in: query
        description: This will return items where the createdAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGt
        in: query
        description: This will return items where the updatedAt is greater than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLt
        in: query
        description: This will return items where the updatedAt is less than the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtGe
        in: query
        description: This will return items where the updatedAt is greater than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      - name: updatedAtLe
        in: query
        description: This will return items where the updatedAt is less than or equal to the specified value.
        required: false
        schema:
          type: string
          format: date-time
          nullable: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                    - time: time
                      orgId: orgId
                      type: API
                      webhookType: webhookType
                      resource: org
                      requestDurationSeconds: 1.1
                      requestStartedAt: requestStartedAt
                      requestFinishedAt: requestFinishedAt
                      requestBody:
                        key: value
                      requestHttpMethod: POST
                      requestUrl: requestUrl
                      requestPath: requestPath
                      requestQuery: requestQuery
                      responseHttpCode: 1.1
                      requestIpAddress: requestIpAddress
                      requestOrigin: requestOrigin
                      responseBody:
                        key: value
                      requestHeaders:
                        key: value
                      error:
                        message: message
                      assistantId: assistantId
                      phoneNumberId: phoneNumberId
                      customerId: customerId
                      squadId: squadId
                      callId: callId
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      security:
      - BearerAuth: []
    delete:
      tags:
      - Logs
      summary: Delete Logs
      operationId: logs_LoggingController_logsDeleteQuery
      parameters:
      - name: type
        in: query
        description: This is the type of the log.
        required: false
        schema:
          $ref: '#/components/schemas/LoggingControllerLogsDeleteQueryRequestType'
      - name: assistantId
        in: query
        required: false
        schema:
          type: string
          nullable: true
      - name: phoneNumberId
        in: query
        description: This is the ID of the phone number.
        required: false
        schema:
          type: string
          nullable: true
      - name: customerId
        in: query
        description: This is the ID of the customer.
        required: false
        schema:
          type: string
          nullable: true
      - name: squadId
        in: query
        description: This is the ID of the squad.
        required: false
        schema:
          type: string
          nullable: true
      - name: callId
        in: query
        description: This is the ID of the call.
        required: false
        schema:
          type: string
          nullable: true
      responses:
        "204":
          description: ""
      security:
      - BearerAuth: []
components:
  schemas:
    CallsCreateResponse:
      title: CallsCreateResponse
      oneOf:
      - $ref: '#/components/schemas/Call'
      - $ref: '#/components/schemas/CallBatchResponse'
    UpdateAssistantDtoTranscriber:
      title: UpdateAssistantDtoTranscriber
      description: These are the options for the assistant's transcriber.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/AssemblyAiTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureSpeechTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-transcriber
        - $ref: '#/components/schemas/CustomTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/GladiaTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/SpeechmaticsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - talkscriber
        - $ref: '#/components/schemas/TalkscriberTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiTranscriber'
    UpdateAssistantDtoModel:
      title: UpdateAssistantDtoModel
      description: These are the options for the assistant's LLM.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/AnyscaleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/AnthropicModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CerebrasModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CustomLlmModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/DeepInfraModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/DeepSeekModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/GroqModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/InflectionAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/OpenRouterModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/PerplexityAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/TogetherAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/XaiModel'
    UpdateAssistantDtoVoice:
      title: UpdateAssistantDtoVoice
      description: These are the options for the assistant's voice.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CartesiaVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-voice
        - $ref: '#/components/schemas/CustomVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/HumeVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/LmntVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/NeuphonicVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/PlayHtVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/RimeAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/SmallestAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/TavusVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiVoice'
    UpdateAssistantDtoFirstMessageMode:
      title: UpdateAssistantDtoFirstMessageMode
      type: string
      description: |-
        This is the mode for the first message. Default is 'assistant-speaks-first'.

        Use:
        - 'assistant-speaks-first' to have the assistant speak first.
        - 'assistant-waits-for-user' to have the assistant wait for the user to speak first.
        - 'assistant-speaks-first-with-model-generated-message' to have the assistant speak first with a message generated by the model based on the conversation state. (`assistant.model.messages` at call start, `call.messages` at squad transfer points).

        @default 'assistant-speaks-first'
      enum:
      - assistant-speaks-first
      - assistant-speaks-first-with-model-generated-message
      - assistant-waits-for-user
    UpdateAssistantDtoVoicemailDetection:
      title: UpdateAssistantDtoVoicemailDetection
      description: |-
        These are the settings to configure or disable voicemail detection. Alternatively, voicemail detection can be configured using the model.tools=[VoicemailTool].
        This uses Twilio's built-in detection while the VoicemailTool relies on the model to detect if a voicemail was reached.
        You can use neither of them, one of them, or both of them. By default, Twilio built-in detection is enabled while VoicemailTool is not.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
    UpdateAssistantDtoClientMessagesItem:
      title: UpdateAssistantDtoClientMessagesItem
      type: string
      enum:
      - conversation-update
      - function-call
      - function-call-result
      - hang
      - language-changed
      - metadata
      - model-output
      - speech-update
      - status-update
      - transcript
      - tool-calls
      - tool-calls-result
      - transfer-update
      - user-interrupted
      - voice-input
      - workflow.node.started
    UpdateAssistantDtoServerMessagesItem:
      title: UpdateAssistantDtoServerMessagesItem
      type: string
      enum:
      - conversation-update
      - end-of-call-report
      - function-call
      - hang
      - language-changed
      - language-change-detected
      - model-output
      - phone-call-control
      - speech-update
      - status-update
      - transcript
      - "transcript[transcriptType='final']"
      - tool-calls
      - transfer-destination-request
      - transfer-update
      - user-interrupted
      - voice-input
    UpdateAssistantDtoBackgroundSoundZero:
      title: UpdateAssistantDtoBackgroundSoundZero
      type: string
      enum:
      - "off"
      - office
    UpdateAssistantDtoBackgroundSound:
      title: UpdateAssistantDtoBackgroundSound
      description: |-
        This is the background sound in the call. Default for phone calls is 'office' and default for web calls is 'off'.
        You can also provide a custom sound by providing a URL to an audio file.
      oneOf:
      - $ref: '#/components/schemas/UpdateAssistantDtoBackgroundSoundZero'
      - type: string
    UpdateAssistantDtoCredentialsItem:
      title: UpdateAssistantDtoCredentialsItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure-openai
        - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/CreateAzureCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-sip-trunk
        - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cloudflare
        - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gcp
        - $ref: '#/components/schemas/CreateGcpCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/CreateGladiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gohighlevel
        - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/CreateGoogleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/CreateGroqCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - langfuse
        - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/CreateLmntCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - runpod
        - $ref: '#/components/schemas/CreateRunpodCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - s3
        - $ref: '#/components/schemas/CreateS3CredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - supabase
        - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/CreateTavusCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonageCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - webhook
        - $ref: '#/components/schemas/CreateWebhookCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/CreateXAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/CreateHumeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - mistral
        - $ref: '#/components/schemas/CreateMistralCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/CreateTrieveCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-client
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.sheets.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - slack.oauth2-authorization
        - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
    PhoneNumbersListResponseItem:
      title: PhoneNumbersListResponseItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/ByoPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/VonagePhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/TelnyxPhoneNumber'
    PhoneNumbersCreateRequest:
      title: PhoneNumbersCreateRequest
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/CreateTelnyxPhoneNumberDto'
    PhoneNumbersCreateResponse:
      title: PhoneNumbersCreateResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/ByoPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/VonagePhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/TelnyxPhoneNumber'
    PhoneNumbersGetResponse:
      title: PhoneNumbersGetResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/ByoPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/VonagePhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/TelnyxPhoneNumber'
    PhoneNumbersDeleteResponse:
      title: PhoneNumbersDeleteResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/ByoPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/VonagePhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/TelnyxPhoneNumber'
    PhoneNumbersUpdateRequest:
      title: PhoneNumbersUpdateRequest
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/UpdateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/UpdateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/UpdateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/UpdateVapiPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/UpdateTelnyxPhoneNumberDto'
    PhoneNumbersUpdateResponse:
      title: PhoneNumbersUpdateResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/ByoPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/VonagePhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/TelnyxPhoneNumber'
    ToolsListResponseItem:
      title: ToolsListResponseItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/DtmfTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/EndCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/TransferCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - output
        - $ref: '#/components/schemas/OutputTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/BashTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/ComputerTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/TextEditorTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/QueryTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/SlackSendMessageTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - mcp
        - $ref: '#/components/schemas/McpTool'
    ToolsCreateRequest:
      title: ToolsCreateRequest
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - output
        - $ref: '#/components/schemas/CreateOutputToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/CreateBashToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/CreateComputerToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/CreateTextEditorToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - mcp
        - $ref: '#/components/schemas/CreateMcpToolDto'
    ToolsCreateResponse:
      title: ToolsCreateResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/DtmfTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/EndCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/TransferCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - output
        - $ref: '#/components/schemas/OutputTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/BashTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/ComputerTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/TextEditorTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/QueryTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/SlackSendMessageTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - mcp
        - $ref: '#/components/schemas/McpTool'
    ToolsGetResponse:
      title: ToolsGetResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/DtmfTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/EndCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/TransferCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - output
        - $ref: '#/components/schemas/OutputTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/BashTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/ComputerTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/TextEditorTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/QueryTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/SlackSendMessageTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - mcp
        - $ref: '#/components/schemas/McpTool'
    ToolsDeleteResponse:
      title: ToolsDeleteResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/DtmfTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/EndCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/TransferCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - output
        - $ref: '#/components/schemas/OutputTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/BashTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/ComputerTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/TextEditorTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/QueryTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/SlackSendMessageTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - mcp
        - $ref: '#/components/schemas/McpTool'
    ToolsUpdateRequest:
      title: ToolsUpdateRequest
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/UpdateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/UpdateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/UpdateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/UpdateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/UpdateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/UpdateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - output
        - $ref: '#/components/schemas/UpdateOutputToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/UpdateBashToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/UpdateComputerToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/UpdateTextEditorToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/UpdateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/UpdateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/UpdateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/UpdateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/UpdateSlackSendMessageToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - mcp
        - $ref: '#/components/schemas/UpdateMcpToolDto'
    ToolsUpdateResponse:
      title: ToolsUpdateResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/DtmfTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/EndCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/TransferCallTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - output
        - $ref: '#/components/schemas/OutputTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/BashTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/ComputerTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/TextEditorTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/QueryTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/SlackSendMessageTool'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - mcp
        - $ref: '#/components/schemas/McpTool'
    KnowledgeBasesListResponseItem:
      title: KnowledgeBasesListResponseItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/TrieveKnowledgeBase'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-knowledge-base
        - $ref: '#/components/schemas/CustomKnowledgeBase'
    KnowledgeBasesCreateRequest:
      title: KnowledgeBasesCreateRequest
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/CreateTrieveKnowledgeBaseDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-knowledge-base
        - $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
    KnowledgeBasesCreateResponse:
      title: KnowledgeBasesCreateResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/TrieveKnowledgeBase'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-knowledge-base
        - $ref: '#/components/schemas/CustomKnowledgeBase'
    KnowledgeBasesGetResponse:
      title: KnowledgeBasesGetResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/TrieveKnowledgeBase'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-knowledge-base
        - $ref: '#/components/schemas/CustomKnowledgeBase'
    KnowledgeBasesDeleteResponse:
      title: KnowledgeBasesDeleteResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/TrieveKnowledgeBase'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-knowledge-base
        - $ref: '#/components/schemas/CustomKnowledgeBase'
    KnowledgeBasesUpdateRequest:
      title: KnowledgeBasesUpdateRequest
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/UpdateTrieveKnowledgeBaseDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-knowledge-base
        - $ref: '#/components/schemas/UpdateCustomKnowledgeBaseDto'
    KnowledgeBasesUpdateResponse:
      title: KnowledgeBasesUpdateResponse
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/TrieveKnowledgeBase'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-knowledge-base
        - $ref: '#/components/schemas/CustomKnowledgeBase'
    UpdateWorkflowDtoNodesItem:
      title: UpdateWorkflowDtoNodesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - say
        - $ref: '#/components/schemas/Say'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - gather
        - $ref: '#/components/schemas/Gather'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - apiRequest
        - $ref: '#/components/schemas/ApiRequest'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - hangup
        - $ref: '#/components/schemas/Hangup'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transfer
        - $ref: '#/components/schemas/Transfer'
    UpdateWorkflowDtoModel:
      title: UpdateWorkflowDtoModel
      description: These are the options for the workflow's LLM.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/AnthropicModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/AnyscaleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CerebrasModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CustomLlmModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/DeepInfraModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/DeepSeekModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/GroqModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/InflectionAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/OpenRouterModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/PerplexityAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/TogetherAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/XaiModel'
    TestSuiteControllerFindAllPaginatedRequestSortOrder:
      title: TestSuiteControllerFindAllPaginatedRequestSortOrder
      type: string
      enum:
      - ASC
      - DESC
    TestSuiteTestControllerFindAllPaginatedRequestSortOrder:
      title: TestSuiteTestControllerFindAllPaginatedRequestSortOrder
      type: string
      enum:
      - ASC
      - DESC
    TestSuiteTestControllerCreateRequest:
      title: TestSuiteTestControllerCreateRequest
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/CreateTestSuiteTestVoiceDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - chat
        - $ref: '#/components/schemas/CreateTestSuiteTestChatDto'
    TestSuiteTestControllerCreateResponse:
      title: TestSuiteTestControllerCreateResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/TestSuiteTestVoice'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - chat
        - $ref: '#/components/schemas/TestSuiteTestChat'
    TestSuiteTestControllerFindOneResponse:
      title: TestSuiteTestControllerFindOneResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/TestSuiteTestVoice'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - chat
        - $ref: '#/components/schemas/TestSuiteTestChat'
    TestSuiteTestControllerRemoveResponse:
      title: TestSuiteTestControllerRemoveResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/TestSuiteTestVoice'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - chat
        - $ref: '#/components/schemas/TestSuiteTestChat'
    TestSuiteTestControllerUpdateRequest:
      title: TestSuiteTestControllerUpdateRequest
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/UpdateTestSuiteTestVoiceDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - chat
        - $ref: '#/components/schemas/UpdateTestSuiteTestChatDto'
    TestSuiteTestControllerUpdateResponse:
      title: TestSuiteTestControllerUpdateResponse
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/TestSuiteTestVoice'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - chat
        - $ref: '#/components/schemas/TestSuiteTestChat'
    TestSuiteRunControllerFindAllPaginatedRequestSortOrder:
      title: TestSuiteRunControllerFindAllPaginatedRequestSortOrder
      type: string
      enum:
      - ASC
      - DESC
    LogsGetRequestType:
      title: LogsGetRequestType
      type: string
      enum:
      - API
      - Webhook
      - Call
      - Provider
    LogsGetRequestSortOrder:
      title: LogsGetRequestSortOrder
      type: string
      enum:
      - ASC
      - DESC
    LoggingControllerLogsDeleteQueryRequestType:
      title: LoggingControllerLogsDeleteQueryRequestType
      type: string
      enum:
      - API
      - Webhook
      - Call
      - Provider
    AnalysisCostBreakdown:
      title: AnalysisCostBreakdown
      type: object
      properties:
        summary:
          type: number
          description: This is the cost to summarize the call.
          format: double
          nullable: true
        summaryPromptTokens:
          type: number
          description: This is the number of prompt tokens used to summarize the call.
          format: double
          nullable: true
        summaryCompletionTokens:
          type: number
          description: This is the number of completion tokens used to summarize the call.
          format: double
          nullable: true
        structuredData:
          type: number
          description: This is the cost to extract structured data from the call.
          format: double
          nullable: true
        structuredDataPromptTokens:
          type: number
          description: This is the number of prompt tokens used to extract structured data from the call.
          format: double
          nullable: true
        structuredDataCompletionTokens:
          type: number
          description: This is the number of completion tokens used to extract structured data from the call.
          format: double
          nullable: true
        successEvaluation:
          type: number
          description: This is the cost to evaluate if the call was successful.
          format: double
          nullable: true
        successEvaluationPromptTokens:
          type: number
          description: This is the number of prompt tokens used to evaluate if the call was successful.
          format: double
          nullable: true
        successEvaluationCompletionTokens:
          type: number
          description: This is the number of completion tokens used to evaluate if the call was successful.
          format: double
          nullable: true
    CostBreakdown:
      title: CostBreakdown
      type: object
      properties:
        transport:
          type: number
          description: "This is the cost of the transport provider, like Twilio or Vonage."
          format: double
          nullable: true
        stt:
          type: number
          description: This is the cost of the speech-to-text service.
          format: double
          nullable: true
        llm:
          type: number
          description: This is the cost of the language model.
          format: double
          nullable: true
        tts:
          type: number
          description: This is the cost of the text-to-speech service.
          format: double
          nullable: true
        vapi:
          type: number
          description: This is the cost of Vapi.
          format: double
          nullable: true
        total:
          type: number
          description: This is the total cost of the call.
          format: double
          nullable: true
        llmPromptTokens:
          type: number
          description: This is the LLM prompt tokens used for the call.
          format: double
          nullable: true
        llmCompletionTokens:
          type: number
          description: This is the LLM completion tokens used for the call.
          format: double
          nullable: true
        ttsCharacters:
          type: number
          description: This is the TTS characters used for the call.
          format: double
          nullable: true
        analysisCostBreakdown:
          $ref: '#/components/schemas/AnalysisCostBreakdown'
    TranscriptPlan:
      title: TranscriptPlan
      type: object
      properties:
        enabled:
          type: boolean
          description: |-
            This determines whether the transcript is stored in `call.artifact.transcript`. Defaults to true.

            @default true
          nullable: true
        assistantName:
          type: string
          description: |-
            This is the name of the assistant in the transcript. Defaults to 'AI'.

            Usage:
            - If you want to change the name of the assistant in the transcript, set this. Example, here is what the transcript would look like with `assistantName` set to 'Buyer':
            ```
            User: Hello, how are you?
            Buyer: I'm fine.
            User: Do you want to buy a car?
            Buyer: No.
            ```

            @default 'AI'
          nullable: true
        userName:
          type: string
          description: |-
            This is the name of the user in the transcript. Defaults to 'User'.

            Usage:
            - If you want to change the name of the user in the transcript, set this. Example, here is what the transcript would look like with `userName` set to 'Seller':
            ```
            Seller: Hello, how are you?
            AI: I'm fine.
            Seller: Do you want to buy a car?
            AI: No.
            ```

            @default 'User'
          nullable: true
    ArtifactPlanRecordingFormat:
      title: ArtifactPlanRecordingFormat
      type: string
      description: |-
        This determines the format of the recording. Defaults to `wav;l16`.

        @default 'wav;l16'
      enum:
      - wav;l16
      - mp3
    ArtifactPlan:
      title: ArtifactPlan
      type: object
      properties:
        recordingEnabled:
          type: boolean
          description: |-
            This determines whether assistant's calls are recorded. Defaults to true.

            Usage:
            - If you don't want to record the calls, set this to false.
            - If you want to record the calls when `assistant.hipaaEnabled` (deprecated) or `assistant.compliancePlan.hipaaEnabled` explicity set this to true and make sure to provide S3 or GCP credentials on the Provider Credentials page in the Dashboard.

            You can find the recording at `call.artifact.recordingUrl` and `call.artifact.stereoRecordingUrl` after the call is ended.

            @default true
          nullable: true
        recordingFormat:
          $ref: '#/components/schemas/ArtifactPlanRecordingFormat'
        videoRecordingEnabled:
          type: boolean
          description: |-
            This determines whether the video is recorded during the call. Defaults to false. Only relevant for `webCall` type.

            You can find the video recording at `call.artifact.videoRecordingUrl` after the call is ended.

            @default false
          nullable: true
        pcapEnabled:
          type: boolean
          description: |-
            This determines whether the SIP packet capture is enabled. Defaults to true. Only relevant for `phone` type calls where phone number's provider is `vapi` or `byo-phone-number`.

            You can find the packet capture at `call.artifact.pcapUrl` after the call is ended.

            @default true
          nullable: true
        pcapS3PathPrefix:
          type: string
          description: |-
            This is the path where the SIP packet capture will be uploaded. This is only used if you have provided S3 or GCP credentials on the Provider Credentials page in the Dashboard.

            If credential.s3PathPrefix or credential.bucketPlan.path is set, this will append to it.

            Usage:
            - If you want to upload the packet capture to a specific path, set this to the path. Example: `/my-assistant-captures`.
            - If you want to upload the packet capture to the root of the bucket, set this to `/`.

            @default '/'
          nullable: true
        transcriptPlan:
          $ref: '#/components/schemas/TranscriptPlan'
        recordingPath:
          type: string
          description: |-
            This is the path where the recording will be uploaded. This is only used if you have provided S3 or GCP credentials on the Provider Credentials page in the Dashboard.

            If credential.s3PathPrefix or credential.bucketPlan.path is set, this will append to it.

            Usage:
            - If you want to upload the recording to a specific path, set this to the path. Example: `/my-assistant-recordings`.
            - If you want to upload the recording to the root of the bucket, set this to `/`.

            @default '/'
          nullable: true
    Analysis:
      title: Analysis
      type: object
      properties:
        summary:
          type: string
          description: This is the summary of the call. Customize by setting `assistant.analysisPlan.summaryPrompt`.
          nullable: true
        structuredData:
          type: object
          additionalProperties: true
          description: This is the structured data extracted from the call. Customize by setting `assistant.analysisPlan.structuredDataPrompt` and/or `assistant.analysisPlan.structuredDataSchema`.
          nullable: true
        structuredDataMulti:
          type: array
          description: This is the structured data catalog of the call. Customize by setting `assistant.analysisPlan.structuredDataMultiPlan`.
          nullable: true
          items:
            type: object
            additionalProperties: true
        successEvaluation:
          type: string
          description: This is the evaluation of the call. Customize by setting `assistant.analysisPlan.successEvaluationPrompt` and/or `assistant.analysisPlan.successEvaluationRubric`.
          nullable: true
    Monitor:
      title: Monitor
      type: object
      properties:
        listenUrl:
          type: string
          description: "This is the URL where the assistant's calls can be listened to in real-time. To enable, set `assistant.monitorPlan.listenEnabled` to `true`."
          nullable: true
        controlUrl:
          type: string
          description: "This is the URL where the assistant's calls can be controlled in real-time. To enable, set `assistant.monitorPlan.controlEnabled` to `true`."
          nullable: true
    OpenAiMessageRole:
      title: OpenAiMessageRole
      type: string
      enum:
      - assistant
      - function
      - user
      - system
      - tool
    OpenAiMessage:
      title: OpenAiMessage
      required:
      - role
      type: object
      properties:
        content:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/OpenAiMessageRole'
    ArtifactMessagesItem:
      title: ArtifactMessagesItem
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/BotMessage'
      - $ref: '#/components/schemas/ToolCallMessage'
      - $ref: '#/components/schemas/ToolCallResultMessage'
    Artifact:
      title: Artifact
      type: object
      properties:
        messages:
          type: array
          description: These are the messages that were spoken during the call.
          nullable: true
          items:
            $ref: '#/components/schemas/ArtifactMessagesItem'
        messagesOpenAIFormatted:
          type: array
          description: "These are the messages that were spoken during the call, formatted for OpenAI."
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        recordingUrl:
          type: string
          description: "This is the recording url for the call. To enable, set `assistant.artifactPlan.recordingEnabled`."
          nullable: true
        stereoRecordingUrl:
          type: string
          description: "This is the stereo recording url for the call. To enable, set `assistant.artifactPlan.recordingEnabled`."
          nullable: true
        videoRecordingUrl:
          type: string
          description: "This is video recording url for the call. To enable, set `assistant.artifactPlan.videoRecordingEnabled`."
          nullable: true
        videoRecordingStartDelaySeconds:
          type: number
          description: "This is video recording start delay in ms. To enable, set `assistant.artifactPlan.videoRecordingEnabled`. This can be used to align the playback of the recording with artifact.messages timestamps."
          format: double
          nullable: true
        transcript:
          type: string
          description: This is the transcript of the call. This is derived from `artifact.messages` but provided for convenience.
          nullable: true
        pcapUrl:
          type: string
          description: This is the packet capture url for the call. This is only available for `phone` type calls where phone number's provider is `vapi` or `byo-phone-number`.
          nullable: true
    TransportProvider:
      title: TransportProvider
      type: string
      description: This is the provider used for the call.
      enum:
      - twilio
      - vonage
      - vapi
      - daily
      - telnyx
    Transport:
      title: Transport
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/TransportProvider'
        assistantVideoEnabled:
          type: boolean
          description: |-
            This is determines whether the assistant will have video enabled.

            Only relevant for `webCall` type.
          nullable: true
    FallbackTranscriberPlanTranscribersItem:
      title: FallbackTranscriberPlanTranscribersItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/FallbackAssemblyAiTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/FallbackAzureSpeechTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-transcriber
        - $ref: '#/components/schemas/FallbackCustomTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/FallbackDeepgramTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/FallbackElevenLabsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/FallbackGladiaTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/FallbackGoogleTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - talkscriber
        - $ref: '#/components/schemas/FallbackTalkscriberTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/FallbackSpeechmaticsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/FallbackOpenAiTranscriber'
    FallbackTranscriberPlan:
      title: FallbackTranscriberPlan
      required:
      - transcribers
      type: object
      properties:
        transcribers:
          type: array
          items:
            $ref: '#/components/schemas/FallbackTranscriberPlanTranscribersItem'
    AssemblyAiTranscriber:
      title: AssemblyAiTranscriber
      type: object
      properties:
        language:
          type: string
          description: This is the language that will be set for the transcription.
          nullable: true
          enum:
          - en
        realtimeUrl:
          type: string
          description: The WebSocket URL that the transcriber connects to.
          nullable: true
        wordBoost:
          type: array
          description: Add up to 2500 characters of custom vocabulary.
          nullable: true
          items:
            type: string
        endUtteranceSilenceThreshold:
          type: number
          description: The duration of the end utterance silence threshold in milliseconds.
          format: double
          nullable: true
        disablePartialTranscripts:
          type: boolean
          description: |-
            Disable partial transcripts.
            Set to `true` to not receive partial transcripts. Defaults to `false`.
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    AzureSpeechTranscriberLanguage:
      title: AzureSpeechTranscriberLanguage
      type: string
      description: "This is the language that will be set for the transcription. The list of languages Azure supports can be found here: https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt"
      enum:
      - af-ZA
      - am-ET
      - ar-AE
      - ar-BH
      - ar-DZ
      - ar-EG
      - ar-IL
      - ar-IQ
      - ar-JO
      - ar-KW
      - ar-LB
      - ar-LY
      - ar-MA
      - ar-OM
      - ar-PS
      - ar-QA
      - ar-SA
      - ar-SY
      - ar-TN
      - ar-YE
      - az-AZ
      - bg-BG
      - bn-IN
      - bs-BA
      - ca-ES
      - cs-CZ
      - cy-GB
      - da-DK
      - de-AT
      - de-CH
      - de-DE
      - el-GR
      - en-AU
      - en-CA
      - en-GB
      - en-GH
      - en-HK
      - en-IE
      - en-IN
      - en-KE
      - en-NG
      - en-NZ
      - en-PH
      - en-SG
      - en-TZ
      - en-US
      - en-ZA
      - es-AR
      - es-BO
      - es-CL
      - es-CO
      - es-CR
      - es-CU
      - es-DO
      - es-EC
      - es-ES
      - es-GQ
      - es-GT
      - es-HN
      - es-MX
      - es-NI
      - es-PA
      - es-PE
      - es-PR
      - es-PY
      - es-SV
      - es-US
      - es-UY
      - es-VE
      - et-EE
      - eu-ES
      - fa-IR
      - fi-FI
      - fil-PH
      - fr-BE
      - fr-CA
      - fr-CH
      - fr-FR
      - ga-IE
      - gl-ES
      - gu-IN
      - he-IL
      - hi-IN
      - hr-HR
      - hu-HU
      - hy-AM
      - id-ID
      - is-IS
      - it-CH
      - it-IT
      - ja-JP
      - jv-ID
      - ka-GE
      - kk-KZ
      - km-KH
      - kn-IN
      - ko-KR
      - lo-LA
      - lt-LT
      - lv-LV
      - mk-MK
      - ml-IN
      - mn-MN
      - mr-IN
      - ms-MY
      - mt-MT
      - my-MM
      - nb-NO
      - ne-NP
      - nl-BE
      - nl-NL
      - pa-IN
      - pl-PL
      - ps-AF
      - pt-BR
      - pt-PT
      - ro-RO
      - ru-RU
      - si-LK
      - sk-SK
      - sl-SI
      - so-SO
      - sq-AL
      - sr-RS
      - sv-SE
      - sw-KE
      - sw-TZ
      - ta-IN
      - te-IN
      - th-TH
      - tr-TR
      - uk-UA
      - ur-IN
      - uz-UZ
      - vi-VN
      - wuu-CN
      - yue-CN
      - zh-CN
      - zh-CN-shandong
      - zh-CN-sichuan
      - zh-HK
      - zh-TW
      - zu-ZA
    AzureSpeechTranscriber:
      title: AzureSpeechTranscriber
      type: object
      properties:
        language:
          $ref: '#/components/schemas/AzureSpeechTranscriberLanguage'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    BackoffPlan:
      title: BackoffPlan
      required:
      - baseDelaySeconds
      - maxRetries
      - type
      type: object
      properties:
        maxRetries:
          type: number
          description: |-
            This is the maximum number of retries to attempt if the request fails. Defaults to 0 (no retries).

            @default 0
          format: double
        type:
          type: object
          additionalProperties: true
          description: |-
            This is the type of backoff plan to use. Defaults to fixed.

            @default fixed
        baseDelaySeconds:
          type: number
          description: "This is the base delay in seconds. For linear backoff, this is the delay between each retry. For exponential backoff, this is the initial delay."
          format: double
    Server:
      title: Server
      required:
      - url
      type: object
      properties:
        timeoutSeconds:
          type: number
          description: |-
            This is the timeout in seconds for the request to your server. Defaults to 20 seconds.

            @default 20
          format: double
          nullable: true
        url:
          type: string
          description: API endpoint to send requests to.
        secret:
          type: string
          description: |-
            This is the secret you can set that Vapi will send with every request to your server. Will be sent as a header called x-vapi-secret.

            Same precedence logic as server.
          nullable: true
        headers:
          type: object
          additionalProperties: true
          description: |-
            These are the custom headers to include in the request sent to your server.

            Each key-value pair represents a header name and its value.
          nullable: true
        backoffPlan:
          $ref: '#/components/schemas/BackoffPlan'
    CustomTranscriber:
      title: CustomTranscriber
      required:
      - server
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    DeepgramTranscriber:
      title: DeepgramTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/DeepgramTranscriberModel'
        language:
          $ref: '#/components/schemas/DeepgramTranscriberLanguage'
        smartFormat:
          type: boolean
          description: This will be use smart format option provided by Deepgram. It's default disabled because it can sometimes format numbers as times but it's getting better.
          nullable: true
        codeSwitchingEnabled:
          type: boolean
          description: |-
            This automatically switches the transcriber's language when the customer's language changes. Defaults to false.

            Usage:
            - If your customers switch languages mid-call, you can set this to true.

            Note:
            - To detect language changes, Vapi uses a custom trained model. Languages supported (X = limited support):
              1. Arabic
              2. Bengali
              3. Cantonese
              4. Chinese
              5. Chinese Simplified (X)
              6. Chinese Traditional (X)
              7. English
              8. Farsi (X)
              9. French
              10. German
              11. Haitian Creole (X)
              12. Hindi
              13. Italian
              14. Japanese
              15. Korean
              16. Portuguese
              17. Russian
              18. Spanish
              19. Thai
              20. Urdu
              21. Vietnamese
            - To receive `language-change-detected` webhook events, add it to `assistant.serverMessages`.

            @default false
          nullable: true
        mipOptOut:
          type: boolean
          description: |-
            If set to true, this will add mip_opt_out=true as a query parameter of all API requests. See https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out

            This will only be used if you are using your own Deepgram API key.

            @default false
          nullable: true
        numerals:
          type: boolean
          description: |-
            If set to true, this will cause deepgram to convert spoken numbers to literal numerals. For example, "my phone number is nine-seven-two..." would become "my phone number is 972..."

            @default false
          nullable: true
        keywords:
          type: array
          description: "These keywords are passed to the transcription model to help it pick up use-case specific words. Anything that may not be a common word, like your company name, should be added here."
          nullable: true
          items:
            type: string
        keyterm:
          type: array
          description: Keyterm Prompting allows you improve Keyword Recall Rate (KRR) for important keyterms or phrases up to 90%.
          nullable: true
          items:
            type: string
        endpointing:
          type: number
          description: |-
            This is the timeout after which Deepgram will send transcription on user silence. You can read in-depth documentation here: https://developers.deepgram.com/docs/endpointing.

            Here are the most important bits:
            - Defaults to 10. This is recommended for most use cases to optimize for latency.
            - 10 can cause some missing transcriptions since because of the shorter context. This mostly happens for one-word utterances. For those uses cases, it's recommended to try 300. It will add a bit of latency but the quality and reliability of the experience will be better.
            - If neither 10 nor 300 work, contact support@vapi.ai and we'll find another solution.

            @default 10
          format: double
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    ElevenLabsTranscriberLanguage:
      title: ElevenLabsTranscriberLanguage
      type: string
      enum:
      - aa
      - ab
      - ae
      - af
      - ak
      - am
      - an
      - ar
      - as
      - av
      - ay
      - az
      - ba
      - be
      - bg
      - bh
      - bi
      - bm
      - bn
      - bo
      - br
      - bs
      - ca
      - ce
      - ch
      - co
      - cr
      - cs
      - cu
      - cv
      - cy
      - da
      - de
      - dv
      - dz
      - ee
      - el
      - en
      - eo
      - es
      - et
      - eu
      - fa
      - ff
      - fi
      - fj
      - fo
      - fr
      - fy
      - ga
      - gd
      - gl
      - gn
      - gu
      - gv
      - ha
      - he
      - hi
      - ho
      - hr
      - ht
      - hu
      - hy
      - hz
      - ia
      - id
      - ie
      - ig
      - ii
      - ik
      - io
      - is
      - it
      - iu
      - ja
      - jv
      - ka
      - kg
      - ki
      - kj
      - kk
      - kl
      - km
      - kn
      - ko
      - kr
      - ks
      - ku
      - kv
      - kw
      - ky
      - la
      - lb
      - lg
      - li
      - ln
      - lo
      - lt
      - lu
      - lv
      - mg
      - mh
      - mi
      - mk
      - ml
      - mn
      - mr
      - ms
      - mt
      - my
      - na
      - nb
      - nd
      - ne
      - ng
      - nl
      - nn
      - "no"
      - nr
      - nv
      - ny
      - oc
      - oj
      - om
      - or
      - os
      - pa
      - pi
      - pl
      - ps
      - pt
      - qu
      - rm
      - rn
      - ro
      - ru
      - rw
      - sa
      - sc
      - sd
      - se
      - sg
      - si
      - sk
      - sl
      - sm
      - sn
      - so
      - sq
      - sr
      - ss
      - st
      - su
      - sv
      - sw
      - ta
      - te
      - tg
      - th
      - ti
      - tk
      - tl
      - tn
      - to
      - tr
      - ts
      - tt
      - tw
      - ty
      - ug
      - uk
      - ur
      - uz
      - ve
      - vi
      - vo
      - wa
      - wo
      - xh
      - yi
      - yue
      - yo
      - za
      - zh
      - zu
    ElevenLabsTranscriber:
      title: ElevenLabsTranscriber
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used for the transcription.
          nullable: true
          enum:
          - scribe_v1
        language:
          $ref: '#/components/schemas/ElevenLabsTranscriberLanguage'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    GladiaTranscriberModel:
      title: GladiaTranscriberModel
      type: string
      enum:
      - fast
      - accurate
    GladiaTranscriberLanguageBehaviour:
      title: GladiaTranscriberLanguageBehaviour
      type: string
      enum:
      - manual
      - automatic single language
      - automatic multiple languages
    GladiaTranscriberLanguage:
      title: GladiaTranscriberLanguage
      type: string
      description: Defines the language to use for the transcription. Required when languageBehaviour is 'manual'.
      enum:
      - af
      - sq
      - am
      - ar
      - hy
      - as
      - az
      - ba
      - eu
      - be
      - bn
      - bs
      - br
      - bg
      - ca
      - zh
      - hr
      - cs
      - da
      - nl
      - en
      - et
      - fo
      - fi
      - fr
      - gl
      - ka
      - de
      - el
      - gu
      - ht
      - ha
      - haw
      - he
      - hi
      - hu
      - is
      - id
      - it
      - ja
      - jv
      - kn
      - kk
      - km
      - ko
      - lo
      - la
      - lv
      - ln
      - lt
      - lb
      - mk
      - mg
      - ms
      - ml
      - mt
      - mi
      - mr
      - mn
      - my
      - ne
      - "no"
      - nn
      - oc
      - ps
      - fa
      - pl
      - pt
      - pa
      - ro
      - ru
      - sa
      - sr
      - sn
      - sd
      - si
      - sk
      - sl
      - so
      - es
      - su
      - sw
      - sv
      - tl
      - tg
      - ta
      - tt
      - te
      - th
      - bo
      - tr
      - tk
      - uk
      - ur
      - uz
      - vi
      - cy
      - yi
      - yo
    GladiaTranscriber:
      title: GladiaTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/GladiaTranscriberModel'
        languageBehaviour:
          $ref: '#/components/schemas/GladiaTranscriberLanguageBehaviour'
        language:
          $ref: '#/components/schemas/GladiaTranscriberLanguage'
        transcriptionHint:
          type: string
          description: |-
            Provides a custom vocabulary to the model to improve accuracy of transcribing context specific words, technical terms, names, etc. If empty, this argument is ignored.
            ⚠️ Warning ⚠️: Please be aware that the transcription_hint field has a character limit of 600. If you provide a transcription_hint longer than 600 characters, it will be automatically truncated to meet this limit.
          nullable: true
        prosody:
          type: boolean
          description: "If prosody is true, you will get a transcription that can contain prosodies i.e. (laugh) (giggles) (malefic laugh) (toss) (music)… Default value is false."
          nullable: true
        audioEnhancer:
          type: boolean
          description: "If true, audio will be pre-processed to improve accuracy but latency will increase. Default value is false."
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    SpeechmaticsTranscriberLanguage:
      title: SpeechmaticsTranscriberLanguage
      type: string
      enum:
      - auto
      - ar
      - ba
      - eu
      - be
      - bn
      - bg
      - yue
      - ca
      - hr
      - cs
      - da
      - nl
      - en
      - eo
      - et
      - fi
      - fr
      - gl
      - de
      - el
      - he
      - hi
      - hu
      - id
      - ia
      - ga
      - it
      - ja
      - ko
      - lv
      - lt
      - ms
      - mt
      - cmn
      - mr
      - mn
      - "no"
      - fa
      - pl
      - pt
      - ro
      - ru
      - sk
      - sl
      - es
      - sw
      - sv
      - ta
      - th
      - tr
      - uk
      - ur
      - ug
      - vi
      - cy
    SpeechmaticsTranscriber:
      title: SpeechmaticsTranscriber
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used for the transcription.
          nullable: true
          enum:
          - default
        language:
          $ref: '#/components/schemas/SpeechmaticsTranscriberLanguage'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    TalkscriberTranscriberLanguage:
      title: TalkscriberTranscriberLanguage
      type: string
      description: "This is the language that will be set for the transcription. The list of languages Whisper supports can be found here: https://github.com/openai/whisper/blob/main/whisper/tokenizer.py"
      enum:
      - en
      - zh
      - de
      - es
      - ru
      - ko
      - fr
      - ja
      - pt
      - tr
      - pl
      - ca
      - nl
      - ar
      - sv
      - it
      - id
      - hi
      - fi
      - vi
      - he
      - uk
      - el
      - ms
      - cs
      - ro
      - da
      - hu
      - ta
      - "no"
      - th
      - ur
      - hr
      - bg
      - lt
      - la
      - mi
      - ml
      - cy
      - sk
      - te
      - fa
      - lv
      - bn
      - sr
      - az
      - sl
      - kn
      - et
      - mk
      - br
      - eu
      - is
      - hy
      - ne
      - mn
      - bs
      - kk
      - sq
      - sw
      - gl
      - mr
      - pa
      - si
      - km
      - sn
      - yo
      - so
      - af
      - oc
      - ka
      - be
      - tg
      - sd
      - gu
      - am
      - yi
      - lo
      - uz
      - fo
      - ht
      - ps
      - tk
      - nn
      - mt
      - sa
      - lb
      - my
      - bo
      - tl
      - mg
      - as
      - tt
      - haw
      - ln
      - ha
      - ba
      - jw
      - su
      - yue
    TalkscriberTranscriber:
      title: TalkscriberTranscriber
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used for the transcription.
          nullable: true
          enum:
          - whisper
        language:
          $ref: '#/components/schemas/TalkscriberTranscriberLanguage'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    GoogleTranscriberModel:
      title: GoogleTranscriberModel
      type: string
      description: This is the model that will be used for the transcription.
      enum:
      - gemini-2.0-flash-thinking-exp
      - gemini-2.0-pro-exp-02-05
      - gemini-2.0-flash
      - gemini-2.0-flash-lite
      - gemini-2.0-flash-lite-preview-02-05
      - gemini-2.0-flash-exp
      - gemini-2.0-flash-realtime-exp
      - gemini-1.5-flash
      - gemini-1.5-flash-002
      - gemini-1.5-pro
      - gemini-1.5-pro-002
      - gemini-1.0-pro
    GoogleTranscriberLanguage:
      title: GoogleTranscriberLanguage
      type: string
      description: This is the language that will be set for the transcription.
      enum:
      - Multilingual
      - Arabic
      - Bengali
      - Bulgarian
      - Chinese
      - Croatian
      - Czech
      - Danish
      - Dutch
      - English
      - Estonian
      - Finnish
      - French
      - German
      - Greek
      - Hebrew
      - Hindi
      - Hungarian
      - Indonesian
      - Italian
      - Japanese
      - Korean
      - Latvian
      - Lithuanian
      - Norwegian
      - Polish
      - Portuguese
      - Romanian
      - Russian
      - Serbian
      - Slovak
      - Slovenian
      - Spanish
      - Swahili
      - Swedish
      - Thai
      - Turkish
      - Ukrainian
      - Vietnamese
    GoogleTranscriber:
      title: GoogleTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/GoogleTranscriberModel'
        language:
          $ref: '#/components/schemas/GoogleTranscriberLanguage'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    OpenAiTranscriberModel:
      title: OpenAiTranscriberModel
      type: string
      description: This is the model that will be used for the transcription.
      enum:
      - gpt-4o-transcribe
      - gpt-4o-mini-transcribe
    OpenAiTranscriberLanguage:
      title: OpenAiTranscriberLanguage
      type: string
      description: This is the language that will be set for the transcription.
      enum:
      - af
      - ar
      - hy
      - az
      - be
      - bs
      - bg
      - ca
      - zh
      - hr
      - cs
      - da
      - nl
      - en
      - et
      - fi
      - fr
      - gl
      - de
      - el
      - he
      - hi
      - hu
      - is
      - id
      - it
      - ja
      - kn
      - kk
      - ko
      - lv
      - lt
      - mk
      - ms
      - mr
      - mi
      - ne
      - "no"
      - fa
      - pl
      - pt
      - ro
      - ru
      - sr
      - sk
      - sl
      - es
      - sw
      - sv
      - tl
      - ta
      - th
      - tr
      - uk
      - ur
      - vi
      - cy
    OpenAiTranscriber:
      title: OpenAiTranscriber
      required:
      - model
      type: object
      properties:
        model:
          $ref: '#/components/schemas/OpenAiTranscriberModel'
        language:
          $ref: '#/components/schemas/OpenAiTranscriberLanguage'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
    FallbackAssemblyAiTranscriber:
      title: FallbackAssemblyAiTranscriber
      type: object
      properties:
        language:
          type: string
          description: This is the language that will be set for the transcription.
          nullable: true
          enum:
          - en
        realtimeUrl:
          type: string
          description: The WebSocket URL that the transcriber connects to.
          nullable: true
        wordBoost:
          type: array
          description: Add up to 2500 characters of custom vocabulary.
          nullable: true
          items:
            type: string
        endUtteranceSilenceThreshold:
          type: number
          description: The duration of the end utterance silence threshold in milliseconds.
          format: double
          nullable: true
        disablePartialTranscripts:
          type: boolean
          description: |-
            Disable partial transcripts.
            Set to `true` to not receive partial transcripts. Defaults to `false`.
          nullable: true
    FallbackAzureSpeechTranscriberLanguage:
      title: FallbackAzureSpeechTranscriberLanguage
      type: string
      description: "This is the language that will be set for the transcription. The list of languages Azure supports can be found here: https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt"
      enum:
      - af-ZA
      - am-ET
      - ar-AE
      - ar-BH
      - ar-DZ
      - ar-EG
      - ar-IL
      - ar-IQ
      - ar-JO
      - ar-KW
      - ar-LB
      - ar-LY
      - ar-MA
      - ar-OM
      - ar-PS
      - ar-QA
      - ar-SA
      - ar-SY
      - ar-TN
      - ar-YE
      - az-AZ
      - bg-BG
      - bn-IN
      - bs-BA
      - ca-ES
      - cs-CZ
      - cy-GB
      - da-DK
      - de-AT
      - de-CH
      - de-DE
      - el-GR
      - en-AU
      - en-CA
      - en-GB
      - en-GH
      - en-HK
      - en-IE
      - en-IN
      - en-KE
      - en-NG
      - en-NZ
      - en-PH
      - en-SG
      - en-TZ
      - en-US
      - en-ZA
      - es-AR
      - es-BO
      - es-CL
      - es-CO
      - es-CR
      - es-CU
      - es-DO
      - es-EC
      - es-ES
      - es-GQ
      - es-GT
      - es-HN
      - es-MX
      - es-NI
      - es-PA
      - es-PE
      - es-PR
      - es-PY
      - es-SV
      - es-US
      - es-UY
      - es-VE
      - et-EE
      - eu-ES
      - fa-IR
      - fi-FI
      - fil-PH
      - fr-BE
      - fr-CA
      - fr-CH
      - fr-FR
      - ga-IE
      - gl-ES
      - gu-IN
      - he-IL
      - hi-IN
      - hr-HR
      - hu-HU
      - hy-AM
      - id-ID
      - is-IS
      - it-CH
      - it-IT
      - ja-JP
      - jv-ID
      - ka-GE
      - kk-KZ
      - km-KH
      - kn-IN
      - ko-KR
      - lo-LA
      - lt-LT
      - lv-LV
      - mk-MK
      - ml-IN
      - mn-MN
      - mr-IN
      - ms-MY
      - mt-MT
      - my-MM
      - nb-NO
      - ne-NP
      - nl-BE
      - nl-NL
      - pa-IN
      - pl-PL
      - ps-AF
      - pt-BR
      - pt-PT
      - ro-RO
      - ru-RU
      - si-LK
      - sk-SK
      - sl-SI
      - so-SO
      - sq-AL
      - sr-RS
      - sv-SE
      - sw-KE
      - sw-TZ
      - ta-IN
      - te-IN
      - th-TH
      - tr-TR
      - uk-UA
      - ur-IN
      - uz-UZ
      - vi-VN
      - wuu-CN
      - yue-CN
      - zh-CN
      - zh-CN-shandong
      - zh-CN-sichuan
      - zh-HK
      - zh-TW
      - zu-ZA
    FallbackAzureSpeechTranscriber:
      title: FallbackAzureSpeechTranscriber
      type: object
      properties:
        language:
          $ref: '#/components/schemas/FallbackAzureSpeechTranscriberLanguage'
    FallbackCustomTranscriber:
      title: FallbackCustomTranscriber
      required:
      - server
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
    FallbackDeepgramTranscriber:
      title: FallbackDeepgramTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/DeepgramTranscriberModel'
        language:
          $ref: '#/components/schemas/DeepgramTranscriberLanguage'
        smartFormat:
          type: boolean
          description: This will be use smart format option provided by Deepgram. It's default disabled because it can sometimes format numbers as times but it's getting better.
          nullable: true
        codeSwitchingEnabled:
          type: boolean
          description: |-
            This automatically switches the transcriber's language when the customer's language changes. Defaults to false.

            Usage:
            - If your customers switch languages mid-call, you can set this to true.

            Note:
            - To detect language changes, Vapi uses a custom trained model. Languages supported (X = limited support):
              1. Arabic
              2. Bengali
              3. Cantonese
              4. Chinese
              5. Chinese Simplified (X)
              6. Chinese Traditional (X)
              7. English
              8. Farsi (X)
              9. French
              10. German
              11. Haitian Creole (X)
              12. Hindi
              13. Italian
              14. Japanese
              15. Korean
              16. Portuguese
              17. Russian
              18. Spanish
              19. Thai
              20. Urdu
              21. Vietnamese
            - To receive `language-change-detected` webhook events, add it to `assistant.serverMessages`.

            @default false
          nullable: true
        mipOptOut:
          type: boolean
          description: |-
            If set to true, this will add mip_opt_out=true as a query parameter of all API requests. See https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out

            This will only be used if you are using your own Deepgram API key.

            @default false
          nullable: true
        numerals:
          type: boolean
          description: |-
            If set to true, this will cause deepgram to convert spoken numbers to literal numerals. For example, "my phone number is nine-seven-two..." would become "my phone number is 972..."

            @default false
          nullable: true
        keywords:
          type: array
          description: "These keywords are passed to the transcription model to help it pick up use-case specific words. Anything that may not be a common word, like your company name, should be added here."
          nullable: true
          items:
            type: string
        keyterm:
          type: array
          description: Keyterm Prompting allows you improve Keyword Recall Rate (KRR) for important keyterms or phrases up to 90%.
          nullable: true
          items:
            type: string
        endpointing:
          type: number
          description: |-
            This is the timeout after which Deepgram will send transcription on user silence. You can read in-depth documentation here: https://developers.deepgram.com/docs/endpointing.

            Here are the most important bits:
            - Defaults to 10. This is recommended for most use cases to optimize for latency.
            - 10 can cause some missing transcriptions since because of the shorter context. This mostly happens for one-word utterances. For those uses cases, it's recommended to try 300. It will add a bit of latency but the quality and reliability of the experience will be better.
            - If neither 10 nor 300 work, contact support@vapi.ai and we'll find another solution.

            @default 10
          format: double
          nullable: true
    FallbackElevenLabsTranscriberLanguage:
      title: FallbackElevenLabsTranscriberLanguage
      type: string
      enum:
      - aa
      - ab
      - ae
      - af
      - ak
      - am
      - an
      - ar
      - as
      - av
      - ay
      - az
      - ba
      - be
      - bg
      - bh
      - bi
      - bm
      - bn
      - bo
      - br
      - bs
      - ca
      - ce
      - ch
      - co
      - cr
      - cs
      - cu
      - cv
      - cy
      - da
      - de
      - dv
      - dz
      - ee
      - el
      - en
      - eo
      - es
      - et
      - eu
      - fa
      - ff
      - fi
      - fj
      - fo
      - fr
      - fy
      - ga
      - gd
      - gl
      - gn
      - gu
      - gv
      - ha
      - he
      - hi
      - ho
      - hr
      - ht
      - hu
      - hy
      - hz
      - ia
      - id
      - ie
      - ig
      - ii
      - ik
      - io
      - is
      - it
      - iu
      - ja
      - jv
      - ka
      - kg
      - ki
      - kj
      - kk
      - kl
      - km
      - kn
      - ko
      - kr
      - ks
      - ku
      - kv
      - kw
      - ky
      - la
      - lb
      - lg
      - li
      - ln
      - lo
      - lt
      - lu
      - lv
      - mg
      - mh
      - mi
      - mk
      - ml
      - mn
      - mr
      - ms
      - mt
      - my
      - na
      - nb
      - nd
      - ne
      - ng
      - nl
      - nn
      - "no"
      - nr
      - nv
      - ny
      - oc
      - oj
      - om
      - or
      - os
      - pa
      - pi
      - pl
      - ps
      - pt
      - qu
      - rm
      - rn
      - ro
      - ru
      - rw
      - sa
      - sc
      - sd
      - se
      - sg
      - si
      - sk
      - sl
      - sm
      - sn
      - so
      - sq
      - sr
      - ss
      - st
      - su
      - sv
      - sw
      - ta
      - te
      - tg
      - th
      - ti
      - tk
      - tl
      - tn
      - to
      - tr
      - ts
      - tt
      - tw
      - ty
      - ug
      - uk
      - ur
      - uz
      - ve
      - vi
      - vo
      - wa
      - wo
      - xh
      - yi
      - yue
      - yo
      - za
      - zh
      - zu
    FallbackElevenLabsTranscriber:
      title: FallbackElevenLabsTranscriber
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used for the transcription.
          nullable: true
          enum:
          - scribe_v1
        language:
          $ref: '#/components/schemas/FallbackElevenLabsTranscriberLanguage'
    FallbackGladiaTranscriberModel:
      title: FallbackGladiaTranscriberModel
      type: string
      enum:
      - fast
      - accurate
    FallbackGladiaTranscriberLanguageBehaviour:
      title: FallbackGladiaTranscriberLanguageBehaviour
      type: string
      enum:
      - manual
      - automatic single language
      - automatic multiple languages
    FallbackGladiaTranscriberLanguage:
      title: FallbackGladiaTranscriberLanguage
      type: string
      description: Defines the language to use for the transcription. Required when languageBehaviour is 'manual'.
      enum:
      - af
      - sq
      - am
      - ar
      - hy
      - as
      - az
      - ba
      - eu
      - be
      - bn
      - bs
      - br
      - bg
      - ca
      - zh
      - hr
      - cs
      - da
      - nl
      - en
      - et
      - fo
      - fi
      - fr
      - gl
      - ka
      - de
      - el
      - gu
      - ht
      - ha
      - haw
      - he
      - hi
      - hu
      - is
      - id
      - it
      - ja
      - jv
      - kn
      - kk
      - km
      - ko
      - lo
      - la
      - lv
      - ln
      - lt
      - lb
      - mk
      - mg
      - ms
      - ml
      - mt
      - mi
      - mr
      - mn
      - my
      - ne
      - "no"
      - nn
      - oc
      - ps
      - fa
      - pl
      - pt
      - pa
      - ro
      - ru
      - sa
      - sr
      - sn
      - sd
      - si
      - sk
      - sl
      - so
      - es
      - su
      - sw
      - sv
      - tl
      - tg
      - ta
      - tt
      - te
      - th
      - bo
      - tr
      - tk
      - uk
      - ur
      - uz
      - vi
      - cy
      - yi
      - yo
    FallbackGladiaTranscriber:
      title: FallbackGladiaTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/FallbackGladiaTranscriberModel'
        languageBehaviour:
          $ref: '#/components/schemas/FallbackGladiaTranscriberLanguageBehaviour'
        language:
          $ref: '#/components/schemas/FallbackGladiaTranscriberLanguage'
        transcriptionHint:
          type: string
          description: |-
            Provides a custom vocabulary to the model to improve accuracy of transcribing context specific words, technical terms, names, etc. If empty, this argument is ignored.
            ⚠️ Warning ⚠️: Please be aware that the transcription_hint field has a character limit of 600. If you provide a transcription_hint longer than 600 characters, it will be automatically truncated to meet this limit.
          nullable: true
        prosody:
          type: boolean
          description: "If prosody is true, you will get a transcription that can contain prosodies i.e. (laugh) (giggles) (malefic laugh) (toss) (music)… Default value is false."
          nullable: true
        audioEnhancer:
          type: boolean
          description: "If true, audio will be pre-processed to improve accuracy but latency will increase. Default value is false."
          nullable: true
    FallbackSpeechmaticsTranscriberLanguage:
      title: FallbackSpeechmaticsTranscriberLanguage
      type: string
      enum:
      - auto
      - ar
      - ba
      - eu
      - be
      - bn
      - bg
      - yue
      - ca
      - hr
      - cs
      - da
      - nl
      - en
      - eo
      - et
      - fi
      - fr
      - gl
      - de
      - el
      - he
      - hi
      - hu
      - id
      - ia
      - ga
      - it
      - ja
      - ko
      - lv
      - lt
      - ms
      - mt
      - cmn
      - mr
      - mn
      - "no"
      - fa
      - pl
      - pt
      - ro
      - ru
      - sk
      - sl
      - es
      - sw
      - sv
      - ta
      - th
      - tr
      - uk
      - ur
      - ug
      - vi
      - cy
    FallbackSpeechmaticsTranscriber:
      title: FallbackSpeechmaticsTranscriber
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used for the transcription.
          nullable: true
          enum:
          - default
        language:
          $ref: '#/components/schemas/FallbackSpeechmaticsTranscriberLanguage'
    FallbackTalkscriberTranscriberLanguage:
      title: FallbackTalkscriberTranscriberLanguage
      type: string
      description: "This is the language that will be set for the transcription. The list of languages Whisper supports can be found here: https://github.com/openai/whisper/blob/main/whisper/tokenizer.py"
      enum:
      - en
      - zh
      - de
      - es
      - ru
      - ko
      - fr
      - ja
      - pt
      - tr
      - pl
      - ca
      - nl
      - ar
      - sv
      - it
      - id
      - hi
      - fi
      - vi
      - he
      - uk
      - el
      - ms
      - cs
      - ro
      - da
      - hu
      - ta
      - "no"
      - th
      - ur
      - hr
      - bg
      - lt
      - la
      - mi
      - ml
      - cy
      - sk
      - te
      - fa
      - lv
      - bn
      - sr
      - az
      - sl
      - kn
      - et
      - mk
      - br
      - eu
      - is
      - hy
      - ne
      - mn
      - bs
      - kk
      - sq
      - sw
      - gl
      - mr
      - pa
      - si
      - km
      - sn
      - yo
      - so
      - af
      - oc
      - ka
      - be
      - tg
      - sd
      - gu
      - am
      - yi
      - lo
      - uz
      - fo
      - ht
      - ps
      - tk
      - nn
      - mt
      - sa
      - lb
      - my
      - bo
      - tl
      - mg
      - as
      - tt
      - haw
      - ln
      - ha
      - ba
      - jw
      - su
      - yue
    FallbackTalkscriberTranscriber:
      title: FallbackTalkscriberTranscriber
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used for the transcription.
          nullable: true
          enum:
          - whisper
        language:
          $ref: '#/components/schemas/FallbackTalkscriberTranscriberLanguage'
    FallbackGoogleTranscriberModel:
      title: FallbackGoogleTranscriberModel
      type: string
      description: This is the model that will be used for the transcription.
      enum:
      - gemini-2.0-flash-thinking-exp
      - gemini-2.0-pro-exp-02-05
      - gemini-2.0-flash
      - gemini-2.0-flash-lite
      - gemini-2.0-flash-lite-preview-02-05
      - gemini-2.0-flash-exp
      - gemini-2.0-flash-realtime-exp
      - gemini-1.5-flash
      - gemini-1.5-flash-002
      - gemini-1.5-pro
      - gemini-1.5-pro-002
      - gemini-1.0-pro
    FallbackGoogleTranscriberLanguage:
      title: FallbackGoogleTranscriberLanguage
      type: string
      description: This is the language that will be set for the transcription.
      enum:
      - Multilingual
      - Arabic
      - Bengali
      - Bulgarian
      - Chinese
      - Croatian
      - Czech
      - Danish
      - Dutch
      - English
      - Estonian
      - Finnish
      - French
      - German
      - Greek
      - Hebrew
      - Hindi
      - Hungarian
      - Indonesian
      - Italian
      - Japanese
      - Korean
      - Latvian
      - Lithuanian
      - Norwegian
      - Polish
      - Portuguese
      - Romanian
      - Russian
      - Serbian
      - Slovak
      - Slovenian
      - Spanish
      - Swahili
      - Swedish
      - Thai
      - Turkish
      - Ukrainian
      - Vietnamese
    FallbackGoogleTranscriber:
      title: FallbackGoogleTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/FallbackGoogleTranscriberModel'
        language:
          $ref: '#/components/schemas/FallbackGoogleTranscriberLanguage'
    FallbackOpenAiTranscriberModel:
      title: FallbackOpenAiTranscriberModel
      type: string
      description: This is the model that will be used for the transcription.
      enum:
      - gpt-4o-transcribe
      - gpt-4o-mini-transcribe
    FallbackOpenAiTranscriberLanguage:
      title: FallbackOpenAiTranscriberLanguage
      type: string
      description: This is the language that will be set for the transcription.
      enum:
      - af
      - ar
      - hy
      - az
      - be
      - bs
      - bg
      - ca
      - zh
      - hr
      - cs
      - da
      - nl
      - en
      - et
      - fi
      - fr
      - gl
      - de
      - el
      - he
      - hi
      - hu
      - is
      - id
      - it
      - ja
      - kn
      - kk
      - ko
      - lv
      - lt
      - mk
      - ms
      - mr
      - mi
      - ne
      - "no"
      - fa
      - pl
      - pt
      - ro
      - ru
      - sr
      - sk
      - sl
      - es
      - sw
      - sv
      - tl
      - ta
      - th
      - tr
      - uk
      - ur
      - vi
      - cy
    FallbackOpenAiTranscriber:
      title: FallbackOpenAiTranscriber
      required:
      - model
      type: object
      properties:
        model:
          $ref: '#/components/schemas/FallbackOpenAiTranscriberModel'
        language:
          $ref: '#/components/schemas/FallbackOpenAiTranscriberLanguage'
    LangfuseObservabilityPlan:
      title: LangfuseObservabilityPlan
      required:
      - provider
      - tags
      type: object
      properties:
        provider:
          type: string
          enum:
          - langfuse
        tags:
          type: array
          description: This is an array of tags to be added to the Langfuse trace. Tags allow you to categorize and filter traces. https://langfuse.com/docs/tracing-features/tags
          items:
            type: string
        metadata:
          type: object
          additionalProperties: true
          description: |-
            This is a JSON object that will be added to the Langfuse trace. Traces can be enriched with metadata to better understand your users, application, and experiments. https://langfuse.com/docs/tracing-features/metadata
            By default it includes the call metadata, assistant metadata, and assistant overrides.
          nullable: true
    TextContentLanguage:
      title: TextContentLanguage
      type: string
      enum:
      - aa
      - ab
      - ae
      - af
      - ak
      - am
      - an
      - ar
      - as
      - av
      - ay
      - az
      - ba
      - be
      - bg
      - bh
      - bi
      - bm
      - bn
      - bo
      - br
      - bs
      - ca
      - ce
      - ch
      - co
      - cr
      - cs
      - cu
      - cv
      - cy
      - da
      - de
      - dv
      - dz
      - ee
      - el
      - en
      - eo
      - es
      - et
      - eu
      - fa
      - ff
      - fi
      - fj
      - fo
      - fr
      - fy
      - ga
      - gd
      - gl
      - gn
      - gu
      - gv
      - ha
      - he
      - hi
      - ho
      - hr
      - ht
      - hu
      - hy
      - hz
      - ia
      - id
      - ie
      - ig
      - ii
      - ik
      - io
      - is
      - it
      - iu
      - ja
      - jv
      - ka
      - kg
      - ki
      - kj
      - kk
      - kl
      - km
      - kn
      - ko
      - kr
      - ks
      - ku
      - kv
      - kw
      - ky
      - la
      - lb
      - lg
      - li
      - ln
      - lo
      - lt
      - lu
      - lv
      - mg
      - mh
      - mi
      - mk
      - ml
      - mn
      - mr
      - ms
      - mt
      - my
      - na
      - nb
      - nd
      - ne
      - ng
      - nl
      - nn
      - "no"
      - nr
      - nv
      - ny
      - oc
      - oj
      - om
      - or
      - os
      - pa
      - pi
      - pl
      - ps
      - pt
      - qu
      - rm
      - rn
      - ro
      - ru
      - rw
      - sa
      - sc
      - sd
      - se
      - sg
      - si
      - sk
      - sl
      - sm
      - sn
      - so
      - sq
      - sr
      - ss
      - st
      - su
      - sv
      - sw
      - ta
      - te
      - tg
      - th
      - ti
      - tk
      - tl
      - tn
      - to
      - tr
      - ts
      - tt
      - tw
      - ty
      - ug
      - uk
      - ur
      - uz
      - ve
      - vi
      - vo
      - wa
      - wo
      - xh
      - yi
      - yue
      - yo
      - za
      - zh
      - zu
    TextContent:
      title: TextContent
      required:
      - language
      - text
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - text
        text:
          type: string
        language:
          $ref: '#/components/schemas/TextContentLanguage'
    ConditionOperator:
      title: ConditionOperator
      type: string
      description: This is the operator you want to use to compare the parameter and value.
      enum:
      - eq
      - neq
      - gt
      - gte
      - lt
      - lte
    Condition:
      title: Condition
      required:
      - operator
      - param
      - value
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/ConditionOperator'
        param:
          type: string
          description: This is the name of the parameter that you want to check.
        value:
          type: object
          additionalProperties: true
          description: This is the value you want to compare against the parameter.
    ToolMessageStart:
      title: ToolMessageStart
      type: object
      properties:
        contents:
          type: array
          description: |-
            This is an alternative to the `content` property. It allows to specify variants of the same content, one per language.

            Usage:
            - If your assistants are multilingual, you can provide content for each language.
            - If you don't provide content for a language, the first item in the array will be automatically translated to the active language at that moment.

            This will override the `content` property.
          nullable: true
          items:
            $ref: '#/components/schemas/TextContent'
        blocking:
          type: boolean
          description: |-
            This is an optional boolean that if true, the tool call will only trigger after the message is spoken. Default is false.

            @default false
          nullable: true
        content:
          type: string
          description: This is the content that the assistant says when this message is triggered.
          nullable: true
        conditions:
          type: array
          description: This is an optional array of conditions that the tool call arguments must meet in order for this message to be triggered.
          nullable: true
          items:
            $ref: '#/components/schemas/Condition'
    ToolMessageCompleteRole:
      title: ToolMessageCompleteRole
      type: string
      description: |-
        This is optional and defaults to "assistant".

        When role=assistant, `content` is said out loud.

        When role=system, `content` is passed to the model in a system message. Example:
            system: default one
            assistant:
            user:
            assistant:
            user:
            assistant:
            user:
            assistant: tool called
            tool: your server response
            <--- system prompt as hint
            ---> model generates response which is spoken
        This is useful when you want to provide a hint to the model about what to say next.
      enum:
      - assistant
      - system
    ToolMessageComplete:
      title: ToolMessageComplete
      type: object
      properties:
        contents:
          type: array
          description: |-
            This is an alternative to the `content` property. It allows to specify variants of the same content, one per language.

            Usage:
            - If your assistants are multilingual, you can provide content for each language.
            - If you don't provide content for a language, the first item in the array will be automatically translated to the active language at that moment.

            This will override the `content` property.
          nullable: true
          items:
            $ref: '#/components/schemas/TextContent'
        role:
          $ref: '#/components/schemas/ToolMessageCompleteRole'
        endCallAfterSpokenEnabled:
          type: boolean
          description: |-
            This is an optional boolean that if true, the call will end after the message is spoken. Default is false.

            This is ignored if `role` is set to `system`.

            @default false
          nullable: true
        content:
          type: string
          description: This is the content that the assistant says when this message is triggered.
          nullable: true
        conditions:
          type: array
          description: This is an optional array of conditions that the tool call arguments must meet in order for this message to be triggered.
          nullable: true
          items:
            $ref: '#/components/schemas/Condition'
    ToolMessageFailed:
      title: ToolMessageFailed
      type: object
      properties:
        contents:
          type: array
          description: |-
            This is an alternative to the `content` property. It allows to specify variants of the same content, one per language.

            Usage:
            - If your assistants are multilingual, you can provide content for each language.
            - If you don't provide content for a language, the first item in the array will be automatically translated to the active language at that moment.

            This will override the `content` property.
          nullable: true
          items:
            $ref: '#/components/schemas/TextContent'
        endCallAfterSpokenEnabled:
          type: boolean
          description: |-
            This is an optional boolean that if true, the call will end after the message is spoken. Default is false.

            @default false
          nullable: true
        content:
          type: string
          description: This is the content that the assistant says when this message is triggered.
          nullable: true
        conditions:
          type: array
          description: This is an optional array of conditions that the tool call arguments must meet in order for this message to be triggered.
          nullable: true
          items:
            $ref: '#/components/schemas/Condition'
    ToolMessageDelayed:
      title: ToolMessageDelayed
      type: object
      properties:
        contents:
          type: array
          description: |-
            This is an alternative to the `content` property. It allows to specify variants of the same content, one per language.

            Usage:
            - If your assistants are multilingual, you can provide content for each language.
            - If you don't provide content for a language, the first item in the array will be automatically translated to the active language at that moment.

            This will override the `content` property.
          nullable: true
          items:
            $ref: '#/components/schemas/TextContent'
        timingMilliseconds:
          type: number
          description: The number of milliseconds to wait for the server response before saying this message.
          format: double
          nullable: true
        content:
          type: string
          description: This is the content that the assistant says when this message is triggered.
          nullable: true
        conditions:
          type: array
          description: This is an optional array of conditions that the tool call arguments must meet in order for this message to be triggered.
          nullable: true
          items:
            $ref: '#/components/schemas/Condition'
    JsonSchemaType:
      title: JsonSchemaType
      type: string
      description: |-
        This is the type of output you'd like.

        `string`, `number`, `integer`, `boolean` are the primitive types and should be obvious.

        `array` and `object` are more interesting and quite powerful. They allow you to define nested structures.

        For `array`, you can define the schema of the items in the array using the `items` property.

        For `object`, you can define the properties of the object using the `properties` property.
      enum:
      - string
      - number
      - integer
      - boolean
      - array
      - object
    JsonSchema:
      title: JsonSchema
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/JsonSchemaType'
        items:
          type: object
          additionalProperties: true
          description: |-
            This is required if the type is "array". This is the schema of the items in the array.

            This is of type JsonSchema. However, Swagger doesn't support circular references.
          nullable: true
        properties:
          type: object
          additionalProperties: true
          description: |-
            This is required if the type is "object". This specifies the properties of the object.

            This is a map of string to JsonSchema. However, Swagger doesn't support circular references.
          nullable: true
        description:
          type: string
          description: This is the description to help the model understand what it needs to output.
          nullable: true
        required:
          type: array
          description: |-
            This is a list of properties that are required.

            This only makes sense if the type is "object".
          nullable: true
          items:
            type: string
        regex:
          type: string
          description: This is a regex that will be used to validate data in question.
          nullable: true
        value:
          type: string
          description: This the value that will be used in filling the property.
          nullable: true
        target:
          type: string
          description: This the target variable that will be filled with the value of this property.
          nullable: true
        enum:
          type: array
          description: This array specifies the allowed values that can be used to restrict the output of the model.
          nullable: true
          items:
            type: string
    OpenAiFunctionParameters:
      title: OpenAiFunctionParameters
      required:
      - properties
      - type
      type: object
      properties:
        type:
          type: string
          description: This must be set to 'object'. It instructs the model to return a JSON object containing the function call properties.
          enum:
          - object
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JsonSchema'
          description: |-
            This provides a description of the properties required by the function.
            JSON Schema can be used to specify expectations for each property.
            Refer to [this doc](https://ajv.js.org/json-schema.html#json-data-type) for a comprehensive guide on JSON Schema.
        required:
          type: array
          description: This specifies the properties that are required by the function.
          nullable: true
          items:
            type: string
    OpenAiFunction:
      title: OpenAiFunction
      required:
      - name
      type: object
      properties:
        strict:
          type: boolean
          description: |-
            This is a boolean that controls whether to enable strict schema adherence when generating the function call. If set to true, the model will follow the exact schema defined in the parameters field. Only a subset of JSON Schema is supported when strict is true. Learn more about Structured Outputs in the [OpenAI guide](https://openai.com/index/introducing-structured-outputs-in-the-api/).

            @default false
          nullable: true
        name:
          type: string
          description: |-
            This is the the name of the function to be called.

            Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
        description:
          type: string
          description: "This is the description of what the function does, used by the AI to choose when and how to call the function."
          nullable: true
        parameters:
          $ref: '#/components/schemas/OpenAiFunctionParameters'
    CreateDtmfToolDtoMessagesItem:
      title: CreateDtmfToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateDtmfToolDto:
      title: CreateDtmfToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateDtmfToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateEndCallToolDtoMessagesItem:
      title: CreateEndCallToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateEndCallToolDto:
      title: CreateEndCallToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateEndCallToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateVoicemailToolDtoMessagesItem:
      title: CreateVoicemailToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateVoicemailToolDto:
      title: CreateVoicemailToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateVoicemailToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateFunctionToolDtoMessagesItem:
      title: CreateFunctionToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateFunctionToolDto:
      title: CreateFunctionToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateFunctionToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GhlToolMetadata:
      title: GhlToolMetadata
      type: object
      properties:
        workflowId:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
    CreateGhlToolDtoMessagesItem:
      title: CreateGhlToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateGhlToolDto:
      title: CreateGhlToolDto
      required:
      - metadata
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateGhlToolDtoMessagesItem'
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    MakeToolMetadata:
      title: MakeToolMetadata
      type: object
      properties:
        scenarioId:
          type: number
          format: double
          nullable: true
        triggerHookId:
          type: number
          format: double
          nullable: true
    CreateMakeToolDtoMessagesItem:
      title: CreateMakeToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateMakeToolDto:
      title: CreateMakeToolDto
      required:
      - metadata
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateMakeToolDtoMessagesItem'
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CustomMessage:
      title: CustomMessage
      required:
      - type
      type: object
      properties:
        contents:
          type: array
          description: |-
            This is an alternative to the `content` property. It allows to specify variants of the same content, one per language.

            Usage:
            - If your assistants are multilingual, you can provide content for each language.
            - If you don't provide content for a language, the first item in the array will be automatically translated to the active language at that moment.

            This will override the `content` property.
          nullable: true
          items:
            $ref: '#/components/schemas/TextContent'
        type:
          type: string
          description: This is a custom message.
          enum:
          - custom-message
        content:
          type: string
          description: This is the content that the assistant will say when this message is triggered.
          nullable: true
    TransferDestinationAssistantMessage:
      title: TransferDestinationAssistantMessage
      description: |-
        This is spoken to the customer before connecting them to the destination.

        Usage:
        - If this is not provided and transfer tool messages is not provided, default is "Transferring the call now".
        - If set to "", nothing is spoken. This is useful when you want to silently transfer. This is especially useful when transferring between assistants in a squad. In this scenario, you likely also want to set `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message` for the destination assistant.

        This accepts a string or a ToolMessageStart class. Latter is useful if you want to specify multiple messages for different languages through the `contents` field.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/CustomMessage'
    TransferDestinationAssistant:
      title: TransferDestinationAssistant
      required:
      - assistantName
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationAssistantMessage'
        transferMode:
          $ref: '#/components/schemas/TransferMode'
        assistantName:
          type: string
          description: This is the assistant to transfer the call to.
        description:
          type: string
          description: "This is the description of the destination, used by the AI to choose when and how to transfer the call."
          nullable: true
    TransferDestinationStepMessage:
      title: TransferDestinationStepMessage
      description: |-
        This is spoken to the customer before connecting them to the destination.

        Usage:
        - If this is not provided and transfer tool messages is not provided, default is "Transferring the call now".
        - If set to "", nothing is spoken. This is useful when you want to silently transfer. This is especially useful when transferring between assistants in a squad. In this scenario, you likely also want to set `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message` for the destination assistant.

        This accepts a string or a ToolMessageStart class. Latter is useful if you want to specify multiple messages for different languages through the `contents` field.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/CustomMessage'
    TransferDestinationStep:
      title: TransferDestinationStep
      required:
      - stepName
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationStepMessage'
        stepName:
          type: string
          description: This is the step to transfer to.
        description:
          type: string
          description: "This is the description of the destination, used by the AI to choose when and how to transfer the call."
          nullable: true
    SummaryPlan:
      title: SummaryPlan
      type: object
      properties:
        messages:
          type: array
          description: |-
            These are the messages used to generate the summary.

            @default: ```
            [
              {
                "role": "system",
                "content": "You are an expert note-taker. You will be given a transcript of a call. Summarize the call in 2-3 sentences. DO NOT return anything except the summary."
              },
              {
                "role": "user",
                "content": "Here is the transcript:\n\n{{transcript}}\n\n"
              }
            ]```

            You can customize by providing any messages you want.

            Here are the template variables available:
            - {{transcript}}: The transcript of the call from `call.artifact.transcript`- {{systemPrompt}}: The system prompt of the call from `assistant.model.messages[type=system].content`
          nullable: true
          items:
            type: object
            additionalProperties: true
        enabled:
          type: boolean
          description: |-
            This determines whether a summary is generated and stored in `call.analysis.summary`. Defaults to true.

            Usage:
            - If you want to disable the summary, set this to false.

            @default true
          nullable: true
        timeoutSeconds:
          type: number
          description: |-
            This is how long the request is tried before giving up. When request times out, `call.analysis.summary` will be empty.

            Usage:
            - To guarantee the summary is generated, set this value high. Note, this will delay the end of call report in cases where model is slow to respond.

            @default 5 seconds
          format: double
          nullable: true
    TransferPlanMode:
      title: TransferPlanMode
      type: string
      description: |-
        This configures how transfer is executed and the experience of the destination party receiving the call.

        Usage:
        - `blind-transfer`: The assistant forwards the call to the destination without any message or summary.
        - `blind-transfer-add-summary-to-sip-header`: The assistant forwards the call to the destination and adds a SIP header X-Transfer-Summary to the call to include the summary.
        - `warm-transfer-say-message`: The assistant dials the destination, delivers the `message` to the destination party, connects the customer, and leaves the call.
        - `warm-transfer-say-summary`: The assistant dials the destination, provides a summary of the call to the destination party, connects the customer, and leaves the call.
        - `warm-transfer-wait-for-operator-to-speak-first-and-then-say-message`: The assistant dials the destination, waits for the operator to speak, delivers the `message` to the destination party, and then connects the customer.
        - `warm-transfer-wait-for-operator-to-speak-first-and-then-say-summary`: The assistant dials the destination, waits for the operator to speak, provides a summary of the call to the destination party, and then connects the customer.
        - `warm-transfer-twiml`: The assistant dials the destination, executes the twiml instructions on the destination call leg, connects the customer, and leaves the call.

        @default 'blind-transfer'
      enum:
      - blind-transfer
      - blind-transfer-add-summary-to-sip-header
      - warm-transfer-say-message
      - warm-transfer-say-summary
      - warm-transfer-twiml
      - warm-transfer-wait-for-operator-to-speak-first-and-then-say-message
      - warm-transfer-wait-for-operator-to-speak-first-and-then-say-summary
    TransferPlanMessage:
      title: TransferPlanMessage
      description: |-
        This is the message the assistant will deliver to the destination party before connecting the customer.

        Usage:
        - Used only when `mode` is `blind-transfer-add-summary-to-sip-header`, `warm-transfer-say-message` or `warm-transfer-wait-for-operator-to-speak-first-and-then-say-message`.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/CustomMessage'
    TransferPlan:
      title: TransferPlan
      required:
      - mode
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/TransferPlanMode'
        message:
          $ref: '#/components/schemas/TransferPlanMessage'
        sipVerb:
          type: object
          additionalProperties: true
          description: |-
            This specifies the SIP verb to use while transferring the call.
            - 'refer': Uses SIP REFER to transfer the call (default)
            - 'bye': Ends current call with SIP BYE
            - 'dial': Uses SIP DIAL to transfer the call
          nullable: true
        twiml:
          type: string
          description: |-
            This is the TwiML instructions to execute on the destination call leg before connecting the customer.

            Usage:
            - Used only when `mode` is `warm-transfer-twiml`.
            - Supports only `Play`, `Say`, `Gather`, `Hangup` and `Pause` verbs.
            - Maximum length is 4096 characters.

            Example:
            ```
            <Say voice="alice" language="en-US">Hello, transferring a customer to you.</Say>
            <Pause length="2"/>
            <Say>They called about billing questions.</Say>
            ```
          nullable: true
        summaryPlan:
          $ref: '#/components/schemas/SummaryPlan'
    TransferDestinationNumberMessage:
      title: TransferDestinationNumberMessage
      description: |-
        This is spoken to the customer before connecting them to the destination.

        Usage:
        - If this is not provided and transfer tool messages is not provided, default is "Transferring the call now".
        - If set to "", nothing is spoken. This is useful when you want to silently transfer. This is especially useful when transferring between assistants in a squad. In this scenario, you likely also want to set `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message` for the destination assistant.

        This accepts a string or a ToolMessageStart class. Latter is useful if you want to specify multiple messages for different languages through the `contents` field.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/CustomMessage'
    TransferDestinationNumber:
      title: TransferDestinationNumber
      required:
      - number
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationNumberMessage'
        numberE164CheckEnabled:
          type: boolean
          description: |-
            This is the flag to toggle the E164 check for the `number` field. This is an advanced property which should be used if you know your use case requires it.

            Use cases:
            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`, or `abc`. This is useful for dialing out to non-E164 numbers on your SIP trunks.
            - `true` (default): To allow only E164 numbers like `+14155551234`. This is standard for PSTN calls.

            If `false`, the `number` is still required to only contain alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).

            @default true (E164 check is enabled)
          nullable: true
        number:
          type: string
          description: This is the phone number to transfer the call to.
        extension:
          type: string
          description: This is the extension to dial after transferring the call to the `number`.
          nullable: true
        callerId:
          type: string
          description: |-
            This is the caller ID to use when transferring the call to the `number`.

            Usage:
            - If not provided, the caller ID will be the number the call is coming from. Example, +14151111111 calls in to and the assistant transfers out to +16470000000. +16470000000 will see +14151111111 as the caller.
            - To change this behavior, provide a `callerId`.
            - Set to '{{customer.number}}' to always use the customer's number as the caller ID.
            - Set to '{{phoneNumber.number}}' to always use the phone number of the assistant as the caller ID.
            - Set to any E164 number to always use that number as the caller ID. This needs to be a number that is owned or verified by your Transport provider like Twilio.

            For Twilio, you can read up more here: https://www.twilio.com/docs/voice/twiml/dial#callerid
          nullable: true
        transferPlan:
          $ref: '#/components/schemas/TransferPlan'
        description:
          type: string
          description: "This is the description of the destination, used by the AI to choose when and how to transfer the call."
          nullable: true
    TransferDestinationSipMessage:
      title: TransferDestinationSipMessage
      description: |-
        This is spoken to the customer before connecting them to the destination.

        Usage:
        - If this is not provided and transfer tool messages is not provided, default is "Transferring the call now".
        - If set to "", nothing is spoken. This is useful when you want to silently transfer. This is especially useful when transferring between assistants in a squad. In this scenario, you likely also want to set `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message` for the destination assistant.

        This accepts a string or a ToolMessageStart class. Latter is useful if you want to specify multiple messages for different languages through the `contents` field.
      oneOf:
      - type: string
      - $ref: '#/components/schemas/CustomMessage'
    TransferDestinationSip:
      title: TransferDestinationSip
      required:
      - sipUri
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationSipMessage'
        sipUri:
          type: string
          description: This is the SIP URI to transfer the call to.
        transferPlan:
          $ref: '#/components/schemas/TransferPlan'
        sipHeaders:
          type: object
          additionalProperties: true
          description: These are custom headers to be added to SIP refer during transfer call.
          nullable: true
        description:
          type: string
          description: "This is the description of the destination, used by the AI to choose when and how to transfer the call."
          nullable: true
    CreateTransferCallToolDtoMessagesItem:
      title: CreateTransferCallToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateTransferCallToolDtoDestinationsItem:
      title: CreateTransferCallToolDtoDestinationsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - assistant
        - $ref: '#/components/schemas/TransferDestinationAssistant'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - step
        - $ref: '#/components/schemas/TransferDestinationStep'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    CreateTransferCallToolDto:
      title: CreateTransferCallToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateTransferCallToolDtoMessagesItem'
        destinations:
          type: array
          description: "These are the destinations that the call can be transferred to. If no destinations are provided, server.url will be used to get the transfer destination once the tool is called."
          nullable: true
          items:
            $ref: '#/components/schemas/CreateTransferCallToolDtoDestinationsItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateCustomKnowledgeBaseDto:
      title: CreateCustomKnowledgeBaseDto
      required:
      - server
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
    KnowledgeBaseModel:
      title: KnowledgeBaseModel
      type: string
      description: The model to use for the knowledge base
      enum:
      - gemini-2.0-flash-thinking-exp
      - gemini-2.0-pro-exp-02-05
      - gemini-2.0-flash
      - gemini-2.0-flash-lite
      - gemini-2.0-flash-lite-preview-02-05
      - gemini-2.0-flash-exp
      - gemini-2.0-flash-realtime-exp
      - gemini-1.5-flash
      - gemini-1.5-flash-002
      - gemini-1.5-pro
      - gemini-1.5-pro-002
      - gemini-1.0-pro
    KnowledgeBase:
      title: KnowledgeBase
      required:
      - description
      - fileIds
      - name
      - provider
      type: object
      properties:
        name:
          type: string
          description: The name of the knowledge base
        provider:
          type: string
          description: The provider of the knowledge base
          enum:
          - google
        model:
          $ref: '#/components/schemas/KnowledgeBaseModel'
        description:
          type: string
          description: A description of the knowledge base
        fileIds:
          type: array
          description: The file IDs associated with this knowledge base
          items:
            type: string
    CreateQueryToolDtoMessagesItem:
      title: CreateQueryToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateQueryToolDto:
      title: CreateQueryToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateQueryToolDtoMessagesItem'
        knowledgeBases:
          type: array
          description: The knowledge bases to query
          nullable: true
          items:
            $ref: '#/components/schemas/KnowledgeBase'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateGoogleCalendarCreateEventToolDtoMessagesItem:
      title: CreateGoogleCalendarCreateEventToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateGoogleCalendarCreateEventToolDto:
      title: CreateGoogleCalendarCreateEventToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateGoogleSheetsRowAppendToolDtoMessagesItem:
      title: CreateGoogleSheetsRowAppendToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateGoogleSheetsRowAppendToolDto:
      title: CreateGoogleSheetsRowAppendToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateGoogleCalendarCheckAvailabilityToolDtoMessagesItem:
      title: CreateGoogleCalendarCheckAvailabilityToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateGoogleCalendarCheckAvailabilityToolDto:
      title: CreateGoogleCalendarCheckAvailabilityToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateSlackSendMessageToolDtoMessagesItem:
      title: CreateSlackSendMessageToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateSlackSendMessageToolDto:
      title: CreateSlackSendMessageToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateSlackSendMessageToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    AnyscaleModelToolsItem:
      title: AnyscaleModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    AnyscaleModel:
      title: AnyscaleModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/AnyscaleModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    AnthropicThinkingConfig:
      title: AnthropicThinkingConfig
      required:
      - budgetTokens
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - enabled
        budgetTokens:
          type: number
          description: |-
            The maximum number of tokens to allocate for thinking.
            Must be between 1024 and 100000 tokens.
          format: double
    AnthropicModelToolsItem:
      title: AnthropicModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    AnthropicModelModel:
      title: AnthropicModelModel
      type: string
      description: The specific Anthropic/Claude model that will be used.
      enum:
      - claude-3-opus-20240229
      - claude-3-sonnet-20240229
      - claude-3-haiku-20240307
      - claude-3-5-sonnet-20240620
      - claude-3-5-sonnet-20241022
      - claude-3-5-haiku-20241022
      - claude-3-7-sonnet-20250219
    AnthropicModel:
      title: AnthropicModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/AnthropicModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          $ref: '#/components/schemas/AnthropicModelModel'
        thinking:
          $ref: '#/components/schemas/AnthropicThinkingConfig'
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    CerebrasModelToolsItem:
      title: CerebrasModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    CerebrasModelModel:
      title: CerebrasModelModel
      type: string
      description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
      enum:
      - llama3.1-8b
      - llama-3.3-70b
    CerebrasModel:
      title: CerebrasModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/CerebrasModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          $ref: '#/components/schemas/CerebrasModelModel'
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    CustomLlmModelToolsItem:
      title: CustomLlmModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    CustomLlmModelMetadataSendMode:
      title: CustomLlmModelMetadataSendMode
      type: string
      description: |-
        This determines whether metadata is sent in requests to the custom provider.

        - `off` will not send any metadata. payload will look like `{ messages }`
        - `variable` will send `assistant.metadata` as a variable on the payload. payload will look like `{ messages, metadata }`
        - `destructured` will send `assistant.metadata` fields directly on the payload. payload will look like `{ messages, ...metadata }`

        Further, `variable` and `destructured` will send `call`, `phoneNumber`, and `customer` objects in the payload.

        Default is `variable`.
      enum:
      - "off"
      - variable
      - destructured
    CustomLlmModel:
      title: CustomLlmModel
      required:
      - model
      - url
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/CustomLlmModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        metadataSendMode:
          $ref: '#/components/schemas/CustomLlmModelMetadataSendMode'
        url:
          type: string
          description: These is the URL we'll use for the OpenAI client's `baseURL`. Ex. https://openrouter.ai/api/v1
        timeoutSeconds:
          type: number
          description: This sets the timeout for the connection to the custom provider without needing to stream any tokens back. Default is 20 seconds.
          format: double
          nullable: true
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    DeepInfraModelToolsItem:
      title: DeepInfraModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    DeepInfraModel:
      title: DeepInfraModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/DeepInfraModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    DeepSeekModelToolsItem:
      title: DeepSeekModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    DeepSeekModelModel:
      title: DeepSeekModelModel
      type: string
      description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
      enum:
      - deepseek-chat
      - deepseek-reasoner
    DeepSeekModel:
      title: DeepSeekModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/DeepSeekModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          $ref: '#/components/schemas/DeepSeekModelModel'
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    GeminiMultimodalLivePrebuiltVoiceConfigVoiceName:
      title: GeminiMultimodalLivePrebuiltVoiceConfigVoiceName
      type: string
      enum:
      - Puck
      - Charon
      - Kore
      - Fenrir
      - Aoede
    GeminiMultimodalLivePrebuiltVoiceConfig:
      title: GeminiMultimodalLivePrebuiltVoiceConfig
      required:
      - voiceName
      type: object
      properties:
        voiceName:
          $ref: '#/components/schemas/GeminiMultimodalLivePrebuiltVoiceConfigVoiceName'
    GeminiMultimodalLiveVoiceConfig:
      title: GeminiMultimodalLiveVoiceConfig
      required:
      - prebuiltVoiceConfig
      type: object
      properties:
        prebuiltVoiceConfig:
          $ref: '#/components/schemas/GeminiMultimodalLivePrebuiltVoiceConfig'
    GeminiMultimodalLiveSpeechConfig:
      title: GeminiMultimodalLiveSpeechConfig
      required:
      - voiceConfig
      type: object
      properties:
        voiceConfig:
          $ref: '#/components/schemas/GeminiMultimodalLiveVoiceConfig'
    GoogleRealtimeConfig:
      title: GoogleRealtimeConfig
      type: object
      properties:
        topP:
          type: number
          description: |-
            This is the nucleus sampling parameter that controls the cumulative probability of tokens considered during text generation.
            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
          format: double
          nullable: true
        topK:
          type: number
          description: |-
            This is the top-k sampling parameter that limits the number of highest probability tokens considered during text generation.
            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
          format: double
          nullable: true
        presencePenalty:
          type: number
          description: |-
            This is the presence penalty parameter that influences the model's likelihood to repeat information by penalizing tokens based on their presence in the text.
            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
          format: double
          nullable: true
        frequencyPenalty:
          type: number
          description: |-
            This is the frequency penalty parameter that influences the model's likelihood to repeat tokens by penalizing them based on their frequency in the text.
            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
          format: double
          nullable: true
        speechConfig:
          $ref: '#/components/schemas/GeminiMultimodalLiveSpeechConfig'
    GoogleModelToolsItem:
      title: GoogleModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    GoogleModelModel:
      title: GoogleModelModel
      type: string
      description: This is the Google model that will be used.
      enum:
      - gemini-2.0-flash-thinking-exp
      - gemini-2.0-pro-exp-02-05
      - gemini-2.0-flash
      - gemini-2.0-flash-lite
      - gemini-2.0-flash-lite-preview-02-05
      - gemini-2.0-flash-exp
      - gemini-2.0-flash-realtime-exp
      - gemini-1.5-flash
      - gemini-1.5-flash-002
      - gemini-1.5-pro
      - gemini-1.5-pro-002
      - gemini-1.0-pro
    GoogleModel:
      title: GoogleModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/GoogleModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          $ref: '#/components/schemas/GoogleModelModel'
        realtimeConfig:
          $ref: '#/components/schemas/GoogleRealtimeConfig'
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    GroqModelToolsItem:
      title: GroqModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    GroqModelModel:
      title: GroqModelModel
      type: string
      description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
      enum:
      - deepseek-r1-distill-llama-70b
      - llama-3.3-70b-versatile
      - llama-3.1-405b-reasoning
      - llama-3.1-70b-versatile
      - llama-3.1-8b-instant
      - mixtral-8x7b-32768
      - llama3-8b-8192
      - llama3-70b-8192
      - gemma2-9b-it
    GroqModel:
      title: GroqModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/GroqModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          $ref: '#/components/schemas/GroqModelModel'
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    InflectionAiModelToolsItem:
      title: InflectionAiModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    InflectionAiModel:
      title: InflectionAiModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/InflectionAiModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
          enum:
          - inflection_3_pi
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    OpenAiModelToolsItem:
      title: OpenAiModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    OpenAiModelModel:
      title: OpenAiModelModel
      type: string
      description: This is the OpenAI model that will be used.
      enum:
      - gpt-4.5-preview
      - chatgpt-4o-latest
      - o3-mini
      - o1-preview
      - o1-preview-2024-09-12
      - o1-mini
      - o1-mini-2024-09-12
      - gpt-4o-realtime-preview-2024-10-01
      - gpt-4o-realtime-preview-2024-12-17
      - gpt-4o-mini-realtime-preview-2024-12-17
      - gpt-4o-mini
      - gpt-4o-mini-2024-07-18
      - gpt-4o
      - gpt-4o-2024-05-13
      - gpt-4o-2024-08-06
      - gpt-4o-2024-11-20
      - gpt-4-turbo
      - gpt-4-turbo-2024-04-09
      - gpt-4-turbo-preview
      - gpt-4-0125-preview
      - gpt-4-1106-preview
      - gpt-4
      - gpt-4-0613
      - gpt-3.5-turbo
      - gpt-3.5-turbo-0125
      - gpt-3.5-turbo-1106
      - gpt-3.5-turbo-16k
      - gpt-3.5-turbo-0613
    OpenAiModelFallbackModelsItem:
      title: OpenAiModelFallbackModelsItem
      type: string
      enum:
      - gpt-4.5-preview
      - chatgpt-4o-latest
      - o3-mini
      - o1-preview
      - o1-preview-2024-09-12
      - o1-mini
      - o1-mini-2024-09-12
      - gpt-4o-realtime-preview-2024-10-01
      - gpt-4o-realtime-preview-2024-12-17
      - gpt-4o-mini-realtime-preview-2024-12-17
      - gpt-4o-mini
      - gpt-4o-mini-2024-07-18
      - gpt-4o
      - gpt-4o-2024-05-13
      - gpt-4o-2024-08-06
      - gpt-4o-2024-11-20
      - gpt-4-turbo
      - gpt-4-turbo-2024-04-09
      - gpt-4-turbo-preview
      - gpt-4-0125-preview
      - gpt-4-1106-preview
      - gpt-4
      - gpt-4-0613
      - gpt-3.5-turbo
      - gpt-3.5-turbo-0125
      - gpt-3.5-turbo-1106
      - gpt-3.5-turbo-16k
      - gpt-3.5-turbo-0613
    OpenAiModel:
      title: OpenAiModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          $ref: '#/components/schemas/OpenAiModelModel'
        fallbackModels:
          type: array
          description: These are the fallback models that will be used if the primary model fails. This shouldn't be specified unless you have a specific reason to do so. Vapi will automatically find the fastest fallbacks that make sense.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiModelFallbackModelsItem'
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    OpenRouterModelToolsItem:
      title: OpenRouterModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    OpenRouterModel:
      title: OpenRouterModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenRouterModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    PerplexityAiModelToolsItem:
      title: PerplexityAiModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    PerplexityAiModel:
      title: PerplexityAiModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/PerplexityAiModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    TogetherAiModelToolsItem:
      title: TogetherAiModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    TogetherAiModel:
      title: TogetherAiModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/TogetherAiModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    AiEdgeCondition:
      title: AiEdgeCondition
      required:
      - matches
      type: object
      properties:
        matches:
          type: array
          items:
            type: string
    LogicEdgeCondition:
      title: LogicEdgeCondition
      required:
      - liquid
      type: object
      properties:
        liquid:
          type: string
    FailedEdgeCondition:
      title: FailedEdgeCondition
      type: object
      properties: {}
    EdgeCondition:
      title: EdgeCondition
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ai
        - $ref: '#/components/schemas/AiEdgeCondition'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - logic
        - $ref: '#/components/schemas/LogicEdgeCondition'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - failed
        - $ref: '#/components/schemas/FailedEdgeCondition'
    Edge:
      title: Edge
      required:
      - from
      - to
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/EdgeCondition'
        from:
          type: string
        to:
          type: string
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the edge.
          nullable: true
    WorkflowNodesItem:
      title: WorkflowNodesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - say
        - $ref: '#/components/schemas/Say'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - gather
        - $ref: '#/components/schemas/Gather'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - apiRequest
        - $ref: '#/components/schemas/ApiRequest'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - hangup
        - $ref: '#/components/schemas/Hangup'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transfer
        - $ref: '#/components/schemas/Transfer'
    WorkflowModel:
      title: WorkflowModel
      description: These are the options for the workflow's LLM.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/AnthropicModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/AnyscaleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CerebrasModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CustomLlmModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/DeepInfraModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/DeepSeekModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/GroqModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/InflectionAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/OpenRouterModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/PerplexityAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/TogetherAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/XaiModel'
    Workflow:
      title: Workflow
      required:
      - createdAt
      - edges
      - id
      - name
      - nodes
      - orgId
      - updatedAt
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowNodesItem'
        model:
          $ref: '#/components/schemas/WorkflowModel'
        id:
          type: string
          example: id
        orgId:
          type: string
          example: orgId
        createdAt:
          type: string
          format: date-time
          example: 2024-01-15T09:30:00Z
        updatedAt:
          type: string
          format: date-time
          example: 2024-01-15T09:30:00Z
        name:
          type: string
          example: name
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
    VapiModelToolsItem:
      title: VapiModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    VapiModel:
      title: VapiModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/VapiModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        workflowId:
          type: string
          description: "This is the workflow that will be used for the call. To use a transient workflow, use `workflow` instead."
          nullable: true
        workflow:
          $ref: '#/components/schemas/Workflow'
        model:
          type: string
          description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    XaiModelToolsItem:
      title: XaiModelToolsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - query
        - $ref: '#/components/schemas/CreateQueryToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.availability.check
        - $ref: '#/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - slack.message.send
        - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
    XaiModelModel:
      title: XaiModelModel
      type: string
      description: This is the name of the model. Ex. cognitivecomputations/dolphin-mixtral-8x7b
      enum:
      - grok-beta
      - grok-2
      - grok-3
    XaiModel:
      title: XaiModel
      required:
      - model
      type: object
      properties:
        messages:
          type: array
          description: This is the starting state for the conversation.
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        tools:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use existing tools, use `toolIds`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            $ref: '#/components/schemas/XaiModelToolsItem'
        toolIds:
          type: array
          description: |-
            These are the tools that the assistant can use during the call. To use transient tools, use `tools`.

            Both `tools` and `toolIds` can be used together.
          nullable: true
          items:
            type: string
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
        knowledgeBaseId:
          type: string
          description: This is the ID of the knowledge base the model will use.
          nullable: true
        model:
          $ref: '#/components/schemas/XaiModelModel'
        temperature:
          type: number
          description: This is the temperature that will be used for calls. Default is 0 to leverage caching for lower latency.
          format: double
          nullable: true
        maxTokens:
          type: number
          description: This is the max number of tokens that the assistant will be allowed to generate in each turn of the conversation. Default is 250.
          format: double
          nullable: true
        emotionRecognitionEnabled:
          type: boolean
          description: |-
            This determines whether we detect user's emotion while they speak and send it as an additional info to model.

            Default `false` because the model is usually are good at understanding the user's emotion from text.

            @default false
          nullable: true
        numFastTurns:
          type: number
          description: |-
            This sets how many turns at the start of the conversation to use a smaller, faster model from the same provider before switching to the primary model. Example, gpt-3.5-turbo if provider is openai.

            Default is 0.

            @default 0
          format: double
          nullable: true
    ExactReplacement:
      title: ExactReplacement
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          description: This is the key to replace.
        value:
          type: string
          description: This is the value that will replace the match.
    RegexOptionType:
      title: RegexOptionType
      type: string
      description: |-
        This is the type of the regex option. Options are:
        - `ignore-case`: Ignores the case of the text being matched. Add
        - `whole-word`: Matches whole words only.
        - `multi-line`: Matches across multiple lines.
      enum:
      - ignore-case
      - whole-word
      - multi-line
    RegexOption:
      title: RegexOption
      required:
      - enabled
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RegexOptionType'
        enabled:
          type: boolean
          description: |-
            This is whether to enable the option.

            @default false
    RegexReplacement:
      title: RegexReplacement
      required:
      - regex
      - value
      type: object
      properties:
        regex:
          type: string
          description: |-
            This is the regex pattern to replace.

            Note:
            - This works by using the `string.replace` method in Node.JS. Eg. `"hello there".replace(/hello/g, "hi")` will return `"hi there"`.

            Hot tip:
            - In JavaScript, escape `\` when sending the regex pattern. Eg. `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send `"hello\\sthere"` instead.
        options:
          type: array
          description: |-
            These are the options for the regex replacement. Defaults to all disabled.

            @default []
          nullable: true
          items:
            $ref: '#/components/schemas/RegexOption'
        value:
          type: string
          description: This is the value that will replace the match.
    FormatPlanReplacementsItem:
      title: FormatPlanReplacementsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - exact
        - $ref: '#/components/schemas/ExactReplacement'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - regex
        - $ref: '#/components/schemas/RegexReplacement'
    FormatPlanFormattersEnabledItem:
      title: FormatPlanFormattersEnabledItem
      type: string
      enum:
      - markdown
      - asterisk
      - quote
      - dash
      - newline
      - colon
      - acronym
      - dollarAmount
      - email
      - date
      - time
      - distance
      - unit
      - percentage
      - phoneNumber
      - number
    FormatPlan:
      title: FormatPlan
      type: object
      properties:
        enabled:
          type: boolean
          description: |-
            This determines whether the chunk is formatted before being sent to the voice provider. This helps with enunciation. This includes phone numbers, emails and addresses. Default `true`.

            Usage:
            - To rely on the voice provider's formatting logic, set this to `false`.

            If `voice.chunkPlan.enabled` is `false`, this is automatically `false` since there's no chunk to format.

            @default true
          nullable: true
        numberToDigitsCutoff:
          type: number
          description: |-
            This is the cutoff after which a number is converted to individual digits instead of being spoken as words.

            Example:
            - If cutoff 2025, "12345" is converted to "1 2 3 4 5" while "1200" is converted to "twelve hundred".

            Usage:
            - If your use case doesn't involve IDs like zip codes, set this to a high value.
            - If your use case involves IDs that are shorter than 5 digits, set this to a lower value.

            @default 2025
          format: double
          nullable: true
        replacements:
          type: array
          description: |-
            These are the custom replacements you can make to the chunk before it is sent to the voice provider.

            Usage:
            - To replace a specific word or phrase with a different word or phrase, use the `ExactReplacement` type. Eg. `{ type: 'exact', key: 'hello', value: 'hi' }`
            - To replace a word or phrase that matches a pattern, use the `RegexReplacement` type. Eg. `{ type: 'regex', regex: '\\b[a-zA-Z]{5}\\b', value: 'hi' }`

            @default []
          nullable: true
          items:
            $ref: '#/components/schemas/FormatPlanReplacementsItem'
        formattersEnabled:
          type: array
          description: |-
            List of formatters to apply. If not provided, all default formatters will be applied.
            If provided, only the specified formatters will be applied.
            Note: Some essential formatters like angle bracket removal will always be applied.
            @default undefined
          nullable: true
          items:
            $ref: '#/components/schemas/FormatPlanFormattersEnabledItem'
    ChunkPlan:
      title: ChunkPlan
      type: object
      properties:
        enabled:
          type: boolean
          description: |-
            This determines whether the model output is chunked before being sent to the voice provider. Default `true`.

            Usage:
            - To rely on the voice provider's audio generation logic, set this to `false`.
            - If seeing issues with quality, set this to `true`.

            If disabled, Vapi-provided audio control tokens like <flush /> will not work.

            @default true
          nullable: true
        minCharacters:
          type: number
          description: |-
            This is the minimum number of characters in a chunk.

            Usage:
            - To increase quality, set this to a higher value.
            - To decrease latency, set this to a lower value.

            @default 30
          format: double
          nullable: true
        punctuationBoundaries:
          type: array
          description: |-
            These are the punctuations that are considered valid boundaries for a chunk to be created.

            Usage:
            - To increase quality, constrain to fewer boundaries.
            - To decrease latency, enable all.

            Default is automatically set to balance the trade-off between quality and latency based on the provider.
          nullable: true
          items:
            $ref: '#/components/schemas/PunctuationBoundary'
        formatPlan:
          $ref: '#/components/schemas/FormatPlan'
    FallbackPlanVoicesItem:
      title: FallbackPlanVoicesItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/FallbackAzureVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/FallbackCartesiaVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/FallbackHumeVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-voice
        - $ref: '#/components/schemas/FallbackCustomVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/FallbackDeepgramVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/FallbackElevenLabsVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/FallbackVapiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/FallbackLmntVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/FallbackOpenAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/FallbackPlayHtVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/FallbackRimeAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/FallbackSmallestAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/FallbackTavusVoice'
    FallbackPlan:
      title: FallbackPlan
      required:
      - voices
      type: object
      properties:
        voices:
          type: array
          description: This is the list of voices to fallback to in the event that the primary voice provider fails.
          items:
            $ref: '#/components/schemas/FallbackPlanVoicesItem'
    AzureVoiceIdEnum:
      title: AzureVoiceIdEnum
      type: string
      enum:
      - andrew
      - brian
      - emma
    AzureVoiceId:
      title: AzureVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/AzureVoiceIdEnum'
      - type: string
    AzureVoice:
      title: AzureVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/AzureVoiceId'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    CartesiaExperimentalControlsSpeed:
      title: CartesiaExperimentalControlsSpeed
      type: string
      enum:
      - slowest
      - slow
      - normal
      - fast
      - fastest
    CartesiaExperimentalControlsEmotion:
      title: CartesiaExperimentalControlsEmotion
      type: string
      enum:
      - anger:lowest
      - anger:low
      - anger:high
      - anger:highest
      - positivity:lowest
      - positivity:low
      - positivity:high
      - positivity:highest
      - surprise:lowest
      - surprise:low
      - surprise:high
      - surprise:highest
      - sadness:lowest
      - sadness:low
      - sadness:high
      - sadness:highest
      - curiosity:lowest
      - curiosity:low
      - curiosity:high
      - curiosity:highest
    CartesiaExperimentalControls:
      title: CartesiaExperimentalControls
      type: object
      properties:
        speed:
          $ref: '#/components/schemas/CartesiaExperimentalControlsSpeed'
        emotion:
          $ref: '#/components/schemas/CartesiaExperimentalControlsEmotion'
    CartesiaVoiceModel:
      title: CartesiaVoiceModel
      type: string
      description: This is the model that will be used. This is optional and will default to the correct model for the voiceId.
      enum:
      - sonic-2
      - sonic-english
      - sonic-multilingual
      - sonic-preview
      - sonic
    CartesiaVoiceLanguage:
      title: CartesiaVoiceLanguage
      type: string
      description: This is the language that will be used. This is optional and will default to the correct language for the voiceId.
      enum:
      - en
      - de
      - es
      - fr
      - ja
      - pt
      - zh
      - hi
      - it
      - ko
      - nl
      - pl
      - ru
      - sv
      - tr
    CartesiaVoice:
      title: CartesiaVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        model:
          $ref: '#/components/schemas/CartesiaVoiceModel'
        language:
          $ref: '#/components/schemas/CartesiaVoiceLanguage'
        experimentalControls:
          $ref: '#/components/schemas/CartesiaExperimentalControls'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    CustomVoice:
      title: CustomVoice
      required:
      - server
      type: object
      properties:
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        server:
          $ref: '#/components/schemas/Server'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    DeepgramVoiceIdEnum:
      title: DeepgramVoiceIdEnum
      type: string
      enum:
      - asteria
      - luna
      - stella
      - athena
      - hera
      - orion
      - arcas
      - perseus
      - angus
      - orpheus
      - helios
      - zeus
    DeepgramVoiceId:
      title: DeepgramVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/DeepgramVoiceIdEnum'
      - type: string
    DeepgramVoice:
      title: DeepgramVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/DeepgramVoiceId'
        mipOptOut:
          type: boolean
          description: |-
            If set to true, this will add mip_opt_out=true as a query parameter of all API requests. See https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out

            This will only be used if you are using your own Deepgram API key.

            @default false
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    ElevenLabsVoiceIdEnum:
      title: ElevenLabsVoiceIdEnum
      type: string
      enum:
      - burt
      - marissa
      - andrea
      - sarah
      - phillip
      - steve
      - joseph
      - myra
      - paula
      - ryan
      - drew
      - paul
      - mrb
      - matilda
      - mark
    ElevenLabsVoiceId:
      title: ElevenLabsVoiceId
      description: This is the provider-specific ID that will be used. Ensure the Voice is present in your 11Labs Voice Library.
      oneOf:
      - $ref: '#/components/schemas/ElevenLabsVoiceIdEnum'
      - type: string
    ElevenLabsVoiceModel:
      title: ElevenLabsVoiceModel
      type: string
      description: This is the model that will be used. Defaults to 'eleven_turbo_v2' if not specified.
      enum:
      - eleven_multilingual_v2
      - eleven_turbo_v2
      - eleven_turbo_v2_5
      - eleven_flash_v2
      - eleven_flash_v2_5
      - eleven_monolingual_v1
    ElevenLabsVoice:
      title: ElevenLabsVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/ElevenLabsVoiceId'
        stability:
          type: number
          description: Defines the stability for voice settings.
          format: double
          nullable: true
        similarityBoost:
          type: number
          description: Defines the similarity boost for voice settings.
          format: double
          nullable: true
        style:
          type: number
          description: Defines the style for voice settings.
          format: double
          nullable: true
        useSpeakerBoost:
          type: boolean
          description: Defines the use speaker boost for voice settings.
          nullable: true
        speed:
          type: number
          description: Defines the speed for voice settings.
          format: double
          nullable: true
        optimizeStreamingLatency:
          type: number
          description: Defines the optimize streaming latency for voice settings. Defaults to 3.
          format: double
          nullable: true
        enableSsmlParsing:
          type: boolean
          description: |-
            This enables the use of https://elevenlabs.io/docs/speech-synthesis/prompting#pronunciation. Defaults to false to save latency.

            @default false
          nullable: true
        model:
          $ref: '#/components/schemas/ElevenLabsVoiceModel'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        language:
          type: string
          description: "This is the language (ISO 639-1) that is enforced for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided."
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    HumeVoice:
      title: HumeVoice
      required:
      - voiceId
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used.
          nullable: true
          enum:
          - octave
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        isCustomHumeVoice:
          type: boolean
          description: Indicates whether the chosen voice is a preset Hume AI voice or a custom voice.
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        description:
          type: string
          description: |-
            Natural language instructions describing how the synthesized speech should sound, including but not limited to tone, intonation, pacing, and accent (e.g., 'a soft, gentle voice with a strong British accent').

            If a Voice is specified in the request, this description serves as acting instructions.
            If no Voice is specified, a new voice is generated based on this description.
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    LMNTVoiceIdEnum:
      title: LMNTVoiceIdEnum
      type: string
      enum:
      - lily
      - daniel
    LMNTVoiceId:
      title: LMNTVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/LMNTVoiceIdEnum'
      - type: string
    LmntVoice:
      title: LmntVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/LMNTVoiceId'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    NeuphonicVoiceModel:
      title: NeuphonicVoiceModel
      type: string
      description: This is the model that will be used. Defaults to 'neu_fast' if not specified.
      enum:
      - neu_hq
      - neu_fast
    NeuphonicVoice:
      title: NeuphonicVoice
      required:
      - language
      - voiceId
      type: object
      properties:
        voiceId:
          type: string
          description: This is the provider-specific ID that will be used.
        model:
          $ref: '#/components/schemas/NeuphonicVoiceModel'
        language:
          type: object
          additionalProperties: true
          description: This is the language (ISO 639-1) that is enforced for the model.
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    OpenAIVoiceId:
      title: OpenAIVoiceId
      type: string
      description: |-
        This is the provider-specific ID that will be used.
        Please note that ash, ballad, coral, sage, and verse may only be used with realtime models.
      enum:
      - alloy
      - echo
      - fable
      - onyx
      - nova
      - shimmer
      - ash
      - ballad
      - coral
      - sage
      - verse
    OpenAiVoiceModel:
      title: OpenAiVoiceModel
      type: string
      description: This is the model that will be used for text-to-speech.
      enum:
      - tts-1
      - tts-1-hd
      - gpt-4o-mini-tts
    OpenAiVoice:
      title: OpenAiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/OpenAIVoiceId'
        model:
          $ref: '#/components/schemas/OpenAiVoiceModel'
        instructions:
          type: string
          description: |-
            This is a prompt that allows you to control the voice of your generated audio.
            Does not work with 'tts-1' or 'tts-1-hd' models.
          nullable: true
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    PlayHTVoiceIdEnum:
      title: PlayHTVoiceIdEnum
      type: string
      enum:
      - jennifer
      - melissa
      - will
      - chris
      - matt
      - jack
      - ruby
      - davis
      - donna
      - michael
    PlayHTVoiceId:
      title: PlayHTVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/PlayHTVoiceIdEnum'
      - type: string
    PlayHtVoiceEmotion:
      title: PlayHtVoiceEmotion
      type: string
      description: An emotion to be applied to the speech.
      enum:
      - female_happy
      - female_sad
      - female_angry
      - female_fearful
      - female_disgust
      - female_surprised
      - male_happy
      - male_sad
      - male_angry
      - male_fearful
      - male_disgust
      - male_surprised
    PlayHtVoiceModel:
      title: PlayHtVoiceModel
      type: string
      description: Playht voice model/engine to use.
      enum:
      - PlayHT2.0
      - PlayHT2.0-turbo
      - Play3.0-mini
      - PlayDialog
    PlayHtVoiceLanguage:
      title: PlayHtVoiceLanguage
      type: string
      description: The language to use for the speech.
      enum:
      - afrikaans
      - albanian
      - amharic
      - arabic
      - bengali
      - bulgarian
      - catalan
      - croatian
      - czech
      - danish
      - dutch
      - english
      - french
      - galician
      - german
      - greek
      - hebrew
      - hindi
      - hungarian
      - indonesian
      - italian
      - japanese
      - korean
      - malay
      - mandarin
      - polish
      - portuguese
      - russian
      - serbian
      - spanish
      - swedish
      - tagalog
      - thai
      - turkish
      - ukrainian
      - urdu
      - xhosa
    PlayHtVoice:
      title: PlayHtVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/PlayHTVoiceId'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        temperature:
          type: number
          description: "A floating point number between 0, exclusive, and 2, inclusive. If equal to null or not provided, the model's default temperature will be used. The temperature parameter controls variance. Lower temperatures result in more predictable results, higher temperatures allow each run to vary more, so the voice may sound less like the baseline voice."
          format: double
          nullable: true
        emotion:
          $ref: '#/components/schemas/PlayHtVoiceEmotion'
        voiceGuidance:
          type: number
          description: A number between 1 and 6. Use lower numbers to reduce how unique your chosen voice will be compared to other voices.
          format: double
          nullable: true
        styleGuidance:
          type: number
          description: A number between 1 and 30. Use lower numbers to to reduce how strong your chosen emotion will be. Higher numbers will create a very emotional performance.
          format: double
          nullable: true
        textGuidance:
          type: number
          description: "A number between 1 and 2. This number influences how closely the generated speech adheres to the input text. Use lower values to create more fluid speech, but with a higher chance of deviating from the input text. Higher numbers will make the generated speech more accurate to the input text, ensuring that the words spoken align closely with the provided text."
          format: double
          nullable: true
        model:
          $ref: '#/components/schemas/PlayHtVoiceModel'
        language:
          $ref: '#/components/schemas/PlayHtVoiceLanguage'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    RimeAIVoiceIdEnum:
      title: RimeAIVoiceIdEnum
      type: string
      enum:
      - abbie
      - allison
      - ally
      - alona
      - amber
      - ana
      - antoine
      - armon
      - brenda
      - brittany
      - carol
      - colin
      - courtney
      - elena
      - elliot
      - eva
      - geoff
      - gerald
      - hank
      - helen
      - hera
      - jen
      - joe
      - joy
      - juan
      - kendra
      - kendrick
      - kenneth
      - kevin
      - kris
      - linda
      - madison
      - marge
      - marina
      - marissa
      - marta
      - maya
      - nicholas
      - nyles
      - phil
      - reba
      - rex
      - rick
      - ritu
      - rob
      - rodney
      - rohan
      - rosco
      - samantha
      - sandy
      - selena
      - seth
      - sharon
      - stan
      - tamra
      - tanya
      - tibur
      - tj
      - tyler
      - viv
      - yadira
      - marsh
      - bayou
      - creek
      - brook
      - flower
      - spore
      - glacier
      - gulch
      - alpine
      - cove
      - lagoon
      - tundra
      - steppe
      - mesa
      - grove
      - rainforest
      - moraine
      - wildflower
      - peak
      - boulder
      - gypsum
      - zest
    RimeAIVoiceId:
      title: RimeAIVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/RimeAIVoiceIdEnum'
      - type: string
    RimeAiVoiceModel:
      title: RimeAiVoiceModel
      type: string
      description: This is the model that will be used. Defaults to 'v1' when not specified.
      enum:
      - v1
      - mist
      - mistv2
    RimeAiVoice:
      title: RimeAiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/RimeAIVoiceId'
        model:
          $ref: '#/components/schemas/RimeAiVoiceModel'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        pauseBetweenBrackets:
          type: boolean
          description: "This is a flag that controls whether to add slight pauses using angle brackets. Example: “Hi. <200> I’d love to have a conversation with you.” adds a 200ms pause between the first and second sentences."
          nullable: true
        phonemizeBetweenBrackets:
          type: boolean
          description: "This is a flag that controls whether text inside brackets should be phonemized (converted to phonetic pronunciation) - Example: \"{h'El.o} World\" will pronounce \"Hello\" as expected."
          nullable: true
        reduceLatency:
          type: boolean
          description: This is a flag that controls whether to optimize for reduced latency in streaming. https://docs.rime.ai/api-reference/endpoint/websockets#param-reduce-latency
          nullable: true
        inlineSpeedAlpha:
          type: string
          description: This is a string that allows inline speed control using alpha notation. https://docs.rime.ai/api-reference/endpoint/websockets#param-inline-speed-alpha
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    SmallestAIVoiceIdEnum:
      title: SmallestAIVoiceIdEnum
      type: string
      enum:
      - emily
      - jasmine
      - arman
      - james
      - mithali
      - aravind
      - raj
      - diya
      - raman
      - ananya
      - isha
      - william
      - aarav
      - monika
      - niharika
      - deepika
      - raghav
      - kajal
      - radhika
      - mansi
      - nisha
      - saurabh
      - pooja
      - saina
      - sanya
    SmallestAIVoiceId:
      title: SmallestAIVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/SmallestAIVoiceIdEnum'
      - type: string
    SmallestAiVoice:
      title: SmallestAiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/SmallestAIVoiceId'
        model:
          type: string
          description: Smallest AI voice model to use. Defaults to 'lightning' when not specified.
          nullable: true
          enum:
          - lightning
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    TavusConversationProperties:
      title: TavusConversationProperties
      type: object
      properties:
        maxCallDuration:
          type: number
          description: |-
            The maximum duration of the call in seconds. The default `maxCallDuration` is 3600 seconds (1 hour).
            Once the time limit specified by this parameter has been reached, the conversation will automatically shut down.
          format: double
          nullable: true
        participantLeftTimeout:
          type: number
          description: The duration in seconds after which the call will be automatically shut down once the last participant leaves.
          format: double
          nullable: true
        participantAbsentTimeout:
          type: number
          description: |-
            Starting from conversation creation, the duration in seconds after which the call will be automatically shut down if no participant joins the call.
            Default is 300 seconds (5 minutes).
          format: double
          nullable: true
        enableRecording:
          type: boolean
          description: "If true, the user will be able to record the conversation."
          nullable: true
        enableTranscription:
          type: boolean
          description: |-
            If true, the user will be able to transcribe the conversation.
            You can find more instructions on displaying transcriptions if you are using your custom DailyJS components here.
            You need to have an event listener on Daily that listens for `app-messages`.
          nullable: true
        applyGreenscreen:
          type: boolean
          description: |-
            If true, the background will be replaced with a greenscreen (RGB values: `[0, 255, 155]`).
            You can use WebGL on the frontend to make the greenscreen transparent or change its color.
          nullable: true
        language:
          type: string
          description: |-
            The language of the conversation. Please provide the **full language name**, not the two-letter code.
            If you are using your own TTS voice, please ensure it supports the language you provide.
            If you are using a stock replica or default persona, please note that only ElevenLabs and Cartesia supported languages are available.
            You can find a full list of supported languages for Cartesia here, for ElevenLabs here, and for PlayHT here.
          nullable: true
        recordingS3BucketName:
          type: string
          description: The name of the S3 bucket where the recording will be stored.
          nullable: true
        recordingS3BucketRegion:
          type: string
          description: The region of the S3 bucket where the recording will be stored.
          nullable: true
        awsAssumeRoleArn:
          type: string
          description: The ARN of the role that will be assumed to access the S3 bucket.
          nullable: true
    TavusVoiceVoiceId:
      title: TavusVoiceVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - type: string
        enum:
        - r52da2535a
      - type: string
    TavusVoice:
      title: TavusVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/TavusVoiceVoiceId'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        personaId:
          type: string
          description: This is the unique identifier for the persona that the replica will use in the conversation.
          nullable: true
        callbackUrl:
          type: string
          description: This is the url that will receive webhooks with updates regarding the conversation state.
          nullable: true
        conversationName:
          type: string
          description: This is the name for the conversation.
          nullable: true
        conversationalContext:
          type: string
          description: "This is the context that will be appended to any context provided in the persona, if one is provided."
          nullable: true
        customGreeting:
          type: string
          description: This is the custom greeting that the replica will give once a participant joines the conversation.
          nullable: true
        properties:
          $ref: '#/components/schemas/TavusConversationProperties'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    VapiVoiceVoiceId:
      title: VapiVoiceVoiceId
      type: string
      description: The voices provided by Vapi
      enum:
      - Elliot
      - Rohan
      - Lily
      - Savannah
      - Hana
      - Neha
      - Cole
      - Harry
      - Paige
      - Spencer
    VapiVoiceLanguage:
      title: VapiVoiceLanguage
      type: string
      description: |-
        This is the language code (ISO 639-1) that will be used.

        @default 'en-US'
      enum:
      - en-US
      - en-GB
      - en-AU
      - en-CA
      - ja
      - zh
      - de
      - hi
      - fr-FR
      - fr-CA
      - ko
      - pt-BR
      - pt-PT
      - it
      - es-ES
      - es-MX
      - id
      - nl
      - tr
      - fil
      - pl
      - sv
      - bg
      - ro
      - ar-SA
      - ar-AE
      - cs
      - el
      - fi
      - hr
      - ms
      - sk
      - da
      - ta
      - uk
      - ru
      - hu
      - "no"
      - vi
    VapiVoice:
      title: VapiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/VapiVoiceVoiceId'
        speed:
          type: number
          description: |-
            This is the speed multiplier that will be used.

            @default 1
          format: double
          nullable: true
        language:
          $ref: '#/components/schemas/VapiVoiceLanguage'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
    FallbackAzureVoiceVoiceId:
      title: FallbackAzureVoiceVoiceId
      type: string
      enum:
      - andrew
      - brian
      - emma
    FallbackAzureVoiceId:
      title: FallbackAzureVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/FallbackAzureVoiceVoiceId'
      - type: string
    FallbackAzureVoice:
      title: FallbackAzureVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackAzureVoiceId'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
        oneOf:
          nullable: true
    FallbackCartesiaVoiceModel:
      title: FallbackCartesiaVoiceModel
      type: string
      description: This is the model that will be used. This is optional and will default to the correct model for the voiceId.
      enum:
      - sonic-2
      - sonic-english
      - sonic-multilingual
      - sonic-preview
      - sonic
    FallbackCartesiaVoiceLanguage:
      title: FallbackCartesiaVoiceLanguage
      type: string
      description: This is the language that will be used. This is optional and will default to the correct language for the voiceId.
      enum:
      - en
      - de
      - es
      - fr
      - ja
      - pt
      - zh
      - hi
      - it
      - ko
      - nl
      - pl
      - ru
      - sv
      - tr
    FallbackCartesiaVoice:
      title: FallbackCartesiaVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        model:
          $ref: '#/components/schemas/FallbackCartesiaVoiceModel'
        language:
          $ref: '#/components/schemas/FallbackCartesiaVoiceLanguage'
        experimentalControls:
          $ref: '#/components/schemas/CartesiaExperimentalControls'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackCustomVoice:
      title: FallbackCustomVoice
      required:
      - server
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackDeepgramVoiceIdEnum:
      title: FallbackDeepgramVoiceIdEnum
      type: string
      enum:
      - asteria
      - luna
      - stella
      - athena
      - hera
      - orion
      - arcas
      - perseus
      - angus
      - orpheus
      - helios
      - zeus
    FallbackDeepgramVoiceId:
      title: FallbackDeepgramVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/FallbackDeepgramVoiceIdEnum'
      - type: string
    FallbackDeepgramVoice:
      title: FallbackDeepgramVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackDeepgramVoiceId'
        mipOptOut:
          type: boolean
          description: |-
            If set to true, this will add mip_opt_out=true as a query parameter of all API requests. See https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out

            This will only be used if you are using your own Deepgram API key.

            @default false
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackElevenLabsVoiceIdEnum:
      title: FallbackElevenLabsVoiceIdEnum
      type: string
      enum:
      - burt
      - marissa
      - andrea
      - sarah
      - phillip
      - steve
      - joseph
      - myra
      - paula
      - ryan
      - drew
      - paul
      - mrb
      - matilda
      - mark
    FallbackElevenLabsVoiceId:
      title: FallbackElevenLabsVoiceId
      description: This is the provider-specific ID that will be used. Ensure the Voice is present in your 11Labs Voice Library.
      oneOf:
      - $ref: '#/components/schemas/FallbackElevenLabsVoiceIdEnum'
      - type: string
    FallbackElevenLabsVoiceModel:
      title: FallbackElevenLabsVoiceModel
      type: string
      description: This is the model that will be used. Defaults to 'eleven_turbo_v2' if not specified.
      enum:
      - eleven_multilingual_v2
      - eleven_turbo_v2
      - eleven_turbo_v2_5
      - eleven_flash_v2
      - eleven_flash_v2_5
      - eleven_monolingual_v1
    FallbackElevenLabsVoice:
      title: FallbackElevenLabsVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackElevenLabsVoiceId'
        stability:
          type: number
          description: Defines the stability for voice settings.
          format: double
          nullable: true
        similarityBoost:
          type: number
          description: Defines the similarity boost for voice settings.
          format: double
          nullable: true
        style:
          type: number
          description: Defines the style for voice settings.
          format: double
          nullable: true
        useSpeakerBoost:
          type: boolean
          description: Defines the use speaker boost for voice settings.
          nullable: true
        speed:
          type: number
          description: Defines the speed for voice settings.
          format: double
          nullable: true
        optimizeStreamingLatency:
          type: number
          description: Defines the optimize streaming latency for voice settings. Defaults to 3.
          format: double
          nullable: true
        enableSsmlParsing:
          type: boolean
          description: |-
            This enables the use of https://elevenlabs.io/docs/speech-synthesis/prompting#pronunciation. Defaults to false to save latency.

            @default false
          nullable: true
        model:
          $ref: '#/components/schemas/FallbackElevenLabsVoiceModel'
        language:
          type: string
          description: "This is the language (ISO 639-1) that is enforced for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided."
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackHumeVoice:
      title: FallbackHumeVoice
      required:
      - voiceId
      type: object
      properties:
        model:
          type: string
          description: This is the model that will be used.
          nullable: true
          enum:
          - octave
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        isCustomHumeVoice:
          type: boolean
          description: Indicates whether the chosen voice is a preset Hume AI voice or a custom voice.
          nullable: true
        description:
          type: string
          description: |-
            Natural language instructions describing how the synthesized speech should sound, including but not limited to tone, intonation, pacing, and accent (e.g., 'a soft, gentle voice with a strong British accent').

            If a Voice is specified in the request, this description serves as acting instructions.
            If no Voice is specified, a new voice is generated based on this description.
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackLMNTVoiceIdEnum:
      title: FallbackLMNTVoiceIdEnum
      type: string
      enum:
      - lily
      - daniel
    FallbackLMNTVoiceId:
      title: FallbackLMNTVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/FallbackLMNTVoiceIdEnum'
      - type: string
    FallbackLmntVoice:
      title: FallbackLmntVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackLMNTVoiceId'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackNeuphonicVoiceModel:
      title: FallbackNeuphonicVoiceModel
      type: string
      description: This is the model that will be used. Defaults to 'neu_fast' if not specified.
      enum:
      - neu_hq
      - neu_fast
    FallbackNeuphonicVoice:
      title: FallbackNeuphonicVoice
      required:
      - language
      - provider
      - voiceId
      type: object
      properties:
        provider:
          type: string
          description: This is the voice provider that will be used.
          enum:
          - neuphonic
        voiceId:
          type: string
          description: This is the provider-specific ID that will be used.
        model:
          $ref: '#/components/schemas/FallbackNeuphonicVoiceModel'
        language:
          type: object
          additionalProperties: true
          description: This is the language (ISO 639-1) that is enforced for the model.
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackOpenAIVoiceId:
      title: FallbackOpenAIVoiceId
      type: string
      description: |-
        This is the provider-specific ID that will be used.
        Please note that ash, ballad, coral, sage, and verse may only be used with realtime models.
      enum:
      - alloy
      - echo
      - fable
      - onyx
      - nova
      - shimmer
      - ash
      - ballad
      - coral
      - sage
      - verse
    FallbackOpenAiVoiceModel:
      title: FallbackOpenAiVoiceModel
      type: string
      description: This is the model that will be used for text-to-speech.
      enum:
      - tts-1
      - tts-1-hd
      - gpt-4o-mini-tts
    FallbackOpenAiVoice:
      title: FallbackOpenAiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackOpenAIVoiceId'
        model:
          $ref: '#/components/schemas/FallbackOpenAiVoiceModel'
        instructions:
          type: string
          description: |-
            This is a prompt that allows you to control the voice of your generated audio.
            Does not work with 'tts-1' or 'tts-1-hd' models.
          nullable: true
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackPlayHTVoiceIdEnum:
      title: FallbackPlayHTVoiceIdEnum
      type: string
      enum:
      - jennifer
      - melissa
      - will
      - chris
      - matt
      - jack
      - ruby
      - davis
      - donna
      - michael
    FallbackPlayHTVoiceId:
      title: FallbackPlayHTVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/FallbackPlayHTVoiceIdEnum'
      - type: string
    FallbackPlayHtVoiceEmotion:
      title: FallbackPlayHtVoiceEmotion
      type: string
      description: An emotion to be applied to the speech.
      enum:
      - female_happy
      - female_sad
      - female_angry
      - female_fearful
      - female_disgust
      - female_surprised
      - male_happy
      - male_sad
      - male_angry
      - male_fearful
      - male_disgust
      - male_surprised
    FallbackPlayHtVoiceModel:
      title: FallbackPlayHtVoiceModel
      type: string
      description: Playht voice model/engine to use.
      enum:
      - PlayHT2.0
      - PlayHT2.0-turbo
      - Play3.0-mini
      - PlayDialog
    FallbackPlayHtVoiceLanguage:
      title: FallbackPlayHtVoiceLanguage
      type: string
      description: The language to use for the speech.
      enum:
      - afrikaans
      - albanian
      - amharic
      - arabic
      - bengali
      - bulgarian
      - catalan
      - croatian
      - czech
      - danish
      - dutch
      - english
      - french
      - galician
      - german
      - greek
      - hebrew
      - hindi
      - hungarian
      - indonesian
      - italian
      - japanese
      - korean
      - malay
      - mandarin
      - polish
      - portuguese
      - russian
      - serbian
      - spanish
      - swedish
      - tagalog
      - thai
      - turkish
      - ukrainian
      - urdu
      - xhosa
    FallbackPlayHtVoice:
      title: FallbackPlayHtVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackPlayHTVoiceId'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        temperature:
          type: number
          description: "A floating point number between 0, exclusive, and 2, inclusive. If equal to null or not provided, the model's default temperature will be used. The temperature parameter controls variance. Lower temperatures result in more predictable results, higher temperatures allow each run to vary more, so the voice may sound less like the baseline voice."
          format: double
          nullable: true
        emotion:
          $ref: '#/components/schemas/FallbackPlayHtVoiceEmotion'
        voiceGuidance:
          type: number
          description: A number between 1 and 6. Use lower numbers to reduce how unique your chosen voice will be compared to other voices.
          format: double
          nullable: true
        styleGuidance:
          type: number
          description: A number between 1 and 30. Use lower numbers to to reduce how strong your chosen emotion will be. Higher numbers will create a very emotional performance.
          format: double
          nullable: true
        textGuidance:
          type: number
          description: "A number between 1 and 2. This number influences how closely the generated speech adheres to the input text. Use lower values to create more fluid speech, but with a higher chance of deviating from the input text. Higher numbers will make the generated speech more accurate to the input text, ensuring that the words spoken align closely with the provided text."
          format: double
          nullable: true
        model:
          $ref: '#/components/schemas/FallbackPlayHtVoiceModel'
        language:
          $ref: '#/components/schemas/FallbackPlayHtVoiceLanguage'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackRimeAIVoiceIdEnum:
      title: FallbackRimeAIVoiceIdEnum
      type: string
      enum:
      - abbie
      - allison
      - ally
      - alona
      - amber
      - ana
      - antoine
      - armon
      - brenda
      - brittany
      - carol
      - colin
      - courtney
      - elena
      - elliot
      - eva
      - geoff
      - gerald
      - hank
      - helen
      - hera
      - jen
      - joe
      - joy
      - juan
      - kendra
      - kendrick
      - kenneth
      - kevin
      - kris
      - linda
      - madison
      - marge
      - marina
      - marissa
      - marta
      - maya
      - nicholas
      - nyles
      - phil
      - reba
      - rex
      - rick
      - ritu
      - rob
      - rodney
      - rohan
      - rosco
      - samantha
      - sandy
      - selena
      - seth
      - sharon
      - stan
      - tamra
      - tanya
      - tibur
      - tj
      - tyler
      - viv
      - yadira
      - marsh
      - bayou
      - creek
      - brook
      - flower
      - spore
      - glacier
      - gulch
      - alpine
      - cove
      - lagoon
      - tundra
      - steppe
      - mesa
      - grove
      - rainforest
      - moraine
      - wildflower
      - peak
      - boulder
      - gypsum
      - zest
    FallbackRimeAIVoiceId:
      title: FallbackRimeAIVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/FallbackRimeAIVoiceIdEnum'
      - type: string
    FallbackRimeAiVoiceModel:
      title: FallbackRimeAiVoiceModel
      type: string
      description: This is the model that will be used. Defaults to 'v1' when not specified.
      enum:
      - v1
      - mist
      - mistv2
    FallbackRimeAiVoice:
      title: FallbackRimeAiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackRimeAIVoiceId'
        model:
          $ref: '#/components/schemas/FallbackRimeAiVoiceModel'
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        pauseBetweenBrackets:
          type: boolean
          description: "This is a flag that controls whether to add slight pauses using angle brackets. Example: “Hi. <200> I’d love to have a conversation with you.” adds a 200ms pause between the first and second sentences."
          nullable: true
        phonemizeBetweenBrackets:
          type: boolean
          description: "This is a flag that controls whether text inside brackets should be phonemized (converted to phonetic pronunciation) - Example: \"{h'El.o} World\" will pronounce \"Hello\" as expected."
          nullable: true
        reduceLatency:
          type: boolean
          description: This is a flag that controls whether to optimize for reduced latency in streaming. https://docs.rime.ai/api-reference/endpoint/websockets#param-reduce-latency
          nullable: true
        inlineSpeedAlpha:
          type: string
          description: This is a string that allows inline speed control using alpha notation. https://docs.rime.ai/api-reference/endpoint/websockets#param-inline-speed-alpha
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackSmallestAIVoiceIdEnum:
      title: FallbackSmallestAIVoiceIdEnum
      type: string
      enum:
      - emily
      - jasmine
      - arman
      - james
      - mithali
      - aravind
      - raj
      - diya
      - raman
      - ananya
      - isha
      - william
      - aarav
      - monika
      - niharika
      - deepika
      - raghav
      - kajal
      - radhika
      - mansi
      - nisha
      - saurabh
      - pooja
      - saina
      - sanya
    FallbackSmallestAIVoiceId:
      title: FallbackSmallestAIVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - $ref: '#/components/schemas/FallbackSmallestAIVoiceIdEnum'
      - type: string
    FallbackSmallestAiVoice:
      title: FallbackSmallestAiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackSmallestAIVoiceId'
        model:
          type: string
          description: Smallest AI voice model to use. Defaults to 'lightning' when not specified.
          nullable: true
          enum:
          - lightning
        speed:
          type: number
          description: This is the speed multiplier that will be used.
          format: double
          nullable: true
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackTavusVoiceVoiceId:
      title: FallbackTavusVoiceVoiceId
      description: This is the provider-specific ID that will be used.
      oneOf:
      - type: string
        enum:
        - r52da2535a
      - type: string
    FallbackTavusVoice:
      title: FallbackTavusVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackTavusVoiceVoiceId'
        personaId:
          type: string
          description: This is the unique identifier for the persona that the replica will use in the conversation.
          nullable: true
        callbackUrl:
          type: string
          description: This is the url that will receive webhooks with updates regarding the conversation state.
          nullable: true
        conversationName:
          type: string
          description: This is the name for the conversation.
          nullable: true
        conversationalContext:
          type: string
          description: "This is the context that will be appended to any context provided in the persona, if one is provided."
          nullable: true
        customGreeting:
          type: string
          description: This is the custom greeting that the replica will give once a participant joines the conversation.
          nullable: true
        properties:
          $ref: '#/components/schemas/TavusConversationProperties'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    FallbackVapiVoiceVoiceId:
      title: FallbackVapiVoiceVoiceId
      type: string
      description: The voices provided by Vapi
      enum:
      - Elliot
      - Rohan
      - Lily
      - Savannah
      - Hana
      - Neha
      - Cole
      - Harry
      - Paige
      - Spencer
    FallbackVapiVoiceLanguage:
      title: FallbackVapiVoiceLanguage
      type: string
      description: |-
        This is the language code (ISO 639-1) that will be used.

        @default 'en-US'
      enum:
      - en-US
      - en-GB
      - en-AU
      - en-CA
      - ja
      - zh
      - de
      - hi
      - fr-FR
      - fr-CA
      - ko
      - pt-BR
      - pt-PT
      - it
      - es-ES
      - es-MX
      - id
      - nl
      - tr
      - fil
      - pl
      - sv
      - bg
      - ro
      - ar-SA
      - ar-AE
      - cs
      - el
      - fi
      - hr
      - ms
      - sk
      - da
      - ta
      - uk
      - ru
      - hu
      - "no"
      - vi
    FallbackVapiVoice:
      title: FallbackVapiVoice
      required:
      - voiceId
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackVapiVoiceVoiceId'
        speed:
          type: number
          description: |-
            This is the speed multiplier that will be used.

            @default 1
          format: double
          nullable: true
        language:
          $ref: '#/components/schemas/FallbackVapiVoiceLanguage'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
    TransportConfigurationTwilioRecordingChannels:
      title: TransportConfigurationTwilioRecordingChannels
      type: string
      description: |-
        The number of channels in the final recording.
        Can be: `mono` or `dual`.
        The default is `mono`.
        `mono` records both legs of the call in a single channel of the recording file.
        `dual` records each leg to a separate channel of the recording file.
        The first channel of a dual-channel recording contains the parent call and the second channel contains the child call.

        @default 'mono'
      enum:
      - mono
      - dual
    TransportConfigurationTwilio:
      title: TransportConfigurationTwilio
      required:
      - provider
      type: object
      properties:
        provider:
          type: string
          enum:
          - twilio
        timeout:
          type: number
          description: |-
            The integer number of seconds that we should allow the phone to ring before assuming there is no answer.
            The default is `60` seconds and the maximum is `600` seconds.
            For some call flows, we will add a 5-second buffer to the timeout value you provide.
            For this reason, a timeout value of 10 seconds could result in an actual timeout closer to 15 seconds.
            You can set this to a short time, such as `15` seconds, to hang up before reaching an answering machine or voicemail.

            @default 60
          format: double
          nullable: true
        record:
          type: boolean
          description: |-
            Whether to record the call.
            Can be `true` to record the phone call, or `false` to not.
            The default is `false`.

            @default false
          nullable: true
        recordingChannels:
          $ref: '#/components/schemas/TransportConfigurationTwilioRecordingChannels'
    CreateAnthropicCredentialDto:
      title: CreateAnthropicCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateAnyscaleCredentialDto:
      title: CreateAnyscaleCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateAssemblyAiCredentialDto:
      title: CreateAssemblyAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    AzureBlobStorageBucketPlan:
      title: AzureBlobStorageBucketPlan
      required:
      - connectionString
      - containerName
      type: object
      properties:
        connectionString:
          type: string
          description: This is the blob storage connection string for the Azure resource.
        containerName:
          type: string
          description: This is the container name for the Azure blob storage.
        path:
          type: string
          description: |-
            This is the path where call artifacts will be stored.

            Usage:
            - To store call artifacts in a specific folder, set this to the full path. Eg. "/folder-name1/folder-name2".
            - To store call artifacts in the root of the bucket, leave this blank.

            @default "/"
          nullable: true
    CreateAzureCredentialDtoService:
      title: CreateAzureCredentialDtoService
      type: string
      description: This is the service being used in Azure.
      enum:
      - speech
      - blob_storage
    CreateAzureCredentialDtoRegion:
      title: CreateAzureCredentialDtoRegion
      type: string
      description: This is the region of the Azure resource.
      enum:
      - australia
      - canadaeast
      - canadacentral
      - eastus2
      - eastus
      - france
      - india
      - japaneast
      - japanwest
      - uaenorth
      - northcentralus
      - norway
      - southcentralus
      - swedencentral
      - switzerland
      - uk
      - westus
      - westus3
    CreateAzureCredentialDto:
      title: CreateAzureCredentialDto
      required:
      - service
      type: object
      properties:
        service:
          $ref: '#/components/schemas/CreateAzureCredentialDtoService'
        region:
          $ref: '#/components/schemas/CreateAzureCredentialDtoRegion'
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/AzureBlobStorageBucketPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateAzureOpenAiCredentialDtoRegion:
      title: CreateAzureOpenAiCredentialDtoRegion
      type: string
      enum:
      - australia
      - canadaeast
      - canadacentral
      - eastus2
      - eastus
      - france
      - india
      - japaneast
      - japanwest
      - uaenorth
      - northcentralus
      - norway
      - southcentralus
      - swedencentral
      - switzerland
      - uk
      - westus
      - westus3
    CreateAzureOpenAiCredentialDtoModelsItem:
      title: CreateAzureOpenAiCredentialDtoModelsItem
      type: string
      enum:
      - gpt-4o-2024-11-20
      - gpt-4o-2024-08-06
      - gpt-4o-mini-2024-07-18
      - gpt-4o-2024-05-13
      - gpt-4-turbo-2024-04-09
      - gpt-4-0125-preview
      - gpt-4-1106-preview
      - gpt-4-0613
      - gpt-35-turbo-0125
      - gpt-35-turbo-1106
    CreateAzureOpenAiCredentialDto:
      title: CreateAzureOpenAiCredentialDto
      required:
      - models
      - openAIEndpoint
      - openAIKey
      - region
      type: object
      properties:
        region:
          $ref: '#/components/schemas/CreateAzureOpenAiCredentialDtoRegion'
        models:
          type: array
          items:
            $ref: '#/components/schemas/CreateAzureOpenAiCredentialDtoModelsItem'
        openAIKey:
          type: string
          description: This is not returned in the API.
        ocpApimSubscriptionKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        openAIEndpoint:
          type: string
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    SipTrunkGatewayOutboundProtocol:
      title: SipTrunkGatewayOutboundProtocol
      type: string
      description: |-
        This is the protocol to use for SIP signaling outbound calls. Default is udp.

        @default udp
      enum:
      - tls/srtp
      - tcp
      - tls
      - udp
    SipTrunkGateway:
      title: SipTrunkGateway
      required:
      - ip
      type: object
      properties:
        ip:
          type: string
          description: This is the address of the gateway. It can be an IPv4 address like 1.1.1.1 or a fully qualified domain name like my-sip-trunk.pstn.twilio.com.
        port:
          type: number
          description: |-
            This is the port number of the gateway. Default is 5060.

            @default 5060
          format: double
          nullable: true
        netmask:
          type: number
          description: |-
            This is the netmask of the gateway. Defaults to 32.

            @default 32
          format: double
          nullable: true
        inboundEnabled:
          type: boolean
          description: |-
            This is whether inbound calls are allowed from this gateway. Default is true.

            @default true
          nullable: true
        outboundEnabled:
          type: boolean
          description: |-
            This is whether outbound calls should be sent to this gateway. Default is true.

            Note, if netmask is less than 32, it doesn't affect the outbound IPs that are tried. 1 attempt is made to `ip:port`.

            @default true
          nullable: true
        outboundProtocol:
          $ref: '#/components/schemas/SipTrunkGatewayOutboundProtocol'
        optionsPingEnabled:
          type: boolean
          description: |-
            This is whether to send options ping to the gateway. This can be used to check if the gateway is reachable. Default is false.

            This is useful for high availability setups where you want to check if the gateway is reachable before routing calls to it. Note, if no gateway for a trunk is reachable, outbound calls will be rejected.

            @default false
          nullable: true
    SipTrunkOutboundSipRegisterPlan:
      title: SipTrunkOutboundSipRegisterPlan
      type: object
      properties:
        domain:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        realm:
          type: string
          nullable: true
    SipTrunkOutboundAuthenticationPlan:
      title: SipTrunkOutboundAuthenticationPlan
      type: object
      properties:
        authPassword:
          type: string
          description: This is not returned in the API.
          nullable: true
        authUsername:
          type: string
          nullable: true
        sipRegisterPlan:
          $ref: '#/components/schemas/SipTrunkOutboundSipRegisterPlan'
    SbcConfiguration:
      title: SbcConfiguration
      type: object
      properties: {}
    CreateByoSipTrunkCredentialDto:
      title: CreateByoSipTrunkCredentialDto
      required:
      - gateways
      type: object
      properties:
        gateways:
          type: array
          description: This is the list of SIP trunk's gateways.
          items:
            $ref: '#/components/schemas/SipTrunkGateway'
        outboundAuthenticationPlan:
          $ref: '#/components/schemas/SipTrunkOutboundAuthenticationPlan'
        outboundLeadingPlusEnabled:
          type: boolean
          description: |-
            This ensures the outbound origination attempts have a leading plus. Defaults to false to match conventional telecom behavior.

            Usage:
            - Vonage/Twilio requires leading plus for all outbound calls. Set this to true.

            @default false
          nullable: true
        techPrefix:
          type: string
          description: This can be used to configure the tech prefix on outbound calls. This is an advanced property.
          nullable: true
        sipDiversionHeader:
          type: string
          description: This can be used to enable the SIP diversion header for authenticating the calling number if the SIP trunk supports it. This is an advanced property.
          nullable: true
        sbcConfiguration:
          $ref: '#/components/schemas/SbcConfiguration'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateCartesiaCredentialDto:
      title: CreateCartesiaCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CloudflareR2BucketPlan:
      title: CloudflareR2BucketPlan
      required:
      - name
      type: object
      properties:
        accessKeyId:
          type: string
          description: Cloudflare R2 Access key ID.
          nullable: true
        secretAccessKey:
          type: string
          description: Cloudflare R2 access key secret. This is not returned in the API.
          nullable: true
        url:
          type: string
          description: Cloudflare R2 base url.
          nullable: true
        name:
          type: string
          description: This is the name of the bucket.
        path:
          type: string
          description: |-
            This is the path where call artifacts will be stored.

            Usage:
            - To store call artifacts in a specific folder, set this to the full path. Eg. "/folder-name1/folder-name2".
            - To store call artifacts in the root of the bucket, leave this blank.

            @default "/"
          nullable: true
    CreateCloudflareCredentialDto:
      title: CreateCloudflareCredentialDto
      type: object
      properties:
        accountId:
          type: string
          description: Cloudflare Account Id.
          nullable: true
        apiKey:
          type: string
          description: Cloudflare API Key / Token.
          nullable: true
        accountEmail:
          type: string
          description: Cloudflare Account Email.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/CloudflareR2BucketPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    OAuth2AuthenticationPlan:
      title: OAuth2AuthenticationPlan
      required:
      - clientId
      - clientSecret
      - type
      - url
      type: object
      properties:
        type:
          type: string
          enum:
          - oauth2
        url:
          type: string
          description: This is the OAuth2 URL.
        clientId:
          type: string
          description: This is the OAuth2 client ID.
        clientSecret:
          type: string
          description: This is the OAuth2 client secret.
        scope:
          type: string
          description: This is the scope of the OAuth2 token.
          nullable: true
    CreateCustomLlmCredentialDto:
      title: CreateCustomLlmCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateDeepgramCredentialDto:
      title: CreateDeepgramCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        apiUrl:
          type: string
          description: This can be used to point to an onprem Deepgram instance. Defaults to api.deepgram.com.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateDeepInfraCredentialDto:
      title: CreateDeepInfraCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateDeepSeekCredentialDto:
      title: CreateDeepSeekCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateElevenLabsCredentialDto:
      title: CreateElevenLabsCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GcpKey:
      title: GcpKey
      required:
      - authProviderX509CertUrl
      - authUri
      - clientEmail
      - clientId
      - clientX509CertUrl
      - privateKey
      - privateKeyId
      - projectId
      - tokenUri
      - type
      - universeDomain
      type: object
      properties:
        type:
          type: string
          description: "This is the type of the key. Most likely, this is \"service_account\"."
        projectId:
          type: string
          description: This is the ID of the Google Cloud project associated with this key.
        privateKeyId:
          type: string
          description: This is the unique identifier for the private key.
        privateKey:
          type: string
          description: |-
            This is the private key in PEM format.

            Note: This is not returned in the API.
        clientEmail:
          type: string
          description: This is the email address associated with the service account.
        clientId:
          type: string
          description: This is the unique identifier for the client.
        authUri:
          type: string
          description: This is the URI for the auth provider's authorization endpoint.
        tokenUri:
          type: string
          description: This is the URI for the auth provider's token endpoint.
        authProviderX509CertUrl:
          type: string
          description: This is the URL of the public x509 certificate for the auth provider.
        clientX509CertUrl:
          type: string
          description: This is the URL of the public x509 certificate for the client.
        universeDomain:
          type: string
          description: This is the domain associated with the universe this service account belongs to.
    BucketPlan:
      title: BucketPlan
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: This is the name of the bucket.
        region:
          type: string
          description: |-
            This is the region of the bucket.

            Usage:
            - If `credential.type` is `aws`, then this is required.
            - If `credential.type` is `gcp`, then this is optional since GCP allows buckets to be accessed without a region but region is required for data residency requirements. Read here: https://cloud.google.com/storage/docs/request-endpoints
          nullable: true
        path:
          type: string
          description: |-
            This is the path where call artifacts will be stored.

            Usage:
            - To store call artifacts in a specific folder, set this to the full path. Eg. "/folder-name1/folder-name2".
            - To store call artifacts in the root of the bucket, leave this blank.

            @default "/"
          nullable: true
        hmacAccessKey:
          type: string
          description: |-
            This is the HMAC access key offered by GCP for interoperability with S3 clients. Here is the guide on how to create: https://cloud.google.com/storage/docs/authentication/managing-hmackeys#console

            Usage:
            - If `credential.type` is `gcp`, then this is required.
            - If `credential.type` is `aws`, then this is not required since credential.awsAccessKeyId is used instead.
          nullable: true
        hmacSecret:
          type: string
          description: |-
            This is the secret for the HMAC access key. Here is the guide on how to create: https://cloud.google.com/storage/docs/authentication/managing-hmackeys#console

            Usage:
            - If `credential.type` is `gcp`, then this is required.
            - If `credential.type` is `aws`, then this is not required since credential.awsSecretAccessKey is used instead.

            Note: This is not returned in the API.
          nullable: true
    CreateGcpCredentialDto:
      title: CreateGcpCredentialDto
      required:
      - gcpKey
      type: object
      properties:
        gcpKey:
          $ref: '#/components/schemas/GcpKey'
        bucketPlan:
          $ref: '#/components/schemas/BucketPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateGladiaCredentialDto:
      title: CreateGladiaCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateGoHighLevelCredentialDto:
      title: CreateGoHighLevelCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateGroqCredentialDto:
      title: CreateGroqCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateLangfuseCredentialDto:
      title: CreateLangfuseCredentialDto
      required:
      - apiKey
      - apiUrl
      - publicKey
      type: object
      properties:
        publicKey:
          type: string
          description: "The public key for Langfuse project. Eg: pk-lf-..."
        apiKey:
          type: string
          description: "The secret key for Langfuse project. Eg: sk-lf-... .This is not returned in the API."
        apiUrl:
          type: string
          description: "The host URL for Langfuse project. Eg: https://cloud.langfuse.com"
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateLmntCredentialDto:
      title: CreateLmntCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateMakeCredentialDto:
      title: CreateMakeCredentialDto
      required:
      - apiKey
      - region
      - teamId
      type: object
      properties:
        teamId:
          type: string
          description: Team ID
        region:
          type: string
          description: "Region of your application. For example: eu1, eu2, us1, us2"
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateOpenAiCredentialDto:
      title: CreateOpenAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateOpenRouterCredentialDto:
      title: CreateOpenRouterCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreatePerplexityAiCredentialDto:
      title: CreatePerplexityAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreatePlayHtCredentialDto:
      title: CreatePlayHtCredentialDto
      required:
      - apiKey
      - userId
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        userId:
          type: string
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateRimeAiCredentialDto:
      title: CreateRimeAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateRunpodCredentialDto:
      title: CreateRunpodCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateS3CredentialDto:
      title: CreateS3CredentialDto
      required:
      - awsAccessKeyId
      - awsSecretAccessKey
      - region
      - s3BucketName
      - s3PathPrefix
      type: object
      properties:
        awsAccessKeyId:
          type: string
          description: AWS access key ID.
        awsSecretAccessKey:
          type: string
          description: AWS access key secret. This is not returned in the API.
        region:
          type: string
          description: AWS region in which the S3 bucket is located.
        s3BucketName:
          type: string
          description: AWS S3 bucket name.
        s3PathPrefix:
          type: string
          description: The path prefix for the uploaded recording. Ex. "recordings/"
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    SupabaseBucketPlanRegion:
      title: SupabaseBucketPlanRegion
      type: string
      description: |-
        This is the S3 Region. It should look like us-east-1
        It should be one of the supabase regions defined in the SUPABASE_REGION enum
        Check https://supabase.com/docs/guides/platform/regions for up to date regions
      enum:
      - us-west-1
      - us-east-1
      - us-east-2
      - ca-central-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-central-2
      - eu-north-1
      - ap-south-1
      - ap-southeast-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-2
      - sa-east-1
    SupabaseBucketPlan:
      title: SupabaseBucketPlan
      required:
      - accessKeyId
      - name
      - region
      - secretAccessKey
      - url
      type: object
      properties:
        region:
          $ref: '#/components/schemas/SupabaseBucketPlanRegion'
        url:
          type: string
          description: |-
            This is the S3 compatible URL for Supabase S3
            This should look like https://<project-ID>.supabase.co/storage/v1/s3
        accessKeyId:
          type: string
          description: |-
            This is the Supabase S3 Access Key ID.
            The user creates this in the Supabase project Storage settings
        secretAccessKey:
          type: string
          description: |-
            This is the Supabase S3 Secret Access Key.
            The user creates this in the Supabase project Storage settings along with the access key id
        name:
          type: string
          description: |-
            This is the Supabase S3 Bucket Name.
            The user must create this in Supabase under Storage > Buckets
            A bucket that does not exist will not be checked now, but file uploads will fail
        path:
          type: string
          description: |-
            This is the Supabase S3 Bucket Folder Path.
            The user can create this in Supabase under Storage > Buckets
            A path that does not exist will not be checked now, but file uploads will fail
            A Path is like a folder in the bucket
            Eg. If the bucket is called "my-bucket" and the path is "my-folder", the full path is "my-bucket/my-folder"
          nullable: true
    CreateSupabaseCredentialDto:
      title: CreateSupabaseCredentialDto
      type: object
      properties:
        bucketPlan:
          $ref: '#/components/schemas/SupabaseBucketPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateSmallestAiCredentialDto:
      title: CreateSmallestAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateTavusCredentialDto:
      title: CreateTavusCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateTogetherAiCredentialDto:
      title: CreateTogetherAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateTwilioCredentialDto:
      title: CreateTwilioCredentialDto
      required:
      - accountSid
      - authToken
      type: object
      properties:
        authToken:
          type: string
          description: This is not returned in the API.
        accountSid:
          type: string
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateVonageCredentialDto:
      title: CreateVonageCredentialDto
      required:
      - apiKey
      - apiSecret
      type: object
      properties:
        apiSecret:
          type: string
          description: This is not returned in the API.
        apiKey:
          type: string
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateWebhookCredentialDto:
      title: CreateWebhookCredentialDto
      required:
      - authenticationPlan
      type: object
      properties:
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateXAiCredentialDto:
      title: CreateXAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateGoogleCalendarOAuth2ClientCredentialDto:
      title: CreateGoogleCalendarOAuth2ClientCredentialDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateGoogleCalendarOAuth2AuthorizationCredentialDto:
      title: CreateGoogleCalendarOAuth2AuthorizationCredentialDto
      required:
      - authorizationId
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateGoogleSheetsOAuth2AuthorizationCredentialDto:
      title: CreateGoogleSheetsOAuth2AuthorizationCredentialDto
      required:
      - authorizationId
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateSlackOAuth2AuthorizationCredentialDto:
      title: CreateSlackOAuth2AuthorizationCredentialDto
      required:
      - authorizationId
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    TransferAssistantHookActionDestination:
      title: TransferAssistantHookActionDestination
      description: This is the destination details for the transfer - can be a phone number or SIP URI
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    TransferAssistantHookAction:
      title: TransferAssistantHookAction
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of action - must be "transfer"
          enum:
          - transfer
        destination:
          $ref: '#/components/schemas/TransferAssistantHookActionDestination'
    GoogleVoicemailDetectionPlan:
      title: GoogleVoicemailDetectionPlan
      required:
      - voicemailExpectedDurationSeconds
      type: object
      properties:
        voicemailExpectedDurationSeconds:
          type: number
          description: |-
            This is how long should we listen in order to determine if we were sent to voicemail or not?

            @default 15
          format: double
    OpenAiVoicemailDetectionPlan:
      title: OpenAiVoicemailDetectionPlan
      required:
      - voicemailExpectedDurationSeconds
      type: object
      properties:
        voicemailExpectedDurationSeconds:
          type: number
          description: |-
            This is how long should we listen in order to determine if we were sent to voicemail or not?

            @default 15
          format: double
    TwilioVoicemailDetectionPlanVoicemailDetectionTypesItem:
      title: TwilioVoicemailDetectionPlanVoicemailDetectionTypesItem
      type: string
      enum:
      - machine_start
      - human
      - fax
      - unknown
      - machine_end_beep
      - machine_end_silence
      - machine_end_other
    TwilioVoicemailDetectionPlan:
      title: TwilioVoicemailDetectionPlan
      type: object
      properties:
        voicemailDetectionTypes:
          type: array
          description: |-
            These are the AMD messages from Twilio that are considered as voicemail. Default is ['machine_end_beep', 'machine_end_silence'].

            @default {Array} ['machine_end_beep', 'machine_end_silence']
          nullable: true
          items:
            $ref: '#/components/schemas/TwilioVoicemailDetectionPlanVoicemailDetectionTypesItem'
        enabled:
          type: boolean
          description: |-
            This sets whether the assistant should detect voicemail. Defaults to true.

            @default true
          nullable: true
        machineDetectionTimeout:
          type: number
          description: |-
            The number of seconds that Twilio should attempt to perform answering machine detection before timing out and returning AnsweredBy as unknown. Default is 30 seconds.

            Increasing this value will provide the engine more time to make a determination. This can be useful when DetectMessageEnd is provided in the MachineDetection parameter and there is an expectation of long answering machine greetings that can exceed 30 seconds.

            Decreasing this value will reduce the amount of time the engine has to make a determination. This can be particularly useful when the Enable option is provided in the MachineDetection parameter and you want to limit the time for initial detection.

            Check the [Twilio docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters) for more info.

            @default 30
          format: double
          nullable: true
        machineDetectionSpeechThreshold:
          type: number
          description: |-
            The number of milliseconds that is used as the measuring stick for the length of the speech activity. Durations lower than this value will be interpreted as a human, longer as a machine. Default is 2400 milliseconds.

            Increasing this value will reduce the chance of a False Machine (detected machine, actually human) for a long human greeting (e.g., a business greeting) but increase the time it takes to detect a machine.

            Decreasing this value will reduce the chances of a False Human (detected human, actually machine) for short voicemail greetings. The value of this parameter may need to be reduced by more than 1000ms to detect very short voicemail greetings. A reduction of that significance can result in increased False Machine detections. Adjusting the MachineDetectionSpeechEndThreshold is likely the better approach for short voicemails. Decreasing MachineDetectionSpeechThreshold will also reduce the time it takes to detect a machine.

            Check the [Twilio docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters) for more info.

            @default 2400
          format: double
          nullable: true
        machineDetectionSpeechEndThreshold:
          type: number
          description: |-
            The number of milliseconds of silence after speech activity at which point the speech activity is considered complete. Default is 1200 milliseconds.

            Increasing this value will typically be used to better address the short voicemail greeting scenarios. For short voicemails, there is typically 1000-2000ms of audio followed by 1200-2400ms of silence and then additional audio before the beep. Increasing the MachineDetectionSpeechEndThreshold to ~2500ms will treat the 1200-2400ms of silence as a gap in the greeting but not the end of the greeting and will result in a machine detection. The downsides of such a change include:
            - Increasing the delay for human detection by the amount you increase this parameter, e.g., a change of 1200ms to 2500ms increases human detection delay by 1300ms.
            - Cases where a human has two utterances separated by a period of silence (e.g. a "Hello", then 2000ms of silence, and another "Hello") may be interpreted as a machine.

            Decreasing this value will result in faster human detection. The consequence is that it can lead to increased False Human (detected human, actually machine) detections because a silence gap in a voicemail greeting (not necessarily just in short voicemail scenarios) can be incorrectly interpreted as the end of speech.

            Check the [Twilio docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters) for more info.

            @default 1200
          format: double
          nullable: true
        machineDetectionSilenceTimeout:
          type: number
          description: |-
            The number of milliseconds of initial silence after which an unknown AnsweredBy result will be returned. Default is 5000 milliseconds.

            Increasing this value will result in waiting for a longer period of initial silence before returning an 'unknown' AMD result.

            Decreasing this value will result in waiting for a shorter period of initial silence before returning an 'unknown' AMD result.

            Check the [Twilio docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters) for more info.

            @default 5000
          format: double
          nullable: true
    CompliancePlan:
      title: CompliancePlan
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          description: |-
            When this is enabled, no logs, recordings, or transcriptions will be stored.
            At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.
          nullable: true
        pciEnabled:
          type: boolean
          description: |-
            When this is enabled, the user will be restricted to use PCI-compliant providers, and no logs or transcripts are stored.
            At the end of the call, you will receive an end-of-call-report message to store on your server. Defaults to false.
          nullable: true
    StructuredDataPlan:
      title: StructuredDataPlan
      type: object
      properties:
        messages:
          type: array
          description: |-
            These are the messages used to generate the structured data.

            @default: ```
            [
              {
                "role": "system",
                "content": "You are an expert data extractor. You will be given a transcript of a call. Extract structured data per the JSON Schema. DO NOT return anything except the structured data.\n\nJson Schema:\\n{{schema}}\n\nOnly respond with the JSON."
              },
              {
                "role": "user",
                "content": "Here is the transcript:\n\n{{transcript}}\n\n"
              }
            ]```

            You can customize by providing any messages you want.

            Here are the template variables available:
            - {{transcript}}: the transcript of the call from `call.artifact.transcript`- {{systemPrompt}}: the system prompt of the call from `assistant.model.messages[type=system].content`- {{schema}}: the schema of the structured data from `structuredDataPlan.schema`
          nullable: true
          items:
            type: object
            additionalProperties: true
        enabled:
          type: boolean
          description: |-
            This determines whether structured data is generated and stored in `call.analysis.structuredData`. Defaults to false.

            Usage:
            - If you want to extract structured data, set this to true and provide a `schema`.

            @default false
          nullable: true
        schema:
          $ref: '#/components/schemas/JsonSchema'
        timeoutSeconds:
          type: number
          description: |-
            This is how long the request is tried before giving up. When request times out, `call.analysis.structuredData` will be empty.

            Usage:
            - To guarantee the structured data is generated, set this value high. Note, this will delay the end of call report in cases where model is slow to respond.

            @default 5 seconds
          format: double
          nullable: true
    StructuredDataMultiPlan:
      title: StructuredDataMultiPlan
      required:
      - key
      - plan
      type: object
      properties:
        key:
          type: string
          description: This is the key of the structured data plan in the catalog.
        plan:
          $ref: '#/components/schemas/StructuredDataPlan'
    SuccessEvaluationPlanRubric:
      title: SuccessEvaluationPlanRubric
      type: string
      description: |-
        This enforces the rubric of the evaluation. The output is stored in `call.analysis.successEvaluation`.

        Options include:
        - 'NumericScale': A scale of 1 to 10.
        - 'DescriptiveScale': A scale of Excellent, Good, Fair, Poor.
        - 'Checklist': A checklist of criteria and their status.
        - 'Matrix': A grid that evaluates multiple criteria across different performance levels.
        - 'PercentageScale': A scale of 0% to 100%.
        - 'LikertScale': A scale of Strongly Agree, Agree, Neutral, Disagree, Strongly Disagree.
        - 'AutomaticRubric': Automatically break down evaluation into several criteria, each with its own score.
        - 'PassFail': A simple 'true' if call passed, 'false' if not.

        Default is 'PassFail'.
      enum:
      - NumericScale
      - DescriptiveScale
      - Checklist
      - Matrix
      - PercentageScale
      - LikertScale
      - AutomaticRubric
      - PassFail
    SuccessEvaluationPlan:
      title: SuccessEvaluationPlan
      type: object
      properties:
        rubric:
          $ref: '#/components/schemas/SuccessEvaluationPlanRubric'
        messages:
          type: array
          description: |-
            These are the messages used to generate the success evaluation.

            @default: ```
            [
              {
                "role": "system",
                "content": "You are an expert call evaluator. You will be given a transcript of a call and the system prompt of the AI participant. Determine if the call was successful based on the objectives inferred from the system prompt. DO NOT return anything except the result.\n\nRubric:\\n{{rubric}}\n\nOnly respond with the result."
              },
              {
                "role": "user",
                "content": "Here is the transcript:\n\n{{transcript}}\n\n"
              },
              {
                "role": "user",
                "content": "Here was the system prompt of the call:\n\n{{systemPrompt}}\n\n"
              }
            ]```

            You can customize by providing any messages you want.

            Here are the template variables available:
            - {{transcript}}: the transcript of the call from `call.artifact.transcript`- {{systemPrompt}}: the system prompt of the call from `assistant.model.messages[type=system].content`- {{rubric}}: the rubric of the success evaluation from `successEvaluationPlan.rubric`
          nullable: true
          items:
            type: object
            additionalProperties: true
        enabled:
          type: boolean
          description: |-
            This determines whether a success evaluation is generated and stored in `call.analysis.successEvaluation`. Defaults to true.

            Usage:
            - If you want to disable the success evaluation, set this to false.

            @default true
          nullable: true
        timeoutSeconds:
          type: number
          description: |-
            This is how long the request is tried before giving up. When request times out, `call.analysis.successEvaluation` will be empty.

            Usage:
            - To guarantee the success evaluation is generated, set this value high. Note, this will delay the end of call report in cases where model is slow to respond.

            @default 5 seconds
          format: double
          nullable: true
    AnalysisPlan:
      title: AnalysisPlan
      type: object
      properties:
        summaryPlan:
          $ref: '#/components/schemas/SummaryPlan'
        structuredDataPlan:
          $ref: '#/components/schemas/StructuredDataPlan'
        structuredDataMultiPlan:
          type: array
          description: This is an array of structured data plan catalogs. Each entry includes a `key` and a `plan` for generating the structured data from the call. This outputs to `call.analysis.structuredDataMulti`.
          nullable: true
          items:
            $ref: '#/components/schemas/StructuredDataMultiPlan'
        successEvaluationPlan:
          $ref: '#/components/schemas/SuccessEvaluationPlan'
    MessagePlan:
      title: MessagePlan
      type: object
      properties:
        idleMessages:
          type: array
          description: |-
            This are the messages that the assistant will speak when the user hasn't responded for `idleTimeoutSeconds`. Each time the timeout is triggered, a random message will be chosen from this array.

            Usage:
            - If user gets distracted and doesn't respond for a while, this can be used to grab their attention.
            - If the transcriber doesn't pick up what the user said, this can be used to ask the user to repeat themselves. (From the perspective of the assistant, the conversation is idle since it didn't "hear" any user messages.)

            @default null (no idle message is spoken)
          nullable: true
          items:
            type: string
        idleMessageMaxSpokenCount:
          type: number
          description: |-
            This determines the maximum number of times `idleMessages` can be spoken during the call.

            @default 3
          format: double
          nullable: true
        idleTimeoutSeconds:
          type: number
          description: |-
            This is the timeout in seconds before a message from `idleMessages` is spoken. The clock starts when the assistant finishes speaking and remains active until the user speaks.

            @default 10
          format: double
          nullable: true
        silenceTimeoutMessage:
          type: string
          description: |-
            This is the message that the assistant will say if the call ends due to silence.

            If unspecified, it will hang up without saying anything.
          nullable: true
    AssistantCustomEndpointingRule:
      title: AssistantCustomEndpointingRule
      required:
      - regex
      - timeoutSeconds
      type: object
      properties:
        regex:
          type: string
          description: |-
            This is the regex pattern to match.

            Note:
            - This works by using the `RegExp.test` method in Node.JS. Eg. `/hello/.test("hello there")` will return `true`.

            Hot tip:
            - In JavaScript, escape `\` when sending the regex pattern. Eg. `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send `"hello\\sthere"` instead.
            - `RegExp.test` does substring matching, so `/cat/.test("I love cats")` will return `true`. To do full string matching, send "^cat$".
        regexOptions:
          type: array
          description: |-
            These are the options for the regex match. Defaults to all disabled.

            @default []
          nullable: true
          items:
            $ref: '#/components/schemas/RegexOption'
        timeoutSeconds:
          type: number
          description: "This is the endpointing timeout in seconds, if the rule is matched."
          format: double
    CustomerCustomEndpointingRule:
      title: CustomerCustomEndpointingRule
      required:
      - regex
      - timeoutSeconds
      type: object
      properties:
        regex:
          type: string
          description: |-
            This is the regex pattern to match.

            Note:
            - This works by using the `RegExp.test` method in Node.JS. Eg. `/hello/.test("hello there")` will return `true`.

            Hot tip:
            - In JavaScript, escape `\` when sending the regex pattern. Eg. `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send `"hello\\sthere"` instead.
            - `RegExp.test` does substring matching, so `/cat/.test("I love cats")` will return `true`. To do full string matching, send "^cat$".
        regexOptions:
          type: array
          description: |-
            These are the options for the regex match. Defaults to all disabled.

            @default []
          nullable: true
          items:
            $ref: '#/components/schemas/RegexOption'
        timeoutSeconds:
          type: number
          description: "This is the endpointing timeout in seconds, if the rule is matched."
          format: double
    BothCustomEndpointingRule:
      title: BothCustomEndpointingRule
      required:
      - assistantRegex
      - customerRegex
      - timeoutSeconds
      type: object
      properties:
        assistantRegex:
          type: string
          description: |-
            This is the regex pattern to match the assistant's message.

            Note:
            - This works by using the `RegExp.test` method in Node.JS. Eg. `/hello/.test("hello there")` will return `true`.

            Hot tip:
            - In JavaScript, escape `\` when sending the regex pattern. Eg. `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send `"hello\\sthere"` instead.
            - `RegExp.test` does substring matching, so `/cat/.test("I love cats")` will return `true`. To do full string matching, send "^cat$".
        assistantRegexOptions:
          type: array
          description: |-
            These are the options for the assistant's message regex match. Defaults to all disabled.

            @default []
          nullable: true
          items:
            $ref: '#/components/schemas/RegexOption'
        customerRegex:
          type: string
        customerRegexOptions:
          type: array
          description: |-
            These are the options for the customer's message regex match. Defaults to all disabled.

            @default []
          nullable: true
          items:
            $ref: '#/components/schemas/RegexOption'
        timeoutSeconds:
          type: number
          description: "This is the endpointing timeout in seconds, if the rule is matched."
          format: double
    VapiSmartEndpointingPlanProvider:
      title: VapiSmartEndpointingPlanProvider
      type: string
      description: This is the provider for the smart endpointing plan.
      enum:
      - vapi
      - livekit
    VapiSmartEndpointingPlan:
      title: VapiSmartEndpointingPlan
      required:
      - provider
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/VapiSmartEndpointingPlanProvider'
    LivekitSmartEndpointingPlanProvider:
      title: LivekitSmartEndpointingPlanProvider
      type: string
      description: This is the provider for the smart endpointing plan.
      enum:
      - vapi
      - livekit
    LivekitSmartEndpointingPlan:
      title: LivekitSmartEndpointingPlan
      required:
      - provider
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/LivekitSmartEndpointingPlanProvider'
        waitFunction:
          type: string
          description: |-
            This expression describes how long the bot will wait to start speaking based on the likelihood that the user has reached an endpoint.

            This is a millisecond valued function. It maps probabilities (real numbers on [0,1]) to milliseconds that the bot should wait before speaking ([0, \infty]). Any negative values that are returned are set to zero (the bot can't start talking in the past).

            A probability of zero represents very high confidence that the caller has stopped speaking, and would like the bot to speak to them. A probability of one represents very high confidence that the caller is still speaking.

            Under the hood, this is parsed into a mathjs expression. Whatever you use to write your expression needs to be valid with respect to mathjs

            @default "70 + 4000 * x"
          nullable: true
    TranscriptionEndpointingPlan:
      title: TranscriptionEndpointingPlan
      type: object
      properties:
        onPunctuationSeconds:
          type: number
          description: |-
            The minimum number of seconds to wait after transcription ending with punctuation before sending a request to the model. Defaults to 0.1.

            This setting exists because the transcriber punctuates the transcription when it's more confident that customer has completed a thought.

            @default 0.1
          format: double
          nullable: true
        onNoPunctuationSeconds:
          type: number
          description: |-
            The minimum number of seconds to wait after transcription ending without punctuation before sending a request to the model. Defaults to 1.5.

            This setting exists to catch the cases where the transcriber was not confident enough to punctuate the transcription, but the customer is done and has been silent for a long time.

            @default 1.5
          format: double
          nullable: true
        onNumberSeconds:
          type: number
          description: |-
            The minimum number of seconds to wait after transcription ending with a number before sending a request to the model. Defaults to 0.4.

            This setting exists because the transcriber will sometimes punctuate the transcription ending with a number, even though the customer hasn't uttered the full number. This happens commonly for long numbers when the customer reads the number in chunks.

            @default 0.5
          format: double
          nullable: true
    StartSpeakingPlanSmartEndpointingPlan:
      title: StartSpeakingPlanSmartEndpointingPlan
      description: |-
        This is the plan for smart endpointing. Pick between Vapi smart endpointing or LiveKit smart endpointing (or nothing). We strongly recommend using livekit endpointing when working in English. LiveKit endpointing is not supported in other languages, yet.

        If this is set, it will override and take precedence over `transcriptionEndpointingPlan`.
        This plan will still be overridden by any matching `customEndpointingRules`.
      oneOf:
      - $ref: '#/components/schemas/VapiSmartEndpointingPlan'
      - $ref: '#/components/schemas/LivekitSmartEndpointingPlan'
    StartSpeakingPlanCustomEndpointingRulesItem:
      title: StartSpeakingPlanCustomEndpointingRulesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - assistant
        - $ref: '#/components/schemas/AssistantCustomEndpointingRule'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - customer
        - $ref: '#/components/schemas/CustomerCustomEndpointingRule'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - both
        - $ref: '#/components/schemas/BothCustomEndpointingRule'
    StartSpeakingPlan:
      title: StartSpeakingPlan
      type: object
      properties:
        waitSeconds:
          type: number
          description: |-
            This is how long assistant waits before speaking. Defaults to 0.4.

            This is the minimum it will wait but if there is latency is the pipeline, this minimum will be exceeded. This is intended as a stopgap in case the pipeline is moving too fast.

            Example:
            - If model generates tokens and voice generates bytes within 100ms, the pipeline still waits 300ms before outputting speech.

            Usage:
            - If the customer is taking long pauses, set this to a higher value.
            - If the assistant is accidentally jumping in too much, set this to a higher value.

            @default 0.4
          format: double
          nullable: true
        smartEndpointingEnabled:
          type: object
          additionalProperties: true
          nullable: true
        smartEndpointingPlan:
          $ref: '#/components/schemas/StartSpeakingPlanSmartEndpointingPlan'
        customEndpointingRules:
          type: array
          description: |-
            These are the custom endpointing rules to set an endpointing timeout based on a regex on the customer's speech or the assistant's last message.

            Usage:
            - If you have yes/no questions like "are you interested in a loan?", you can set a shorter timeout.
            - If you have questions where the customer may pause to look up information like "what's my account number?", you can set a longer timeout.
            - If you want to wait longer while customer is enumerating a list of numbers, you can set a longer timeout.

            These rules have the highest precedence and will override both `smartEndpointingPlan` and `transcriptionEndpointingPlan` when a rule is matched.

            The rules are evaluated in order and the first one that matches will be used.

            Order of precedence for endpointing:
            1. customEndpointingRules (if any match)
            2. smartEndpointingPlan (if set)
            3. transcriptionEndpointingPlan

            @default []
          nullable: true
          items:
            $ref: '#/components/schemas/StartSpeakingPlanCustomEndpointingRulesItem'
        transcriptionEndpointingPlan:
          $ref: '#/components/schemas/TranscriptionEndpointingPlan'
    StopSpeakingPlan:
      title: StopSpeakingPlan
      type: object
      properties:
        numWords:
          type: number
          description: |-
            This is the number of words that the customer has to say before the assistant will stop talking.

            Words like "stop", "actually", "no", etc. will always interrupt immediately regardless of this value.

            Words like "okay", "yeah", "right" will never interrupt.

            When set to 0, `voiceSeconds` is used in addition to the transcriptions to determine the customer has started speaking.

            Defaults to 0.

            @default 0
          format: double
          nullable: true
        voiceSeconds:
          type: number
          description: |-
            This is the seconds customer has to speak before the assistant stops talking. This uses the VAD (Voice Activity Detection) spike to determine if the customer has started speaking.

            Considerations:
            - A lower value might be more responsive but could potentially pick up non-speech sounds.
            - A higher value reduces false positives but might slightly delay the detection of speech onset.

            This is only used if `numWords` is set to 0.

            Defaults to 0.2

            @default 0.2
          format: double
          nullable: true
        backoffSeconds:
          type: number
          description: |-
            This is the seconds to wait before the assistant will start talking again after being interrupted.

            Defaults to 1.

            @default 1
          format: double
          nullable: true
        acknowledgementPhrases:
          type: array
          description: |-
            These are the phrases that will never interrupt the assistant, even if numWords threshold is met.
            These are typically acknowledgement or backchanneling phrases.
          nullable: true
          items:
            type: string
        interruptionPhrases:
          type: array
          description: |-
            These are the phrases that will always interrupt the assistant immediately, regardless of numWords.
            These are typically phrases indicating disagreement or desire to stop.
          nullable: true
          items:
            type: string
    MonitorPlan:
      title: MonitorPlan
      type: object
      properties:
        listenEnabled:
          type: boolean
          description: |-
            This determines whether the assistant's calls allow live listening. Defaults to true.

            Fetch `call.monitor.listenUrl` to get the live listening URL.

            @default true
          nullable: true
        controlEnabled:
          type: boolean
          description: |-
            This determines whether the assistant's calls allow live control. Defaults to true.

            Fetch `call.monitor.controlUrl` to get the live control URL.

            To use, send any control message via a POST request to `call.monitor.controlUrl`. Here are the types of controls supported: https://docs.vapi.ai/api-reference/messages/client-inbound-message

            @default true
          nullable: true
    AssistantHookFilter:
      title: AssistantHookFilter
      required:
      - key
      - oneOf
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of filter - currently only "oneOf" is supported
          enum:
          - oneOf
        key:
          type: string
          description: This is the key to filter on (e.g. "call.endedReason")
        oneOf:
          type: array
          description: This is the array of possible values to match against
          items:
            type: string
    AssistantHookActionBase:
      title: AssistantHookActionBase
      type: object
      properties: {}
    AssistantHooks:
      title: AssistantHooks
      required:
      - do
      - "on"
      type: object
      properties:
        "on":
          type: string
          description: This is the event that triggers this hook
          enum:
          - call.ending
        filters:
          type: array
          description: This is the set of filters that must match for the hook to trigger
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantHookFilter'
        do:
          type: array
          description: This is the set of actions to perform when the hook triggers
          items:
            $ref: '#/components/schemas/AssistantHookActionBase'
    KeypadInputPlanDelimiters:
      title: KeypadInputPlanDelimiters
      type: string
      description: |-
        This is the delimiter(s) that will be used to process the input.
        Can be '#', '*', or an empty array.
      enum:
      - '#'
      - '*'
      - ""
    KeypadInputPlan:
      title: KeypadInputPlan
      type: object
      properties:
        enabled:
          type: boolean
          description: |-
            This keeps track of whether the user has enabled keypad input.
            By default, it is off.

            @default false
          nullable: true
        timeoutSeconds:
          type: number
          description: |-
            This is the time in seconds to wait before processing the input.
            If the input is not received within this time, the input will be ignored.
            If set to "off", the input will be processed when the user enters a delimiter or immediately if no delimiter is used.

            @default 2
          format: double
          nullable: true
        delimiters:
          $ref: '#/components/schemas/KeypadInputPlanDelimiters'
    CreateAssistantDtoTranscriber:
      title: CreateAssistantDtoTranscriber
      description: These are the options for the assistant's transcriber.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/AssemblyAiTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureSpeechTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-transcriber
        - $ref: '#/components/schemas/CustomTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/GladiaTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/SpeechmaticsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - talkscriber
        - $ref: '#/components/schemas/TalkscriberTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiTranscriber'
    CreateAssistantDtoModel:
      title: CreateAssistantDtoModel
      description: These are the options for the assistant's LLM.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/AnyscaleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/AnthropicModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CerebrasModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CustomLlmModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/DeepInfraModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/DeepSeekModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/GroqModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/InflectionAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/OpenRouterModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/PerplexityAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/TogetherAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/XaiModel'
    CreateAssistantDtoVoice:
      title: CreateAssistantDtoVoice
      description: These are the options for the assistant's voice.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CartesiaVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-voice
        - $ref: '#/components/schemas/CustomVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/HumeVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/LmntVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/NeuphonicVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/PlayHtVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/RimeAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/SmallestAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/TavusVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiVoice'
    CreateAssistantDtoFirstMessageMode:
      title: CreateAssistantDtoFirstMessageMode
      type: string
      description: |-
        This is the mode for the first message. Default is 'assistant-speaks-first'.

        Use:
        - 'assistant-speaks-first' to have the assistant speak first.
        - 'assistant-waits-for-user' to have the assistant wait for the user to speak first.
        - 'assistant-speaks-first-with-model-generated-message' to have the assistant speak first with a message generated by the model based on the conversation state. (`assistant.model.messages` at call start, `call.messages` at squad transfer points).

        @default 'assistant-speaks-first'
      enum:
      - assistant-speaks-first
      - assistant-speaks-first-with-model-generated-message
      - assistant-waits-for-user
    CreateAssistantDtoVoicemailDetection:
      title: CreateAssistantDtoVoicemailDetection
      description: |-
        These are the settings to configure or disable voicemail detection. Alternatively, voicemail detection can be configured using the model.tools=[VoicemailTool].
        This uses Twilio's built-in detection while the VoicemailTool relies on the model to detect if a voicemail was reached.
        You can use neither of them, one of them, or both of them. By default, Twilio built-in detection is enabled while VoicemailTool is not.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
    CreateAssistantDtoClientMessagesItem:
      title: CreateAssistantDtoClientMessagesItem
      type: string
      enum:
      - conversation-update
      - function-call
      - function-call-result
      - hang
      - language-changed
      - metadata
      - model-output
      - speech-update
      - status-update
      - transcript
      - tool-calls
      - tool-calls-result
      - transfer-update
      - user-interrupted
      - voice-input
      - workflow.node.started
    CreateAssistantDtoServerMessagesItem:
      title: CreateAssistantDtoServerMessagesItem
      type: string
      enum:
      - conversation-update
      - end-of-call-report
      - function-call
      - hang
      - language-changed
      - language-change-detected
      - model-output
      - phone-call-control
      - speech-update
      - status-update
      - transcript
      - "transcript[transcriptType='final']"
      - tool-calls
      - transfer-destination-request
      - transfer-update
      - user-interrupted
      - voice-input
    CreateAssistantDtoBackgroundSoundZero:
      title: CreateAssistantDtoBackgroundSoundZero
      type: string
      enum:
      - "off"
      - office
    CreateAssistantDtoBackgroundSound:
      title: CreateAssistantDtoBackgroundSound
      description: |-
        This is the background sound in the call. Default for phone calls is 'office' and default for web calls is 'off'.
        You can also provide a custom sound by providing a URL to an audio file.
      oneOf:
      - $ref: '#/components/schemas/CreateAssistantDtoBackgroundSoundZero'
      - type: string
    CreateAssistantDtoCredentialsItem:
      title: CreateAssistantDtoCredentialsItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure-openai
        - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/CreateAzureCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-sip-trunk
        - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cloudflare
        - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gcp
        - $ref: '#/components/schemas/CreateGcpCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/CreateGladiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gohighlevel
        - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/CreateGoogleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/CreateGroqCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - langfuse
        - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/CreateLmntCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - runpod
        - $ref: '#/components/schemas/CreateRunpodCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - s3
        - $ref: '#/components/schemas/CreateS3CredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - supabase
        - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/CreateTavusCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonageCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - webhook
        - $ref: '#/components/schemas/CreateWebhookCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/CreateXAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/CreateHumeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - mistral
        - $ref: '#/components/schemas/CreateMistralCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/CreateTrieveCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-client
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.sheets.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - slack.oauth2-authorization
        - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
    CreateAssistantDto:
      title: CreateAssistantDto
      type: object
      properties:
        transcriber:
          $ref: '#/components/schemas/CreateAssistantDtoTranscriber'
        model:
          $ref: '#/components/schemas/CreateAssistantDtoModel'
        voice:
          $ref: '#/components/schemas/CreateAssistantDtoVoice'
        firstMessage:
          type: string
          description: |-
            This is the first message that the assistant will say. This can also be a URL to a containerized audio file (mp3, wav, etc.).

            If unspecified, assistant will wait for user to speak and use the model to respond once they speak.
          nullable: true
        firstMessageInterruptionsEnabled:
          type: boolean
          nullable: true
        firstMessageMode:
          $ref: '#/components/schemas/CreateAssistantDtoFirstMessageMode'
        voicemailDetection:
          $ref: '#/components/schemas/CreateAssistantDtoVoicemailDetection'
        clientMessages:
          type: array
          description: "These are the messages that will be sent to your Client SDKs. Default is conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started. You can check the shape of the messages in ClientMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/CreateAssistantDtoClientMessagesItem'
        serverMessages:
          type: array
          description: "These are the messages that will be sent to your Server URL. Default is conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted. You can check the shape of the messages in ServerMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/CreateAssistantDtoServerMessagesItem'
        silenceTimeoutSeconds:
          type: number
          description: |-
            How many seconds of silence to wait before ending the call. Defaults to 30.

            @default 30
          format: double
          nullable: true
        maxDurationSeconds:
          type: number
          description: |-
            This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.

            @default 600 (10 minutes)
          format: double
          nullable: true
        backgroundSound:
          $ref: '#/components/schemas/CreateAssistantDtoBackgroundSound'
        backgroundDenoisingEnabled:
          type: boolean
          description: |-
            This enables filtering of noise and background speech while the user is talking.

            Default `false` while in beta.

            @default false
          nullable: true
        modelOutputInMessagesEnabled:
          type: boolean
          description: |-
            This determines whether the model's output is used in conversation history rather than the transcription of assistant's speech.

            Default `false` while in beta.

            @default false
          nullable: true
        transportConfigurations:
          type: array
          description: "These are the configurations to be passed to the transport providers of assistant's calls, like Twilio. You can store multiple configurations for different transport providers. For a call, only the configuration matching the call transport provider is used."
          nullable: true
          items:
            $ref: '#/components/schemas/TransportConfigurationTwilio'
        observabilityPlan:
          $ref: '#/components/schemas/LangfuseObservabilityPlan'
        credentials:
          type: array
          description: "These are dynamic credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can supplement an additional credentials using this. Dynamic credentials override existing credentials."
          nullable: true
          items:
            $ref: '#/components/schemas/CreateAssistantDtoCredentialsItem'
        name:
          type: string
          description: |-
            This is the name of the assistant.

            This is required when you want to transfer between assistants in a call.
          nullable: true
        voicemailMessage:
          type: string
          description: |-
            This is the message that the assistant will say if the call is forwarded to voicemail.

            If unspecified, it will hang up.
          nullable: true
        endCallMessage:
          type: string
          description: |-
            This is the message that the assistant will say if it ends the call.

            If unspecified, it will hang up without saying anything.
          nullable: true
        endCallPhrases:
          type: array
          description: "This list contains phrases that, if spoken by the assistant, will trigger the call to be hung up. Case insensitive."
          nullable: true
          items:
            type: string
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the assistant.
          nullable: true
        analysisPlan:
          $ref: '#/components/schemas/AnalysisPlan'
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
        messagePlan:
          $ref: '#/components/schemas/MessagePlan'
        startSpeakingPlan:
          $ref: '#/components/schemas/StartSpeakingPlan'
        stopSpeakingPlan:
          $ref: '#/components/schemas/StopSpeakingPlan'
        monitorPlan:
          $ref: '#/components/schemas/MonitorPlan'
        credentialIds:
          type: array
          description: "These are the credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can provide a subset using this."
          nullable: true
          items:
            type: string
        server:
          $ref: '#/components/schemas/Server'
        hooks:
          type: array
          description: This is a set of actions that will be performed on certain events.
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantHooks'
        keypadInputPlan:
          $ref: '#/components/schemas/KeypadInputPlan'
    AssistantOverridesTranscriber:
      title: AssistantOverridesTranscriber
      description: These are the options for the assistant's transcriber.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/AssemblyAiTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureSpeechTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-transcriber
        - $ref: '#/components/schemas/CustomTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/GladiaTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/SpeechmaticsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - talkscriber
        - $ref: '#/components/schemas/TalkscriberTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiTranscriber'
    AssistantOverridesModel:
      title: AssistantOverridesModel
      description: These are the options for the assistant's LLM.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/AnyscaleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/AnthropicModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CerebrasModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CustomLlmModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/DeepInfraModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/DeepSeekModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/GroqModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/InflectionAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/OpenRouterModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/PerplexityAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/TogetherAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/XaiModel'
    AssistantOverridesVoice:
      title: AssistantOverridesVoice
      description: These are the options for the assistant's voice.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CartesiaVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-voice
        - $ref: '#/components/schemas/CustomVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/HumeVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/LmntVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/NeuphonicVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/PlayHtVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/RimeAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/SmallestAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/TavusVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiVoice'
    AssistantOverridesFirstMessageMode:
      title: AssistantOverridesFirstMessageMode
      type: string
      description: |-
        This is the mode for the first message. Default is 'assistant-speaks-first'.

        Use:
        - 'assistant-speaks-first' to have the assistant speak first.
        - 'assistant-waits-for-user' to have the assistant wait for the user to speak first.
        - 'assistant-speaks-first-with-model-generated-message' to have the assistant speak first with a message generated by the model based on the conversation state. (`assistant.model.messages` at call start, `call.messages` at squad transfer points).

        @default 'assistant-speaks-first'
      enum:
      - assistant-speaks-first
      - assistant-speaks-first-with-model-generated-message
      - assistant-waits-for-user
    AssistantOverridesVoicemailDetection:
      title: AssistantOverridesVoicemailDetection
      description: |-
        These are the settings to configure or disable voicemail detection. Alternatively, voicemail detection can be configured using the model.tools=[VoicemailTool].
        This uses Twilio's built-in detection while the VoicemailTool relies on the model to detect if a voicemail was reached.
        You can use neither of them, one of them, or both of them. By default, Twilio built-in detection is enabled while VoicemailTool is not.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
    AssistantOverridesClientMessagesItem:
      title: AssistantOverridesClientMessagesItem
      type: string
      enum:
      - conversation-update
      - function-call
      - function-call-result
      - hang
      - language-changed
      - metadata
      - model-output
      - speech-update
      - status-update
      - transcript
      - tool-calls
      - tool-calls-result
      - transfer-update
      - user-interrupted
      - voice-input
      - workflow.node.started
    AssistantOverridesServerMessagesItem:
      title: AssistantOverridesServerMessagesItem
      type: string
      enum:
      - conversation-update
      - end-of-call-report
      - function-call
      - hang
      - language-changed
      - language-change-detected
      - model-output
      - phone-call-control
      - speech-update
      - status-update
      - transcript
      - "transcript[transcriptType='final']"
      - tool-calls
      - transfer-destination-request
      - transfer-update
      - user-interrupted
      - voice-input
    AssistantOverridesBackgroundSoundZero:
      title: AssistantOverridesBackgroundSoundZero
      type: string
      enum:
      - "off"
      - office
    AssistantOverridesBackgroundSound:
      title: AssistantOverridesBackgroundSound
      description: |-
        This is the background sound in the call. Default for phone calls is 'office' and default for web calls is 'off'.
        You can also provide a custom sound by providing a URL to an audio file.
      oneOf:
      - $ref: '#/components/schemas/AssistantOverridesBackgroundSoundZero'
      - type: string
    AssistantOverridesCredentialsItem:
      title: AssistantOverridesCredentialsItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure-openai
        - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/CreateAzureCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-sip-trunk
        - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cloudflare
        - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gcp
        - $ref: '#/components/schemas/CreateGcpCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/CreateGladiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gohighlevel
        - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/CreateGoogleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/CreateGroqCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - langfuse
        - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/CreateLmntCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - runpod
        - $ref: '#/components/schemas/CreateRunpodCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - s3
        - $ref: '#/components/schemas/CreateS3CredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - supabase
        - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/CreateTavusCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonageCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - webhook
        - $ref: '#/components/schemas/CreateWebhookCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/CreateXAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/CreateHumeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - mistral
        - $ref: '#/components/schemas/CreateMistralCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/CreateTrieveCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-client
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.sheets.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - slack.oauth2-authorization
        - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
    AssistantOverrides:
      title: AssistantOverrides
      type: object
      properties:
        transcriber:
          $ref: '#/components/schemas/AssistantOverridesTranscriber'
        model:
          $ref: '#/components/schemas/AssistantOverridesModel'
        voice:
          $ref: '#/components/schemas/AssistantOverridesVoice'
        firstMessage:
          type: string
          description: |-
            This is the first message that the assistant will say. This can also be a URL to a containerized audio file (mp3, wav, etc.).

            If unspecified, assistant will wait for user to speak and use the model to respond once they speak.
          nullable: true
        firstMessageInterruptionsEnabled:
          type: boolean
          nullable: true
        firstMessageMode:
          $ref: '#/components/schemas/AssistantOverridesFirstMessageMode'
        voicemailDetection:
          $ref: '#/components/schemas/AssistantOverridesVoicemailDetection'
        clientMessages:
          type: array
          description: "These are the messages that will be sent to your Client SDKs. Default is conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started. You can check the shape of the messages in ClientMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantOverridesClientMessagesItem'
        serverMessages:
          type: array
          description: "These are the messages that will be sent to your Server URL. Default is conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted. You can check the shape of the messages in ServerMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantOverridesServerMessagesItem'
        silenceTimeoutSeconds:
          type: number
          description: |-
            How many seconds of silence to wait before ending the call. Defaults to 30.

            @default 30
          format: double
          nullable: true
        maxDurationSeconds:
          type: number
          description: |-
            This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.

            @default 600 (10 minutes)
          format: double
          nullable: true
        backgroundSound:
          $ref: '#/components/schemas/AssistantOverridesBackgroundSound'
        backgroundDenoisingEnabled:
          type: boolean
          description: |-
            This enables filtering of noise and background speech while the user is talking.

            Default `false` while in beta.

            @default false
          nullable: true
        modelOutputInMessagesEnabled:
          type: boolean
          description: |-
            This determines whether the model's output is used in conversation history rather than the transcription of assistant's speech.

            Default `false` while in beta.

            @default false
          nullable: true
        transportConfigurations:
          type: array
          description: "These are the configurations to be passed to the transport providers of assistant's calls, like Twilio. You can store multiple configurations for different transport providers. For a call, only the configuration matching the call transport provider is used."
          nullable: true
          items:
            $ref: '#/components/schemas/TransportConfigurationTwilio'
        observabilityPlan:
          $ref: '#/components/schemas/LangfuseObservabilityPlan'
        credentials:
          type: array
          description: "These are dynamic credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can supplement an additional credentials using this. Dynamic credentials override existing credentials."
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantOverridesCredentialsItem'
        variableValues:
          type: object
          additionalProperties: true
          description: |-
            These are values that will be used to replace the template variables in the assistant messages and other text-based fields.
            This uses LiquidJS syntax. https://liquidjs.com/tutorials/intro-to-liquid.html

            So for example, `{{ name }}` will be replaced with the value of `name` in `variableValues`.
            `{{"now" | date: "%b %d, %Y, %I:%M %p", "America/New_York"}}` will be replaced with the current date and time in New York.
             Some VAPI reserved defaults:
             - *customer* - the customer object
          nullable: true
        name:
          type: string
          description: |-
            This is the name of the assistant.

            This is required when you want to transfer between assistants in a call.
          nullable: true
        voicemailMessage:
          type: string
          description: |-
            This is the message that the assistant will say if the call is forwarded to voicemail.

            If unspecified, it will hang up.
          nullable: true
        endCallMessage:
          type: string
          description: |-
            This is the message that the assistant will say if it ends the call.

            If unspecified, it will hang up without saying anything.
          nullable: true
        endCallPhrases:
          type: array
          description: "This list contains phrases that, if spoken by the assistant, will trigger the call to be hung up. Case insensitive."
          nullable: true
          items:
            type: string
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the assistant.
          nullable: true
        analysisPlan:
          $ref: '#/components/schemas/AnalysisPlan'
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
        messagePlan:
          $ref: '#/components/schemas/MessagePlan'
        startSpeakingPlan:
          $ref: '#/components/schemas/StartSpeakingPlan'
        stopSpeakingPlan:
          $ref: '#/components/schemas/StopSpeakingPlan'
        monitorPlan:
          $ref: '#/components/schemas/MonitorPlan'
        credentialIds:
          type: array
          description: "These are the credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can provide a subset using this."
          nullable: true
          items:
            type: string
        server:
          $ref: '#/components/schemas/Server'
        hooks:
          type: array
          description: This is a set of actions that will be performed on certain events.
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantHooks'
        keypadInputPlan:
          $ref: '#/components/schemas/KeypadInputPlan'
    SquadMemberDto:
      title: SquadMemberDto
      type: object
      properties:
        assistantId:
          type: string
          description: "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          nullable: true
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
        assistantDestinations:
          type: array
          description: |-
            These are the others assistants that this assistant can transfer to.

            If the assistant already has transfer call tool, these destinations are just appended to existing ones.
          nullable: true
          items:
            $ref: '#/components/schemas/TransferDestinationAssistant'
    CreateSquadDto:
      title: CreateSquadDto
      required:
      - members
      type: object
      properties:
        name:
          type: string
          description: This is the name of the squad.
          nullable: true
        members:
          type: array
          description: |-
            This is the list of assistants that make up the squad.

            The call will start with the first assistant in the list.
          items:
            $ref: '#/components/schemas/SquadMemberDto'
        membersOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
    ImportTwilioPhoneNumberDtoFallbackDestination:
      title: ImportTwilioPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ImportTwilioPhoneNumberDto:
      title: ImportTwilioPhoneNumberDto
      required:
      - twilioAccountSid
      - twilioAuthToken
      - twilioPhoneNumber
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/ImportTwilioPhoneNumberDtoFallbackDestination'
        twilioPhoneNumber:
          type: string
          description: These are the digits of the phone number you own on your Twilio.
        twilioAccountSid:
          type: string
          description: This is your Twilio Account SID that will be used to handle this phone number.
        twilioAuthToken:
          type: string
          description: This is the Twilio Auth Token that will be used to handle this phone number.
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
    CreateCustomerDto:
      title: CreateCustomerDto
      type: object
      properties:
        numberE164CheckEnabled:
          type: boolean
          description: |-
            This is the flag to toggle the E164 check for the `number` field. This is an advanced property which should be used if you know your use case requires it.

            Use cases:
            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`, or `abc`. This is useful for dialing out to non-E164 numbers on your SIP trunks.
            - `true` (default): To allow only E164 numbers like `+14155551234`. This is standard for PSTN calls.

            If `false`, the `number` is still required to only contain alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).

            @default true (E164 check is enabled)
          nullable: true
        extension:
          type: string
          description: This is the extension that will be dialed after the call is answered.
          nullable: true
        number:
          type: string
          description: This is the number of the customer.
          nullable: true
        sipUri:
          type: string
          description: This is the SIP URI of the customer.
          nullable: true
        name:
          type: string
          description: |-
            This is the name of the customer. This is just for your own reference.

            For SIP inbound calls, this is extracted from the `From` SIP header with format `"Display Name" <sip:username@domain>`.
          nullable: true
    SchedulePlan:
      title: SchedulePlan
      required:
      - earliestAt
      type: object
      properties:
        earliestAt:
          type: string
          description: This is the ISO 8601 date-time string of the earliest time the call can be scheduled.
          format: date-time
        latestAt:
          type: string
          description: This is the ISO 8601 date-time string of the latest time the call can be scheduled.
          format: date-time
          nullable: true
    CallType:
      title: CallType
      type: string
      description: This is the type of call.
      enum:
      - inboundPhoneCall
      - outboundPhoneCall
      - webCall
    CallCostsItem:
      title: CallCostsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transport
        - $ref: '#/components/schemas/TransportCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transcriber
        - $ref: '#/components/schemas/TranscriberCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - model
        - $ref: '#/components/schemas/ModelCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/VoiceCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail-detection
        - $ref: '#/components/schemas/VoicemailDetectionCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - analysis
        - $ref: '#/components/schemas/AnalysisCost'
    CallMessagesItem:
      title: CallMessagesItem
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/BotMessage'
      - $ref: '#/components/schemas/ToolCallMessage'
      - $ref: '#/components/schemas/ToolCallResultMessage'
    CallPhoneCallProvider:
      title: CallPhoneCallProvider
      type: string
      description: |-
        This is the provider of the call.

        Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
      enum:
      - twilio
      - vonage
      - vapi
      - telnyx
    CallPhoneCallTransport:
      title: CallPhoneCallTransport
      type: string
      description: |-
        This is the transport of the phone call.

        Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
      enum:
      - sip
      - pstn
    CallStatus:
      title: CallStatus
      type: string
      description: This is the status of the call.
      enum:
      - scheduled
      - queued
      - ringing
      - in-progress
      - forwarding
      - ended
    CallEndedReason:
      title: CallEndedReason
      type: string
      description: This is the explanation for how the call ended.
      enum:
      - call-start-error-neither-assistant-nor-server-set
      - assistant-request-failed
      - assistant-request-returned-error
      - assistant-request-returned-unspeakable-error
      - assistant-request-returned-invalid-assistant
      - assistant-request-returned-no-assistant
      - assistant-request-returned-forwarding-phone-number
      - call.start.error-get-org
      - call.start.error-get-subscription
      - call.start.error-get-assistant
      - call.start.error-get-phone-number
      - call.start.error-get-customer
      - call.start.error-get-resources-validation
      - call.start.error-vapi-number-international
      - call.start.error-vapi-number-outbound-daily-limit
      - call.start.error-get-transport
      - assistant-not-valid
      - database-error
      - assistant-not-found
      - pipeline-error-openai-voice-failed
      - pipeline-error-cartesia-voice-failed
      - pipeline-error-deepgram-voice-failed
      - pipeline-error-eleven-labs-voice-failed
      - pipeline-error-playht-voice-failed
      - pipeline-error-lmnt-voice-failed
      - pipeline-error-azure-voice-failed
      - pipeline-error-rime-ai-voice-failed
      - pipeline-error-smallest-ai-voice-failed
      - pipeline-error-neuphonic-voice-failed
      - pipeline-error-hume-voice-failed
      - pipeline-error-sesame-voice-failed
      - pipeline-error-tavus-video-failed
      - call.in-progress.error-vapifault-openai-voice-failed
      - call.in-progress.error-vapifault-cartesia-voice-failed
      - call.in-progress.error-vapifault-deepgram-voice-failed
      - call.in-progress.error-vapifault-eleven-labs-voice-failed
      - call.in-progress.error-vapifault-playht-voice-failed
      - call.in-progress.error-vapifault-lmnt-voice-failed
      - call.in-progress.error-vapifault-azure-voice-failed
      - call.in-progress.error-vapifault-rime-ai-voice-failed
      - call.in-progress.error-vapifault-smallest-ai-voice-failed
      - call.in-progress.error-vapifault-neuphonic-voice-failed
      - call.in-progress.error-vapifault-hume-voice-failed
      - call.in-progress.error-vapifault-sesame-voice-failed
      - call.in-progress.error-vapifault-tavus-video-failed
      - pipeline-error-vapi-llm-failed
      - pipeline-error-vapi-400-bad-request-validation-failed
      - pipeline-error-vapi-401-unauthorized
      - pipeline-error-vapi-403-model-access-denied
      - pipeline-error-vapi-429-exceeded-quota
      - pipeline-error-vapi-500-server-error
      - pipeline-error-vapi-503-server-overloaded-error
      - call.in-progress.error-vapifault-vapi-llm-failed
      - call.in-progress.error-vapifault-vapi-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-vapi-401-unauthorized
      - call.in-progress.error-vapifault-vapi-403-model-access-denied
      - call.in-progress.error-vapifault-vapi-429-exceeded-quota
      - call.in-progress.error-providerfault-vapi-500-server-error
      - call.in-progress.error-providerfault-vapi-503-server-overloaded-error
      - pipeline-error-deepgram-transcriber-failed
      - call.in-progress.error-vapifault-deepgram-transcriber-failed
      - pipeline-error-gladia-transcriber-failed
      - call.in-progress.error-vapifault-gladia-transcriber-failed
      - pipeline-error-speechmatics-transcriber-failed
      - call.in-progress.error-vapifault-speechmatics-transcriber-failed
      - pipeline-error-assembly-ai-transcriber-failed
      - pipeline-error-assembly-ai-returning-400-insufficent-funds
      - pipeline-error-assembly-ai-returning-400-paid-only-feature
      - pipeline-error-assembly-ai-returning-401-invalid-credentials
      - pipeline-error-assembly-ai-returning-500-invalid-schema
      - pipeline-error-assembly-ai-returning-500-word-boost-parsing-failed
      - call.in-progress.error-vapifault-assembly-ai-transcriber-failed
      - call.in-progress.error-vapifault-assembly-ai-returning-400-insufficent-funds
      - call.in-progress.error-vapifault-assembly-ai-returning-400-paid-only-feature
      - call.in-progress.error-vapifault-assembly-ai-returning-401-invalid-credentials
      - call.in-progress.error-vapifault-assembly-ai-returning-500-invalid-schema
      - call.in-progress.error-vapifault-assembly-ai-returning-500-word-boost-parsing-failed
      - pipeline-error-talkscriber-transcriber-failed
      - call.in-progress.error-vapifault-talkscriber-transcriber-failed
      - pipeline-error-azure-speech-transcriber-failed
      - call.in-progress.error-vapifault-azure-speech-transcriber-failed
      - call.in-progress.error-pipeline-no-available-llm-model
      - worker-shutdown
      - unknown-error
      - vonage-disconnected
      - vonage-failed-to-connect-call
      - vonage-completed
      - phone-call-provider-bypass-enabled-but-no-call-received
      - call.in-progress.error-vapifault-transport-never-connected
      - call.in-progress.error-vapifault-transport-connected-but-call-not-active
      - call.in-progress.error-vapifault-call-started-but-connection-to-transport-missing
      - call.in-progress.error-vapifault-openai-llm-failed
      - call.in-progress.error-vapifault-azure-openai-llm-failed
      - call.in-progress.error-vapifault-groq-llm-failed
      - call.in-progress.error-vapifault-google-llm-failed
      - call.in-progress.error-vapifault-xai-llm-failed
      - call.in-progress.error-vapifault-mistral-llm-failed
      - call.in-progress.error-vapifault-inflection-ai-llm-failed
      - call.in-progress.error-vapifault-cerebras-llm-failed
      - call.in-progress.error-vapifault-deep-seek-llm-failed
      - pipeline-error-openai-400-bad-request-validation-failed
      - pipeline-error-openai-401-unauthorized
      - pipeline-error-openai-401-incorrect-api-key
      - pipeline-error-openai-401-account-not-in-organization
      - pipeline-error-openai-403-model-access-denied
      - pipeline-error-openai-429-exceeded-quota
      - pipeline-error-openai-429-rate-limit-reached
      - pipeline-error-openai-500-server-error
      - pipeline-error-openai-503-server-overloaded-error
      - pipeline-error-openai-llm-failed
      - call.in-progress.error-vapifault-openai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-openai-401-unauthorized
      - call.in-progress.error-vapifault-openai-401-incorrect-api-key
      - call.in-progress.error-vapifault-openai-401-account-not-in-organization
      - call.in-progress.error-vapifault-openai-403-model-access-denied
      - call.in-progress.error-vapifault-openai-429-exceeded-quota
      - call.in-progress.error-vapifault-openai-429-rate-limit-reached
      - call.in-progress.error-providerfault-openai-500-server-error
      - call.in-progress.error-providerfault-openai-503-server-overloaded-error
      - pipeline-error-azure-openai-400-bad-request-validation-failed
      - pipeline-error-azure-openai-401-unauthorized
      - pipeline-error-azure-openai-403-model-access-denied
      - pipeline-error-azure-openai-429-exceeded-quota
      - pipeline-error-azure-openai-500-server-error
      - pipeline-error-azure-openai-503-server-overloaded-error
      - pipeline-error-azure-openai-llm-failed
      - call.in-progress.error-vapifault-azure-openai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-azure-openai-401-unauthorized
      - call.in-progress.error-vapifault-azure-openai-403-model-access-denied
      - call.in-progress.error-vapifault-azure-openai-429-exceeded-quota
      - call.in-progress.error-providerfault-azure-openai-500-server-error
      - call.in-progress.error-providerfault-azure-openai-503-server-overloaded-error
      - pipeline-error-google-400-bad-request-validation-failed
      - pipeline-error-google-401-unauthorized
      - pipeline-error-google-403-model-access-denied
      - pipeline-error-google-429-exceeded-quota
      - pipeline-error-google-500-server-error
      - pipeline-error-google-503-server-overloaded-error
      - pipeline-error-google-llm-failed
      - call.in-progress.error-vapifault-google-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-google-401-unauthorized
      - call.in-progress.error-vapifault-google-403-model-access-denied
      - call.in-progress.error-vapifault-google-429-exceeded-quota
      - call.in-progress.error-providerfault-google-500-server-error
      - call.in-progress.error-providerfault-google-503-server-overloaded-error
      - pipeline-error-xai-400-bad-request-validation-failed
      - pipeline-error-xai-401-unauthorized
      - pipeline-error-xai-403-model-access-denied
      - pipeline-error-xai-429-exceeded-quota
      - pipeline-error-xai-500-server-error
      - pipeline-error-xai-503-server-overloaded-error
      - pipeline-error-xai-llm-failed
      - call.in-progress.error-vapifault-xai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-xai-401-unauthorized
      - call.in-progress.error-vapifault-xai-403-model-access-denied
      - call.in-progress.error-vapifault-xai-429-exceeded-quota
      - call.in-progress.error-providerfault-xai-500-server-error
      - call.in-progress.error-providerfault-xai-503-server-overloaded-error
      - pipeline-error-mistral-400-bad-request-validation-failed
      - pipeline-error-mistral-401-unauthorized
      - pipeline-error-mistral-403-model-access-denied
      - pipeline-error-mistral-429-exceeded-quota
      - pipeline-error-mistral-500-server-error
      - pipeline-error-mistral-503-server-overloaded-error
      - pipeline-error-mistral-llm-failed
      - call.in-progress.error-vapifault-mistral-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-mistral-401-unauthorized
      - call.in-progress.error-vapifault-mistral-403-model-access-denied
      - call.in-progress.error-vapifault-mistral-429-exceeded-quota
      - call.in-progress.error-providerfault-mistral-500-server-error
      - call.in-progress.error-providerfault-mistral-503-server-overloaded-error
      - pipeline-error-inflection-ai-400-bad-request-validation-failed
      - pipeline-error-inflection-ai-401-unauthorized
      - pipeline-error-inflection-ai-403-model-access-denied
      - pipeline-error-inflection-ai-429-exceeded-quota
      - pipeline-error-inflection-ai-500-server-error
      - pipeline-error-inflection-ai-503-server-overloaded-error
      - pipeline-error-inflection-ai-llm-failed
      - call.in-progress.error-vapifault-inflection-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-inflection-ai-401-unauthorized
      - call.in-progress.error-vapifault-inflection-ai-403-model-access-denied
      - call.in-progress.error-vapifault-inflection-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-inflection-ai-500-server-error
      - call.in-progress.error-providerfault-inflection-ai-503-server-overloaded-error
      - pipeline-error-deep-seek-400-bad-request-validation-failed
      - pipeline-error-deep-seek-401-unauthorized
      - pipeline-error-deep-seek-403-model-access-denied
      - pipeline-error-deep-seek-429-exceeded-quota
      - pipeline-error-deep-seek-500-server-error
      - pipeline-error-deep-seek-503-server-overloaded-error
      - pipeline-error-deep-seek-llm-failed
      - call.in-progress.error-vapifault-deep-seek-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-deep-seek-401-unauthorized
      - call.in-progress.error-vapifault-deep-seek-403-model-access-denied
      - call.in-progress.error-vapifault-deep-seek-429-exceeded-quota
      - call.in-progress.error-providerfault-deep-seek-500-server-error
      - call.in-progress.error-providerfault-deep-seek-503-server-overloaded-error
      - pipeline-error-groq-400-bad-request-validation-failed
      - pipeline-error-groq-401-unauthorized
      - pipeline-error-groq-403-model-access-denied
      - pipeline-error-groq-429-exceeded-quota
      - pipeline-error-groq-500-server-error
      - pipeline-error-groq-503-server-overloaded-error
      - pipeline-error-groq-llm-failed
      - call.in-progress.error-vapifault-groq-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-groq-401-unauthorized
      - call.in-progress.error-vapifault-groq-403-model-access-denied
      - call.in-progress.error-vapifault-groq-429-exceeded-quota
      - call.in-progress.error-providerfault-groq-500-server-error
      - call.in-progress.error-providerfault-groq-503-server-overloaded-error
      - pipeline-error-cerebras-400-bad-request-validation-failed
      - pipeline-error-cerebras-401-unauthorized
      - pipeline-error-cerebras-403-model-access-denied
      - pipeline-error-cerebras-429-exceeded-quota
      - pipeline-error-cerebras-500-server-error
      - pipeline-error-cerebras-503-server-overloaded-error
      - pipeline-error-cerebras-llm-failed
      - call.in-progress.error-vapifault-cerebras-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-cerebras-401-unauthorized
      - call.in-progress.error-vapifault-cerebras-403-model-access-denied
      - call.in-progress.error-vapifault-cerebras-429-exceeded-quota
      - call.in-progress.error-providerfault-cerebras-500-server-error
      - call.in-progress.error-providerfault-cerebras-503-server-overloaded-error
      - pipeline-error-anthropic-400-bad-request-validation-failed
      - pipeline-error-anthropic-401-unauthorized
      - pipeline-error-anthropic-403-model-access-denied
      - pipeline-error-anthropic-429-exceeded-quota
      - pipeline-error-anthropic-500-server-error
      - pipeline-error-anthropic-503-server-overloaded-error
      - pipeline-error-anthropic-llm-failed
      - call.in-progress.error-vapifault-anthropic-llm-failed
      - call.in-progress.error-vapifault-anthropic-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-anthropic-401-unauthorized
      - call.in-progress.error-vapifault-anthropic-403-model-access-denied
      - call.in-progress.error-vapifault-anthropic-429-exceeded-quota
      - call.in-progress.error-providerfault-anthropic-500-server-error
      - call.in-progress.error-providerfault-anthropic-503-server-overloaded-error
      - pipeline-error-together-ai-400-bad-request-validation-failed
      - pipeline-error-together-ai-401-unauthorized
      - pipeline-error-together-ai-403-model-access-denied
      - pipeline-error-together-ai-429-exceeded-quota
      - pipeline-error-together-ai-500-server-error
      - pipeline-error-together-ai-503-server-overloaded-error
      - pipeline-error-together-ai-llm-failed
      - call.in-progress.error-vapifault-together-ai-llm-failed
      - call.in-progress.error-vapifault-together-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-together-ai-401-unauthorized
      - call.in-progress.error-vapifault-together-ai-403-model-access-denied
      - call.in-progress.error-vapifault-together-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-together-ai-500-server-error
      - call.in-progress.error-providerfault-together-ai-503-server-overloaded-error
      - pipeline-error-anyscale-400-bad-request-validation-failed
      - pipeline-error-anyscale-401-unauthorized
      - pipeline-error-anyscale-403-model-access-denied
      - pipeline-error-anyscale-429-exceeded-quota
      - pipeline-error-anyscale-500-server-error
      - pipeline-error-anyscale-503-server-overloaded-error
      - pipeline-error-anyscale-llm-failed
      - call.in-progress.error-vapifault-anyscale-llm-failed
      - call.in-progress.error-vapifault-anyscale-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-anyscale-401-unauthorized
      - call.in-progress.error-vapifault-anyscale-403-model-access-denied
      - call.in-progress.error-vapifault-anyscale-429-exceeded-quota
      - call.in-progress.error-providerfault-anyscale-500-server-error
      - call.in-progress.error-providerfault-anyscale-503-server-overloaded-error
      - pipeline-error-openrouter-400-bad-request-validation-failed
      - pipeline-error-openrouter-401-unauthorized
      - pipeline-error-openrouter-403-model-access-denied
      - pipeline-error-openrouter-429-exceeded-quota
      - pipeline-error-openrouter-500-server-error
      - pipeline-error-openrouter-503-server-overloaded-error
      - pipeline-error-openrouter-llm-failed
      - call.in-progress.error-vapifault-openrouter-llm-failed
      - call.in-progress.error-vapifault-openrouter-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-openrouter-401-unauthorized
      - call.in-progress.error-vapifault-openrouter-403-model-access-denied
      - call.in-progress.error-vapifault-openrouter-429-exceeded-quota
      - call.in-progress.error-providerfault-openrouter-500-server-error
      - call.in-progress.error-providerfault-openrouter-503-server-overloaded-error
      - pipeline-error-perplexity-ai-400-bad-request-validation-failed
      - pipeline-error-perplexity-ai-401-unauthorized
      - pipeline-error-perplexity-ai-403-model-access-denied
      - pipeline-error-perplexity-ai-429-exceeded-quota
      - pipeline-error-perplexity-ai-500-server-error
      - pipeline-error-perplexity-ai-503-server-overloaded-error
      - pipeline-error-perplexity-ai-llm-failed
      - call.in-progress.error-vapifault-perplexity-ai-llm-failed
      - call.in-progress.error-vapifault-perplexity-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-perplexity-ai-401-unauthorized
      - call.in-progress.error-vapifault-perplexity-ai-403-model-access-denied
      - call.in-progress.error-vapifault-perplexity-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-perplexity-ai-500-server-error
      - call.in-progress.error-providerfault-perplexity-ai-503-server-overloaded-error
      - pipeline-error-deepinfra-400-bad-request-validation-failed
      - pipeline-error-deepinfra-401-unauthorized
      - pipeline-error-deepinfra-403-model-access-denied
      - pipeline-error-deepinfra-429-exceeded-quota
      - pipeline-error-deepinfra-500-server-error
      - pipeline-error-deepinfra-503-server-overloaded-error
      - pipeline-error-deepinfra-llm-failed
      - call.in-progress.error-vapifault-deepinfra-llm-failed
      - call.in-progress.error-vapifault-deepinfra-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-deepinfra-401-unauthorized
      - call.in-progress.error-vapifault-deepinfra-403-model-access-denied
      - call.in-progress.error-vapifault-deepinfra-429-exceeded-quota
      - call.in-progress.error-providerfault-deepinfra-500-server-error
      - call.in-progress.error-providerfault-deepinfra-503-server-overloaded-error
      - pipeline-error-runpod-400-bad-request-validation-failed
      - pipeline-error-runpod-401-unauthorized
      - pipeline-error-runpod-403-model-access-denied
      - pipeline-error-runpod-429-exceeded-quota
      - pipeline-error-runpod-500-server-error
      - pipeline-error-runpod-503-server-overloaded-error
      - pipeline-error-runpod-llm-failed
      - call.in-progress.error-vapifault-runpod-llm-failed
      - call.in-progress.error-vapifault-runpod-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-runpod-401-unauthorized
      - call.in-progress.error-vapifault-runpod-403-model-access-denied
      - call.in-progress.error-vapifault-runpod-429-exceeded-quota
      - call.in-progress.error-providerfault-runpod-500-server-error
      - call.in-progress.error-providerfault-runpod-503-server-overloaded-error
      - pipeline-error-custom-llm-400-bad-request-validation-failed
      - pipeline-error-custom-llm-401-unauthorized
      - pipeline-error-custom-llm-403-model-access-denied
      - pipeline-error-custom-llm-429-exceeded-quota
      - pipeline-error-custom-llm-500-server-error
      - pipeline-error-custom-llm-503-server-overloaded-error
      - pipeline-error-custom-llm-llm-failed
      - call.in-progress.error-vapifault-custom-llm-llm-failed
      - call.in-progress.error-vapifault-custom-llm-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-custom-llm-401-unauthorized
      - call.in-progress.error-vapifault-custom-llm-403-model-access-denied
      - call.in-progress.error-vapifault-custom-llm-429-exceeded-quota
      - call.in-progress.error-providerfault-custom-llm-500-server-error
      - call.in-progress.error-providerfault-custom-llm-503-server-overloaded-error
      - pipeline-error-custom-voice-failed
      - pipeline-error-cartesia-socket-hang-up
      - pipeline-error-cartesia-requested-payment
      - pipeline-error-cartesia-500-server-error
      - pipeline-error-cartesia-503-server-error
      - pipeline-error-cartesia-522-server-error
      - call.in-progress.error-vapifault-cartesia-socket-hang-up
      - call.in-progress.error-vapifault-cartesia-requested-payment
      - call.in-progress.error-providerfault-cartesia-500-server-error
      - call.in-progress.error-providerfault-cartesia-503-server-error
      - call.in-progress.error-providerfault-cartesia-522-server-error
      - pipeline-error-eleven-labs-voice-not-found
      - pipeline-error-eleven-labs-quota-exceeded
      - pipeline-error-eleven-labs-unauthorized-access
      - pipeline-error-eleven-labs-unauthorized-to-access-model
      - pipeline-error-eleven-labs-professional-voices-only-for-creator-plus
      - pipeline-error-eleven-labs-blocked-free-plan-and-requested-upgrade
      - pipeline-error-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
      - pipeline-error-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
      - pipeline-error-eleven-labs-system-busy-and-requested-upgrade
      - pipeline-error-eleven-labs-voice-not-fine-tuned
      - pipeline-error-eleven-labs-invalid-api-key
      - pipeline-error-eleven-labs-invalid-voice-samples
      - pipeline-error-eleven-labs-voice-disabled-by-owner
      - pipeline-error-eleven-labs-blocked-account-in-probation
      - pipeline-error-eleven-labs-blocked-content-against-their-policy
      - pipeline-error-eleven-labs-missing-samples-for-voice-clone
      - pipeline-error-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
      - pipeline-error-eleven-labs-voice-not-allowed-for-free-users
      - pipeline-error-eleven-labs-max-character-limit-exceeded
      - pipeline-error-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
      - pipeline-error-eleven-labs-500-server-error
      - call.in-progress.error-vapifault-eleven-labs-voice-not-found
      - call.in-progress.error-vapifault-eleven-labs-quota-exceeded
      - call.in-progress.error-vapifault-eleven-labs-unauthorized-access
      - call.in-progress.error-vapifault-eleven-labs-unauthorized-to-access-model
      - call.in-progress.error-vapifault-eleven-labs-professional-voices-only-for-creator-plus
      - call.in-progress.error-vapifault-eleven-labs-blocked-free-plan-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-system-busy-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned
      - call.in-progress.error-vapifault-eleven-labs-invalid-api-key
      - call.in-progress.error-vapifault-eleven-labs-invalid-voice-samples
      - call.in-progress.error-vapifault-eleven-labs-voice-disabled-by-owner
      - call.in-progress.error-vapifault-eleven-labs-blocked-account-in-probation
      - call.in-progress.error-vapifault-eleven-labs-blocked-content-against-their-policy
      - call.in-progress.error-vapifault-eleven-labs-missing-samples-for-voice-clone
      - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
      - call.in-progress.error-vapifault-eleven-labs-voice-not-allowed-for-free-users
      - call.in-progress.error-vapifault-eleven-labs-max-character-limit-exceeded
      - call.in-progress.error-vapifault-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
      - call.in-progress.error-providerfault-eleven-labs-500-server-error
      - pipeline-error-playht-request-timed-out
      - pipeline-error-playht-invalid-voice
      - pipeline-error-playht-unexpected-error
      - pipeline-error-playht-out-of-credits
      - pipeline-error-playht-invalid-emotion
      - pipeline-error-playht-voice-must-be-a-valid-voice-manifest-uri
      - pipeline-error-playht-401-unauthorized
      - pipeline-error-playht-403-forbidden-out-of-characters
      - pipeline-error-playht-403-forbidden-api-access-not-available
      - pipeline-error-playht-429-exceeded-quota
      - pipeline-error-playht-502-gateway-error
      - pipeline-error-playht-504-gateway-error
      - call.in-progress.error-vapifault-playht-request-timed-out
      - call.in-progress.error-vapifault-playht-invalid-voice
      - call.in-progress.error-vapifault-playht-unexpected-error
      - call.in-progress.error-vapifault-playht-out-of-credits
      - call.in-progress.error-vapifault-playht-invalid-emotion
      - call.in-progress.error-vapifault-playht-voice-must-be-a-valid-voice-manifest-uri
      - call.in-progress.error-vapifault-playht-401-unauthorized
      - call.in-progress.error-vapifault-playht-403-forbidden-out-of-characters
      - call.in-progress.error-vapifault-playht-403-forbidden-api-access-not-available
      - call.in-progress.error-vapifault-playht-429-exceeded-quota
      - call.in-progress.error-providerfault-playht-502-gateway-error
      - call.in-progress.error-providerfault-playht-504-gateway-error
      - pipeline-error-custom-transcriber-failed
      - call.in-progress.error-vapifault-custom-transcriber-failed
      - pipeline-error-11labs-transcriber-failed
      - call.in-progress.error-vapifault-11labs-transcriber-failed
      - pipeline-error-deepgram-returning-400-no-such-model-language-tier-combination
      - pipeline-error-deepgram-returning-401-invalid-credentials
      - pipeline-error-deepgram-returning-403-model-access-denied
      - pipeline-error-deepgram-returning-404-not-found
      - pipeline-error-deepgram-returning-500-invalid-json
      - pipeline-error-deepgram-returning-502-network-error
      - pipeline-error-deepgram-returning-502-bad-gateway-ehostunreach
      - call.in-progress.error-vapifault-deepgram-returning-400-no-such-model-language-tier-combination
      - call.in-progress.error-vapifault-deepgram-returning-401-invalid-credentials
      - call.in-progress.error-vapifault-deepgram-returning-404-not-found
      - call.in-progress.error-vapifault-deepgram-returning-403-model-access-denied
      - call.in-progress.error-providerfault-deepgram-returning-500-invalid-json
      - call.in-progress.error-providerfault-deepgram-returning-502-network-error
      - call.in-progress.error-providerfault-deepgram-returning-502-bad-gateway-ehostunreach
      - pipeline-error-google-transcriber-failed
      - call.in-progress.error-vapifault-google-transcriber-failed
      - pipeline-error-openai-transcriber-failed
      - call.in-progress.error-vapifault-openai-transcriber-failed
      - assistant-ended-call
      - assistant-said-end-call-phrase
      - assistant-ended-call-with-hangup-task
      - assistant-ended-call-after-message-spoken
      - assistant-forwarded-call
      - assistant-join-timed-out
      - call.in-progress.error-assistant-did-not-receive-customer-audio
      - customer-busy
      - customer-ended-call
      - customer-did-not-answer
      - customer-did-not-give-microphone-permission
      - exceeded-max-duration
      - manually-canceled
      - phone-call-provider-closed-websocket
      - silence-timed-out
      - call.in-progress.error-sip-telephony-provider-failed-to-connect-call
      - twilio-failed-to-connect-call
      - twilio-reported-customer-misdialed
      - vonage-rejected
      - voicemail
    CallDestination:
      title: CallDestination
      description: "This is the destination where the call ended up being transferred to. If the call was not transferred, this will be empty."
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    Call:
      title: Call
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CallType'
        costs:
          type: array
          description: These are the costs of individual components of the call in USD.
          nullable: true
          items:
            $ref: '#/components/schemas/CallCostsItem'
        messages:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CallMessagesItem'
        phoneCallProvider:
          $ref: '#/components/schemas/CallPhoneCallProvider'
        phoneCallTransport:
          $ref: '#/components/schemas/CallPhoneCallTransport'
        status:
          $ref: '#/components/schemas/CallStatus'
        endedReason:
          $ref: '#/components/schemas/CallEndedReason'
        destination:
          $ref: '#/components/schemas/CallDestination'
        id:
          type: string
          description: This is the unique identifier for the call.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the org that this call belongs to.
          example: orgId
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the call was created.
          format: date-time
          example: 2024-01-15T09:30:00Z
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the call was last updated.
          format: date-time
          example: 2024-01-15T09:30:00Z
        startedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the call was started.
          format: date-time
          nullable: true
        endedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the call was ended.
          format: date-time
          nullable: true
        cost:
          type: number
          description: This is the cost of the call in USD.
          format: double
          nullable: true
        costBreakdown:
          $ref: '#/components/schemas/CostBreakdown'
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
        analysis:
          $ref: '#/components/schemas/Analysis'
        monitor:
          $ref: '#/components/schemas/Monitor'
        artifact:
          $ref: '#/components/schemas/Artifact'
        transport:
          $ref: '#/components/schemas/Transport'
        phoneCallProviderId:
          type: string
          description: |-
            The ID of the call as provided by the phone number service. callSid in Twilio. conversationUuid in Vonage. callControlId in Telnyx.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          nullable: true
        assistantId:
          type: string
          description: "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          nullable: true
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
        squadId:
          type: string
          description: "This is the squad that will be used for the call. To use a transient squad, use `squad` instead."
          nullable: true
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
        phoneNumberId:
          type: string
          description: |-
            This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          nullable: true
        phoneNumber:
          $ref: '#/components/schemas/ImportTwilioPhoneNumberDto'
        customerId:
          type: string
          description: |-
            This is the customer that will be called. To call a transient customer , use `customer` instead.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          nullable: true
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        name:
          type: string
          description: This is the name of the call. This is just for your own reference.
          nullable: true
        schedulePlan:
          $ref: '#/components/schemas/SchedulePlan'
    CallBatchError:
      title: CallBatchError
      required:
      - customer
      - error
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        error:
          type: string
    CallBatchResponse:
      title: CallBatchResponse
      required:
      - errors
      - results
      type: object
      properties:
        results:
          type: array
          description: This is the list of calls that were created.
          items:
            $ref: '#/components/schemas/Call'
        errors:
          type: array
          description: This is the list of calls that failed to be created.
          items:
            $ref: '#/components/schemas/CallBatchError'
    PaginationMeta:
      title: PaginationMeta
      required:
      - currentPage
      - itemsPerPage
      - totalItems
      type: object
      properties:
        itemsPerPage:
          type: number
          format: double
        totalItems:
          type: number
          format: double
        currentPage:
          type: number
          format: double
    CallPaginatedResponse:
      title: CallPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Call'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    CreateOutboundCallDto:
      title: CreateOutboundCallDto
      type: object
      properties:
        customers:
          type: array
          description: |-
            This is used to issue batch calls to multiple customers.

            Only relevant for `outboundPhoneCall`. To call a single customer, use `customer` instead.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateCustomerDto'
        name:
          type: string
          description: This is the name of the call. This is just for your own reference.
          nullable: true
        schedulePlan:
          $ref: '#/components/schemas/SchedulePlan'
        assistantId:
          type: string
          description: "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          nullable: true
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
        squadId:
          type: string
          description: "This is the squad that will be used for the call. To use a transient squad, use `squad` instead."
          nullable: true
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
        phoneNumberId:
          type: string
          description: |-
            This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          nullable: true
        phoneNumber:
          $ref: '#/components/schemas/ImportTwilioPhoneNumberDto'
        customerId:
          type: string
          description: |-
            This is the customer that will be called. To call a transient customer , use `customer` instead.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          nullable: true
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
    CreateWebCallDto:
      title: CreateWebCallDto
      type: object
      properties:
        assistantId:
          type: string
          description: "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          nullable: true
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
        squadId:
          type: string
          description: "This is the squad that will be used for the call. To use a transient squad, use `squad` instead."
          nullable: true
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
    ChatServiceResponse:
      title: ChatServiceResponse
      type: object
      properties: {}
    ChatCompletionMessageMetadata:
      title: ChatCompletionMessageMetadata
      required:
      - taskName
      - taskOutput
      - taskType
      type: object
      properties:
        taskName:
          type: string
        taskType:
          type: string
        taskOutput:
          type: string
        taskState:
          type: object
          additionalProperties: true
          nullable: true
        nodeTrace:
          type: array
          nullable: true
          items:
            type: string
    ChatCompletionMessageWorkflows:
      title: ChatCompletionMessageWorkflows
      required:
      - role
      type: object
      properties:
        role:
          type: object
          additionalProperties: true
        content:
          type: string
          nullable: true
        metadata:
          $ref: '#/components/schemas/ChatCompletionMessageMetadata'
    Say:
      title: Say
      required:
      - name
      type: object
      properties:
        exact:
          type: string
          nullable: true
        prompt:
          type: string
          nullable: true
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the task.
          nullable: true
    SayHook:
      title: SayHook
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - say
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the task.
          nullable: true
        exact:
          type: string
          nullable: true
        prompt:
          type: string
          nullable: true
    HookOn:
      title: HookOn
      type: string
      enum:
      - task.start
      - task.output.confirmation
      - task.delayed
    Hook:
      title: Hook
      required:
      - do
      - "on"
      type: object
      properties:
        "on":
          $ref: '#/components/schemas/HookOn'
        do:
          type: array
          items:
            $ref: '#/components/schemas/SayHook'
    Gather:
      title: Gather
      required:
      - name
      - output
      type: object
      properties:
        output:
          $ref: '#/components/schemas/JsonSchema'
        confirmContent:
          type: boolean
          description: "This is whether or not the workflow should read back the gathered data to the user, and ask about its correctness."
          nullable: true
        hooks:
          type: array
          description: |-
            This is a list of hooks for a task.
            Each hook is a list of tasks to run on a trigger (such as on start, on failure, etc).
            Only Say is supported for now.
          nullable: true
          items:
            $ref: '#/components/schemas/Hook'
        maxRetries:
          type: number
          description: "This is the number of times we should try to gather the information from the user before we failover to the fail path. An example of this would be a user refusing to give their phone number for privacy reasons, and then going down a different path on account of this"
          format: double
          nullable: true
        literalTemplate:
          type: string
          description: "This is a liquid templating string. On the first call to Gather, the template will be filled out with variables from the context, and will be spoken verbatim to the user. An example would be \"Base on your zipcode, it looks like you could be in one of these counties: {{ counties | join: \", \" }}. Which one do you live in?\""
          nullable: true
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the task.
          nullable: true
    ApiRequestMethod:
      title: ApiRequestMethod
      type: string
      enum:
      - POST
      - GET
    ApiRequestMode:
      title: ApiRequestMode
      type: string
      description: |-
        This is the mode of the Api Request.
        We only support BLOCKING and BACKGROUND for now.
      enum:
      - blocking
      - background
    ApiRequest:
      title: ApiRequest
      required:
      - method
      - mode
      - name
      - url
      type: object
      properties:
        method:
          $ref: '#/components/schemas/ApiRequestMethod'
        url:
          type: string
          description: Api endpoint to send requests to.
        headers:
          $ref: '#/components/schemas/JsonSchema'
        body:
          $ref: '#/components/schemas/JsonSchema'
        mode:
          $ref: '#/components/schemas/ApiRequestMode'
        hooks:
          type: array
          description: |-
            This is a list of hooks for a task.
            Each hook is a list of tasks to run on a trigger (such as on start, on failure, etc).
            Only Say is supported for now.
          nullable: true
          items:
            $ref: '#/components/schemas/Hook'
        output:
          $ref: '#/components/schemas/JsonSchema'
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the task.
          nullable: true
    Hangup:
      title: Hangup
      required:
      - name
      type: object
      properties:
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the task.
          nullable: true
    Transfer:
      title: Transfer
      required:
      - destination
      - name
      type: object
      properties:
        destination:
          type: object
          additionalProperties: true
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the task.
          nullable: true
    CreateWorkflowDtoNodesItem:
      title: CreateWorkflowDtoNodesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - say
        - $ref: '#/components/schemas/Say'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - gather
        - $ref: '#/components/schemas/Gather'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - apiRequest
        - $ref: '#/components/schemas/ApiRequest'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - hangup
        - $ref: '#/components/schemas/Hangup'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transfer
        - $ref: '#/components/schemas/Transfer'
    CreateWorkflowDtoModel:
      title: CreateWorkflowDtoModel
      description: These are the options for the workflow's LLM.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/AnthropicModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/AnyscaleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CerebrasModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CustomLlmModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/DeepInfraModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/DeepSeekModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/GroqModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/InflectionAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/OpenRouterModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/PerplexityAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/TogetherAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/XaiModel'
    CreateWorkflowDto:
      title: CreateWorkflowDto
      required:
      - edges
      - name
      - nodes
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/CreateWorkflowDtoNodesItem'
        model:
          $ref: '#/components/schemas/CreateWorkflowDtoModel'
        name:
          type: string
          example: name
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
    ChatCompletionsDto:
      title: ChatCompletionsDto
      required:
      - messages
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionMessageWorkflows'
        workflowId:
          type: string
          nullable: true
        workflow:
          $ref: '#/components/schemas/CreateWorkflowDto'
    AssistantTranscriber:
      title: AssistantTranscriber
      description: These are the options for the assistant's transcriber.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/AssemblyAiTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureSpeechTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-transcriber
        - $ref: '#/components/schemas/CustomTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/GladiaTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/SpeechmaticsTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - talkscriber
        - $ref: '#/components/schemas/TalkscriberTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleTranscriber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiTranscriber'
    AssistantModel:
      title: AssistantModel
      description: These are the options for the assistant's LLM.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/AnyscaleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/AnthropicModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CerebrasModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CustomLlmModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/DeepInfraModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/DeepSeekModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/GroqModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/InflectionAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/OpenRouterModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/PerplexityAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/TogetherAiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiModel'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/XaiModel'
    AssistantVoice:
      title: AssistantVoice
      description: These are the options for the assistant's voice.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/AzureVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CartesiaVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-voice
        - $ref: '#/components/schemas/CustomVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/DeepgramVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/ElevenLabsVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/HumeVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/LmntVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/NeuphonicVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/PlayHtVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/RimeAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/SmallestAiVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/TavusVoice'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiVoice'
    AssistantFirstMessageMode:
      title: AssistantFirstMessageMode
      type: string
      description: |-
        This is the mode for the first message. Default is 'assistant-speaks-first'.

        Use:
        - 'assistant-speaks-first' to have the assistant speak first.
        - 'assistant-waits-for-user' to have the assistant wait for the user to speak first.
        - 'assistant-speaks-first-with-model-generated-message' to have the assistant speak first with a message generated by the model based on the conversation state. (`assistant.model.messages` at call start, `call.messages` at squad transfer points).

        @default 'assistant-speaks-first'
      enum:
      - assistant-speaks-first
      - assistant-speaks-first-with-model-generated-message
      - assistant-waits-for-user
    AssistantVoicemailDetection:
      title: AssistantVoicemailDetection
      description: |-
        These are the settings to configure or disable voicemail detection. Alternatively, voicemail detection can be configured using the model.tools=[VoicemailTool].
        This uses Twilio's built-in detection while the VoicemailTool relies on the model to detect if a voicemail was reached.
        You can use neither of them, one of them, or both of them. By default, Twilio built-in detection is enabled while VoicemailTool is not.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
    AssistantClientMessagesItem:
      title: AssistantClientMessagesItem
      type: string
      enum:
      - conversation-update
      - function-call
      - function-call-result
      - hang
      - language-changed
      - metadata
      - model-output
      - speech-update
      - status-update
      - transcript
      - tool-calls
      - tool-calls-result
      - transfer-update
      - user-interrupted
      - voice-input
      - workflow.node.started
    AssistantServerMessagesItem:
      title: AssistantServerMessagesItem
      type: string
      enum:
      - conversation-update
      - end-of-call-report
      - function-call
      - hang
      - language-changed
      - language-change-detected
      - model-output
      - phone-call-control
      - speech-update
      - status-update
      - transcript
      - "transcript[transcriptType='final']"
      - tool-calls
      - transfer-destination-request
      - transfer-update
      - user-interrupted
      - voice-input
    AssistantBackgroundSoundZero:
      title: AssistantBackgroundSoundZero
      type: string
      enum:
      - "off"
      - office
    AssistantBackgroundSound:
      title: AssistantBackgroundSound
      description: |-
        This is the background sound in the call. Default for phone calls is 'office' and default for web calls is 'off'.
        You can also provide a custom sound by providing a URL to an audio file.
      oneOf:
      - $ref: '#/components/schemas/AssistantBackgroundSoundZero'
      - type: string
    AssistantCredentialsItem:
      title: AssistantCredentialsItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - 11labs
        - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anthropic
        - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - anyscale
        - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - assembly-ai
        - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure-openai
        - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - azure
        - $ref: '#/components/schemas/CreateAzureCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-sip-trunk
        - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cartesia
        - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cerebras
        - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - cloudflare
        - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - custom-llm
        - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepgram
        - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deepinfra
        - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - deep-seek
        - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gcp
        - $ref: '#/components/schemas/CreateGcpCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gladia
        - $ref: '#/components/schemas/CreateGladiaCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - gohighlevel
        - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google
        - $ref: '#/components/schemas/CreateGoogleCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - groq
        - $ref: '#/components/schemas/CreateGroqCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - inflection-ai
        - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - langfuse
        - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - lmnt
        - $ref: '#/components/schemas/CreateLmntCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openai
        - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - openrouter
        - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - perplexity-ai
        - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - playht
        - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - rime-ai
        - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - runpod
        - $ref: '#/components/schemas/CreateRunpodCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - s3
        - $ref: '#/components/schemas/CreateS3CredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - supabase
        - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - smallest-ai
        - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - tavus
        - $ref: '#/components/schemas/CreateTavusCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - together-ai
        - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonageCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - webhook
        - $ref: '#/components/schemas/CreateWebhookCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - xai
        - $ref: '#/components/schemas/CreateXAiCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - neuphonic
        - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - hume
        - $ref: '#/components/schemas/CreateHumeCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - mistral
        - $ref: '#/components/schemas/CreateMistralCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - speechmatics
        - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - trieve
        - $ref: '#/components/schemas/CreateTrieveCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-client
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.calendar.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - google.sheets.oauth2-authorization
        - $ref: '#/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - slack.oauth2-authorization
        - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
    Assistant:
      title: Assistant
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        transcriber:
          $ref: '#/components/schemas/AssistantTranscriber'
        model:
          $ref: '#/components/schemas/AssistantModel'
        voice:
          $ref: '#/components/schemas/AssistantVoice'
        firstMessage:
          type: string
          description: |-
            This is the first message that the assistant will say. This can also be a URL to a containerized audio file (mp3, wav, etc.).

            If unspecified, assistant will wait for user to speak and use the model to respond once they speak.
          nullable: true
        firstMessageInterruptionsEnabled:
          type: boolean
          nullable: true
        firstMessageMode:
          $ref: '#/components/schemas/AssistantFirstMessageMode'
        voicemailDetection:
          $ref: '#/components/schemas/AssistantVoicemailDetection'
        clientMessages:
          type: array
          description: "These are the messages that will be sent to your Client SDKs. Default is conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started. You can check the shape of the messages in ClientMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantClientMessagesItem'
        serverMessages:
          type: array
          description: "These are the messages that will be sent to your Server URL. Default is conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted. You can check the shape of the messages in ServerMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantServerMessagesItem'
        silenceTimeoutSeconds:
          type: number
          description: |-
            How many seconds of silence to wait before ending the call. Defaults to 30.

            @default 30
          format: double
          nullable: true
        maxDurationSeconds:
          type: number
          description: |-
            This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.

            @default 600 (10 minutes)
          format: double
          nullable: true
        backgroundSound:
          $ref: '#/components/schemas/AssistantBackgroundSound'
        backgroundDenoisingEnabled:
          type: boolean
          description: |-
            This enables filtering of noise and background speech while the user is talking.

            Default `false` while in beta.

            @default false
          nullable: true
        modelOutputInMessagesEnabled:
          type: boolean
          description: |-
            This determines whether the model's output is used in conversation history rather than the transcription of assistant's speech.

            Default `false` while in beta.

            @default false
          nullable: true
        transportConfigurations:
          type: array
          description: "These are the configurations to be passed to the transport providers of assistant's calls, like Twilio. You can store multiple configurations for different transport providers. For a call, only the configuration matching the call transport provider is used."
          nullable: true
          items:
            $ref: '#/components/schemas/TransportConfigurationTwilio'
        observabilityPlan:
          $ref: '#/components/schemas/LangfuseObservabilityPlan'
        credentials:
          type: array
          description: "These are dynamic credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can supplement an additional credentials using this. Dynamic credentials override existing credentials."
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantCredentialsItem'
        name:
          type: string
          description: |-
            This is the name of the assistant.

            This is required when you want to transfer between assistants in a call.
          nullable: true
        voicemailMessage:
          type: string
          description: |-
            This is the message that the assistant will say if the call is forwarded to voicemail.

            If unspecified, it will hang up.
          nullable: true
        endCallMessage:
          type: string
          description: |-
            This is the message that the assistant will say if it ends the call.

            If unspecified, it will hang up without saying anything.
          nullable: true
        endCallPhrases:
          type: array
          description: "This list contains phrases that, if spoken by the assistant, will trigger the call to be hung up. Case insensitive."
          nullable: true
          items:
            type: string
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the assistant.
          nullable: true
        analysisPlan:
          $ref: '#/components/schemas/AnalysisPlan'
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
        messagePlan:
          $ref: '#/components/schemas/MessagePlan'
        startSpeakingPlan:
          $ref: '#/components/schemas/StartSpeakingPlan'
        stopSpeakingPlan:
          $ref: '#/components/schemas/StopSpeakingPlan'
        monitorPlan:
          $ref: '#/components/schemas/MonitorPlan'
        credentialIds:
          type: array
          description: "These are the credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can provide a subset using this."
          nullable: true
          items:
            type: string
        server:
          $ref: '#/components/schemas/Server'
        hooks:
          type: array
          description: This is a set of actions that will be performed on certain events.
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantHooks'
        keypadInputPlan:
          $ref: '#/components/schemas/KeypadInputPlan'
        id:
          type: string
          description: This is the unique identifier for the assistant.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the org that this assistant belongs to.
          example: orgId
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was created.
          format: date-time
          example: 2024-01-15T09:30:00Z
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
          example: 2024-01-15T09:30:00Z
    AssistantPaginatedResponse:
      title: AssistantPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Assistant'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    ByoPhoneNumberFallbackDestination:
      title: ByoPhoneNumberFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ByoPhoneNumberStatus:
      title: ByoPhoneNumberStatus
      type: string
      description: This is the status of the phone number.
      enum:
      - active
      - activating
      - blocked
    ByoPhoneNumber:
      title: ByoPhoneNumber
      required:
      - createdAt
      - credentialId
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/ByoPhoneNumberFallbackDestination'
        numberE164CheckEnabled:
          type: boolean
          description: |-
            This is the flag to toggle the E164 check for the `number` field. This is an advanced property which should be used if you know your use case requires it.

            Use cases:
            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`, or `abc`. This is useful for dialing out to non-E164 numbers on your SIP trunks.
            - `true` (default): To allow only E164 numbers like `+14155551234`. This is standard for PSTN calls.

            If `false`, the `number` is still required to only contain alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).

            @default true (E164 check is enabled)
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: This is the unique identifier for the org that this phone number belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was last updated.
          format: date-time
        status:
          $ref: '#/components/schemas/ByoPhoneNumberStatus'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: This is the number of the customer.
          nullable: true
        credentialId:
          type: string
          description: |-
            This is the credential of your own SIP trunk or Carrier (type `byo-sip-trunk`) which can be used to make calls to this phone number.

            You can add the SIP trunk or Carrier credential in the Provider Credentials page on the Dashboard to get the credentialId.
    TwilioPhoneNumberFallbackDestination:
      title: TwilioPhoneNumberFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    TwilioPhoneNumberStatus:
      title: TwilioPhoneNumberStatus
      type: string
      description: This is the status of the phone number.
      enum:
      - active
      - activating
      - blocked
    TwilioPhoneNumber:
      title: TwilioPhoneNumber
      required:
      - createdAt
      - id
      - number
      - orgId
      - twilioAccountSid
      - twilioAuthToken
      - updatedAt
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/TwilioPhoneNumberFallbackDestination'
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: This is the unique identifier for the org that this phone number belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was last updated.
          format: date-time
        status:
          $ref: '#/components/schemas/TwilioPhoneNumberStatus'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: These are the digits of the phone number you own on your Twilio.
        twilioAccountSid:
          type: string
          description: This is the Twilio Account SID for the phone number.
        twilioAuthToken:
          type: string
          description: This is the Twilio Auth Token for the phone number.
    VonagePhoneNumberFallbackDestination:
      title: VonagePhoneNumberFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    VonagePhoneNumberStatus:
      title: VonagePhoneNumberStatus
      type: string
      description: This is the status of the phone number.
      enum:
      - active
      - activating
      - blocked
    VonagePhoneNumber:
      title: VonagePhoneNumber
      required:
      - createdAt
      - credentialId
      - id
      - number
      - orgId
      - updatedAt
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/VonagePhoneNumberFallbackDestination'
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: This is the unique identifier for the org that this phone number belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was last updated.
          format: date-time
        status:
          $ref: '#/components/schemas/VonagePhoneNumberStatus'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: These are the digits of the phone number you own on your Vonage.
        credentialId:
          type: string
          description: "This is the credential you added in dashboard.vapi.ai/keys. This is used to configure the number to send inbound calls to Vapi, make outbound calls and do live call updates like transfers and hangups."
    SipAuthentication:
      title: SipAuthentication
      required:
      - password
      - username
      type: object
      properties:
        realm:
          type: string
          description: This will be expected in the `realm` field of the `authorization` header of the SIP INVITE. Defaults to sip.vapi.ai.
          nullable: true
        username:
          type: string
          description: This will be expected in the `username` field of the `authorization` header of the SIP INVITE.
        password:
          type: string
          description: "This will be expected to generate the `response` field of the `authorization` header of the SIP INVITE, through digest authentication."
    VapiPhoneNumberFallbackDestination:
      title: VapiPhoneNumberFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    VapiPhoneNumberStatus:
      title: VapiPhoneNumberStatus
      type: string
      description: This is the status of the phone number.
      enum:
      - active
      - activating
      - blocked
    VapiPhoneNumber:
      title: VapiPhoneNumber
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/VapiPhoneNumberFallbackDestination'
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: This is the unique identifier for the org that this phone number belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was last updated.
          format: date-time
        status:
          $ref: '#/components/schemas/VapiPhoneNumberStatus'
        number:
          type: string
          description: These are the digits of the phone number you purchased from Vapi.
          nullable: true
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        numberDesiredAreaCode:
          type: string
          description: This is the area code of the phone number to purchase.
          nullable: true
        sipUri:
          type: string
          description: |-
            This is the SIP URI of the phone number. You can SIP INVITE this. The assistant attached to this number will answer.

            This is case-insensitive.
          nullable: true
        authentication:
          $ref: '#/components/schemas/SipAuthentication'
    TelnyxPhoneNumberFallbackDestination:
      title: TelnyxPhoneNumberFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    TelnyxPhoneNumberStatus:
      title: TelnyxPhoneNumberStatus
      type: string
      description: This is the status of the phone number.
      enum:
      - active
      - activating
      - blocked
    TelnyxPhoneNumber:
      title: TelnyxPhoneNumber
      required:
      - createdAt
      - credentialId
      - id
      - number
      - orgId
      - updatedAt
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/TelnyxPhoneNumberFallbackDestination'
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: This is the unique identifier for the org that this phone number belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the phone number was last updated.
          format: date-time
        status:
          $ref: '#/components/schemas/TelnyxPhoneNumberStatus'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: These are the digits of the phone number you own on your Telnyx.
        credentialId:
          type: string
          description: "This is the credential you added in dashboard.vapi.ai/keys. This is used to configure the number to send inbound calls to Vapi, make outbound calls and do live call updates like transfers and hangups."
    CreateByoPhoneNumberDtoFallbackDestination:
      title: CreateByoPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    CreateByoPhoneNumberDto:
      title: CreateByoPhoneNumberDto
      required:
      - credentialId
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateByoPhoneNumberDtoFallbackDestination'
        numberE164CheckEnabled:
          type: boolean
          description: |-
            This is the flag to toggle the E164 check for the `number` field. This is an advanced property which should be used if you know your use case requires it.

            Use cases:
            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`, or `abc`. This is useful for dialing out to non-E164 numbers on your SIP trunks.
            - `true` (default): To allow only E164 numbers like `+14155551234`. This is standard for PSTN calls.

            If `false`, the `number` is still required to only contain alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).

            @default true (E164 check is enabled)
          nullable: true
        number:
          type: string
          description: This is the number of the customer.
          nullable: true
        credentialId:
          type: string
          description: |-
            This is the credential of your own SIP trunk or Carrier (type `byo-sip-trunk`) which can be used to make calls to this phone number.

            You can add the SIP trunk or Carrier credential in the Provider Credentials page on the Dashboard to get the credentialId.
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
    CreateTwilioPhoneNumberDtoFallbackDestination:
      title: CreateTwilioPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    CreateTwilioPhoneNumberDto:
      title: CreateTwilioPhoneNumberDto
      required:
      - number
      - twilioAccountSid
      - twilioAuthToken
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateTwilioPhoneNumberDtoFallbackDestination'
        number:
          type: string
          description: These are the digits of the phone number you own on your Twilio.
        twilioAccountSid:
          type: string
          description: This is the Twilio Account SID for the phone number.
        twilioAuthToken:
          type: string
          description: This is the Twilio Auth Token for the phone number.
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
    CreateVonagePhoneNumberDtoFallbackDestination:
      title: CreateVonagePhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    CreateVonagePhoneNumberDto:
      title: CreateVonagePhoneNumberDto
      required:
      - credentialId
      - number
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateVonagePhoneNumberDtoFallbackDestination'
        number:
          type: string
          description: These are the digits of the phone number you own on your Vonage.
        credentialId:
          type: string
          description: "This is the credential you added in dashboard.vapi.ai/keys. This is used to configure the number to send inbound calls to Vapi, make outbound calls and do live call updates like transfers and hangups."
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
    CreateVapiPhoneNumberDtoFallbackDestination:
      title: CreateVapiPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    CreateVapiPhoneNumberDto:
      title: CreateVapiPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateVapiPhoneNumberDtoFallbackDestination'
        numberDesiredAreaCode:
          type: string
          description: This is the area code of the phone number to purchase.
          nullable: true
        sipUri:
          type: string
          description: |-
            This is the SIP URI of the phone number. You can SIP INVITE this. The assistant attached to this number will answer.

            This is case-insensitive.
          nullable: true
        authentication:
          $ref: '#/components/schemas/SipAuthentication'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
    CreateTelnyxPhoneNumberDtoFallbackDestination:
      title: CreateTelnyxPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    CreateTelnyxPhoneNumberDto:
      title: CreateTelnyxPhoneNumberDto
      required:
      - credentialId
      - number
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateTelnyxPhoneNumberDtoFallbackDestination'
        number:
          type: string
          description: These are the digits of the phone number you own on your Telnyx.
        credentialId:
          type: string
          description: "This is the credential you added in dashboard.vapi.ai/keys. This is used to configure the number to send inbound calls to Vapi, make outbound calls and do live call updates like transfers and hangups."
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
    UpdateByoPhoneNumberDtoFallbackDestination:
      title: UpdateByoPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    UpdateByoPhoneNumberDto:
      title: UpdateByoPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateByoPhoneNumberDtoFallbackDestination'
        numberE164CheckEnabled:
          type: boolean
          description: |-
            This is the flag to toggle the E164 check for the `number` field. This is an advanced property which should be used if you know your use case requires it.

            Use cases:
            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`, or `abc`. This is useful for dialing out to non-E164 numbers on your SIP trunks.
            - `true` (default): To allow only E164 numbers like `+14155551234`. This is standard for PSTN calls.

            If `false`, the `number` is still required to only contain alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).

            @default true (E164 check is enabled)
          nullable: true
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: This is the number of the customer.
          nullable: true
        credentialId:
          type: string
          description: |-
            This is the credential of your own SIP trunk or Carrier (type `byo-sip-trunk`) which can be used to make calls to this phone number.

            You can add the SIP trunk or Carrier credential in the Provider Credentials page on the Dashboard to get the credentialId.
          nullable: true
    UpdateTwilioPhoneNumberDtoFallbackDestination:
      title: UpdateTwilioPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    UpdateTwilioPhoneNumberDto:
      title: UpdateTwilioPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateTwilioPhoneNumberDtoFallbackDestination'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: These are the digits of the phone number you own on your Twilio.
          nullable: true
        twilioAccountSid:
          type: string
          description: This is the Twilio Account SID for the phone number.
          nullable: true
        twilioAuthToken:
          type: string
          description: This is the Twilio Auth Token for the phone number.
          nullable: true
    UpdateVonagePhoneNumberDtoFallbackDestination:
      title: UpdateVonagePhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    UpdateVonagePhoneNumberDto:
      title: UpdateVonagePhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateVonagePhoneNumberDtoFallbackDestination'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: These are the digits of the phone number you own on your Vonage.
          nullable: true
        credentialId:
          type: string
          description: "This is the credential you added in dashboard.vapi.ai/keys. This is used to configure the number to send inbound calls to Vapi, make outbound calls and do live call updates like transfers and hangups."
          nullable: true
    UpdateVapiPhoneNumberDtoFallbackDestination:
      title: UpdateVapiPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    UpdateVapiPhoneNumberDto:
      title: UpdateVapiPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateVapiPhoneNumberDtoFallbackDestination'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        sipUri:
          type: string
          description: |-
            This is the SIP URI of the phone number. You can SIP INVITE this. The assistant attached to this number will answer.

            This is case-insensitive.
          nullable: true
        authentication:
          $ref: '#/components/schemas/SipAuthentication'
    UpdateTelnyxPhoneNumberDtoFallbackDestination:
      title: UpdateTelnyxPhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    UpdateTelnyxPhoneNumberDto:
      title: UpdateTelnyxPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateTelnyxPhoneNumberDtoFallbackDestination'
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        number:
          type: string
          description: These are the digits of the phone number you own on your Telnyx.
          nullable: true
        credentialId:
          type: string
          description: "This is the credential you added in dashboard.vapi.ai/keys. This is used to configure the number to send inbound calls to Vapi, make outbound calls and do live call updates like transfers and hangups."
          nullable: true
    ImportVonagePhoneNumberDtoFallbackDestination:
      title: ImportVonagePhoneNumberDtoFallbackDestination
      description: |-
        This is the fallback destination an inbound call will be transferred to if:
        1. `assistantId` is not set
        2. `squadId` is not set
        3. and, `assistant-request` message to the `serverUrl` fails

        If this is not set and above conditions are met, the inbound call is hung up with an error message.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ImportVonagePhoneNumberDto:
      title: ImportVonagePhoneNumberDto
      required:
      - credentialId
      - vonagePhoneNumber
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/ImportVonagePhoneNumberDtoFallbackDestination'
        vonagePhoneNumber:
          type: string
          description: These are the digits of the phone number you own on your Vonage.
        credentialId:
          type: string
          description: "This is the credential you added in dashboard.vapi.ai/keys. This is used to configure the number to send inbound calls to Vapi, make outbound calls and do live call updates like transfers and hangups."
        name:
          type: string
          description: This is the name of the phone number. This is just for your own reference.
          nullable: true
        assistantId:
          type: string
          description: |-
            This is the assistant that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        squadId:
          type: string
          description: |-
            This is the squad that will be used for incoming calls to this phone number.

            If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
    PhoneNumberPaginatedResponseResultsItem:
      title: PhoneNumberPaginatedResponseResultsItem
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/ByoPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/TwilioPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/VonagePhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiPhoneNumber'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - telnyx
        - $ref: '#/components/schemas/TelnyxPhoneNumber'
    PhoneNumberPaginatedResponse:
      title: PhoneNumberPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          description: "A list of phone numbers, which can be of any provider type."
          items:
            $ref: '#/components/schemas/PhoneNumberPaginatedResponseResultsItem'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    DtmfToolMessagesItem:
      title: DtmfToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    DtmfTool:
      title: DtmfTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/DtmfToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    EndCallToolMessagesItem:
      title: EndCallToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    EndCallTool:
      title: EndCallTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/EndCallToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    FunctionToolMessagesItem:
      title: FunctionToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    FunctionTool:
      title: FunctionTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/FunctionToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GhlToolMessagesItem:
      title: GhlToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    GhlTool:
      title: GhlTool
      required:
      - createdAt
      - id
      - metadata
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/GhlToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
    MakeToolMessagesItem:
      title: MakeToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    MakeTool:
      title: MakeTool
      required:
      - createdAt
      - id
      - metadata
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/MakeToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
    TransferCallToolMessagesItem:
      title: TransferCallToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    TransferCallToolDestinationsItem:
      title: TransferCallToolDestinationsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - assistant
        - $ref: '#/components/schemas/TransferDestinationAssistant'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - step
        - $ref: '#/components/schemas/TransferDestinationStep'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    TransferCallTool:
      title: TransferCallTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/TransferCallToolMessagesItem'
        destinations:
          type: array
          description: "These are the destinations that the call can be transferred to. If no destinations are provided, server.url will be used to get the transfer destination once the tool is called."
          nullable: true
          items:
            $ref: '#/components/schemas/TransferCallToolDestinationsItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    OutputToolMessagesItem:
      title: OutputToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    OutputTool:
      title: OutputTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/OutputToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    BashToolMessagesItem:
      title: BashToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    BashTool:
      title: BashTool
      required:
      - createdAt
      - id
      - name
      - orgId
      - subType
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/BashToolMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - bash_20241022
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        name:
          type: string
          description: "The name of the tool, fixed to 'bash'"
          enum:
          - bash
    ComputerToolMessagesItem:
      title: ComputerToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    ComputerTool:
      title: ComputerTool
      required:
      - createdAt
      - displayHeightPx
      - displayWidthPx
      - id
      - name
      - orgId
      - subType
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/ComputerToolMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - computer_20241022
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        name:
          type: string
          description: "The name of the tool, fixed to 'computer'"
          enum:
          - computer
        displayWidthPx:
          type: number
          description: The display width in pixels
          format: double
        displayHeightPx:
          type: number
          description: The display height in pixels
          format: double
        displayNumber:
          type: number
          description: Optional display number
          format: double
          nullable: true
    TextEditorToolMessagesItem:
      title: TextEditorToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    TextEditorTool:
      title: TextEditorTool
      required:
      - createdAt
      - id
      - name
      - orgId
      - subType
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/TextEditorToolMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - text_editor_20241022
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        name:
          type: string
          description: "The name of the tool, fixed to 'str_replace_editor'"
          enum:
          - str_replace_editor
    QueryToolMessagesItem:
      title: QueryToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    QueryTool:
      title: QueryTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/QueryToolMessagesItem'
        knowledgeBases:
          type: array
          description: The knowledge bases to query
          nullable: true
          items:
            $ref: '#/components/schemas/KnowledgeBase'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GoogleCalendarCreateEventToolMessagesItem:
      title: GoogleCalendarCreateEventToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    GoogleCalendarCreateEventTool:
      title: GoogleCalendarCreateEventTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/GoogleCalendarCreateEventToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GoogleSheetsRowAppendToolMessagesItem:
      title: GoogleSheetsRowAppendToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    GoogleSheetsRowAppendTool:
      title: GoogleSheetsRowAppendTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/GoogleSheetsRowAppendToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GoogleCalendarCheckAvailabilityToolMessagesItem:
      title: GoogleCalendarCheckAvailabilityToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    GoogleCalendarCheckAvailabilityTool:
      title: GoogleCalendarCheckAvailabilityTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    SlackSendMessageToolMessagesItem:
      title: SlackSendMessageToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    SlackSendMessageTool:
      title: SlackSendMessageTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/SlackSendMessageToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    McpToolMessagesItem:
      title: McpToolMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    McpTool:
      title: McpTool
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/McpToolMessagesItem'
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: This is the unique identifier for the organization that this tool belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the tool was last updated.
          format: date-time
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateOutputToolDtoMessagesItem:
      title: CreateOutputToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateOutputToolDto:
      title: CreateOutputToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateOutputToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateBashToolDtoMessagesItem:
      title: CreateBashToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateBashToolDto:
      title: CreateBashToolDto
      required:
      - name
      - subType
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateBashToolDtoMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - bash_20241022
        name:
          type: string
          description: "The name of the tool, fixed to 'bash'"
          enum:
          - bash
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateComputerToolDtoMessagesItem:
      title: CreateComputerToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateComputerToolDto:
      title: CreateComputerToolDto
      required:
      - displayHeightPx
      - displayWidthPx
      - name
      - subType
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateComputerToolDtoMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - computer_20241022
        name:
          type: string
          description: "The name of the tool, fixed to 'computer'"
          enum:
          - computer
        displayWidthPx:
          type: number
          description: The display width in pixels
          format: double
        displayHeightPx:
          type: number
          description: The display height in pixels
          format: double
        displayNumber:
          type: number
          description: Optional display number
          format: double
          nullable: true
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateTextEditorToolDtoMessagesItem:
      title: CreateTextEditorToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateTextEditorToolDto:
      title: CreateTextEditorToolDto
      required:
      - name
      - subType
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateTextEditorToolDtoMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - text_editor_20241022
        name:
          type: string
          description: "The name of the tool, fixed to 'str_replace_editor'"
          enum:
          - str_replace_editor
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    CreateMcpToolDtoMessagesItem:
      title: CreateMcpToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    CreateMcpToolDto:
      title: CreateMcpToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateMcpToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateDtmfToolDtoMessagesItem:
      title: UpdateDtmfToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateDtmfToolDto:
      title: UpdateDtmfToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateDtmfToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateEndCallToolDtoMessagesItem:
      title: UpdateEndCallToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateEndCallToolDto:
      title: UpdateEndCallToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateEndCallToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateFunctionToolDtoMessagesItem:
      title: UpdateFunctionToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateFunctionToolDto:
      title: UpdateFunctionToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateFunctionToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateGhlToolDtoMessagesItem:
      title: UpdateGhlToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateGhlToolDto:
      title: UpdateGhlToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateGhlToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
    UpdateMakeToolDtoMessagesItem:
      title: UpdateMakeToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateMakeToolDto:
      title: UpdateMakeToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateMakeToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
    UpdateTransferCallToolDtoMessagesItem:
      title: UpdateTransferCallToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateTransferCallToolDtoDestinationsItem:
      title: UpdateTransferCallToolDtoDestinationsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - assistant
        - $ref: '#/components/schemas/TransferDestinationAssistant'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - step
        - $ref: '#/components/schemas/TransferDestinationStep'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    UpdateTransferCallToolDto:
      title: UpdateTransferCallToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateTransferCallToolDtoMessagesItem'
        destinations:
          type: array
          description: "These are the destinations that the call can be transferred to. If no destinations are provided, server.url will be used to get the transfer destination once the tool is called."
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateTransferCallToolDtoDestinationsItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateOutputToolDtoMessagesItem:
      title: UpdateOutputToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateOutputToolDto:
      title: UpdateOutputToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateOutputToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateBashToolDtoMessagesItem:
      title: UpdateBashToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateBashToolDto:
      title: UpdateBashToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateBashToolDtoMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          nullable: true
          enum:
          - bash_20241022
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        name:
          type: string
          description: "The name of the tool, fixed to 'bash'"
          nullable: true
          enum:
          - bash
    UpdateComputerToolDtoMessagesItem:
      title: UpdateComputerToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateComputerToolDto:
      title: UpdateComputerToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateComputerToolDtoMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          nullable: true
          enum:
          - computer_20241022
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        name:
          type: string
          description: "The name of the tool, fixed to 'computer'"
          nullable: true
          enum:
          - computer
        displayWidthPx:
          type: number
          description: The display width in pixels
          format: double
          nullable: true
        displayHeightPx:
          type: number
          description: The display height in pixels
          format: double
          nullable: true
        displayNumber:
          type: number
          description: Optional display number
          format: double
          nullable: true
    UpdateTextEditorToolDtoMessagesItem:
      title: UpdateTextEditorToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateTextEditorToolDto:
      title: UpdateTextEditorToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateTextEditorToolDtoMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          nullable: true
          enum:
          - text_editor_20241022
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
        name:
          type: string
          description: "The name of the tool, fixed to 'str_replace_editor'"
          nullable: true
          enum:
          - str_replace_editor
    UpdateQueryToolDtoMessagesItem:
      title: UpdateQueryToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateQueryToolDto:
      title: UpdateQueryToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateQueryToolDtoMessagesItem'
        knowledgeBases:
          type: array
          description: The knowledge bases to query
          nullable: true
          items:
            $ref: '#/components/schemas/KnowledgeBase'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateGoogleCalendarCreateEventToolDtoMessagesItem:
      title: UpdateGoogleCalendarCreateEventToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateGoogleCalendarCreateEventToolDto:
      title: UpdateGoogleCalendarCreateEventToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateGoogleCalendarCreateEventToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateGoogleSheetsRowAppendToolDtoMessagesItem:
      title: UpdateGoogleSheetsRowAppendToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateGoogleSheetsRowAppendToolDto:
      title: UpdateGoogleSheetsRowAppendToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateGoogleSheetsRowAppendToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateGoogleCalendarCheckAvailabilityToolDtoMessagesItem:
      title: UpdateGoogleCalendarCheckAvailabilityToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateGoogleCalendarCheckAvailabilityToolDto:
      title: UpdateGoogleCalendarCheckAvailabilityToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateGoogleCalendarCheckAvailabilityToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateSlackSendMessageToolDtoMessagesItem:
      title: UpdateSlackSendMessageToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateSlackSendMessageToolDto:
      title: UpdateSlackSendMessageToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateSlackSendMessageToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    UpdateMcpToolDtoMessagesItem:
      title: UpdateMcpToolDtoMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    UpdateMcpToolDto:
      title: UpdateMcpToolDto
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateMcpToolDtoMessagesItem'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    FileStatus:
      title: FileStatus
      type: string
      enum:
      - processing
      - done
      - failed
    File:
      title: File
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        object:
          type: string
          nullable: true
          enum:
          - file
        status:
          $ref: '#/components/schemas/FileStatus'
        name:
          type: string
          description: This is the name of the file. This is just for your own reference.
          nullable: true
        originalName:
          type: string
          nullable: true
        bytes:
          type: number
          format: double
          nullable: true
        purpose:
          type: string
          nullable: true
        mimetype:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        bucket:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        parsedTextUrl:
          type: string
          nullable: true
        parsedTextBytes:
          type: number
          format: double
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the file.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the org that this file belongs to.
          example: orgId
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the file was created.
          format: date-time
          example: 2024-01-15T09:30:00Z
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the file was last updated.
          format: date-time
          example: 2024-01-15T09:30:00Z
    TrieveKnowledgeBaseSearchPlanSearchType:
      title: TrieveKnowledgeBaseSearchPlanSearchType
      type: string
      description: This is the search method used when searching for relevant chunks from the vector store.
      enum:
      - fulltext
      - semantic
      - hybrid
      - bm25
    TrieveKnowledgeBaseSearchPlan:
      title: TrieveKnowledgeBaseSearchPlan
      required:
      - searchType
      type: object
      properties:
        topK:
          type: number
          description: Specifies the number of top chunks to return. This corresponds to the `page_size` parameter in Trieve.
          format: double
          nullable: true
        removeStopWords:
          type: boolean
          description: "If true, stop words (specified in server/src/stop-words.txt in the git repo) will be removed. This will preserve queries that are entirely stop words."
          nullable: true
        scoreThreshold:
          type: number
          description: "This is the score threshold to filter out chunks with a score below the threshold for cosine distance metric. For Manhattan Distance, Euclidean Distance, and Dot Product, it will filter out scores above the threshold distance. This threshold applies before weight and bias modifications. If not specified, this defaults to no threshold. A threshold of 0 will default to no threshold."
          format: double
          nullable: true
        searchType:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlanSearchType'
    TrieveKnowledgeBase:
      title: TrieveKnowledgeBase
      required:
      - id
      - orgId
      type: object
      properties:
        name:
          type: string
          description: This is the name of the knowledge base.
          nullable: true
        searchPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlan'
        createPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseImport'
        id:
          type: string
          description: This is the id of the knowledge base.
        orgId:
          type: string
          description: This is the org id of the knowledge base.
    CustomKnowledgeBase:
      title: CustomKnowledgeBase
      required:
      - id
      - orgId
      - server
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
        id:
          type: string
          description: This is the id of the knowledge base.
        orgId:
          type: string
          description: This is the org id of the knowledge base.
    CreateTrieveKnowledgeBaseDto:
      title: CreateTrieveKnowledgeBaseDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of the knowledge base.
          nullable: true
        searchPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlan'
        createPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseImport'
    UpdateTrieveKnowledgeBaseDto:
      title: UpdateTrieveKnowledgeBaseDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of the knowledge base.
          nullable: true
        searchPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlan'
        createPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseImport'
    UpdateCustomKnowledgeBaseDto:
      title: UpdateCustomKnowledgeBaseDto
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
    TrieveKnowledgeBaseChunkPlan:
      title: TrieveKnowledgeBaseChunkPlan
      type: object
      properties:
        fileIds:
          type: array
          description: "These are the file ids that will be used to create the vector store. To upload files, use the `POST /files` endpoint."
          nullable: true
          items:
            type: string
        websites:
          type: array
          description: These are the websites that will be used to create the vector store.
          nullable: true
          items:
            type: string
        targetSplitsPerChunk:
          type: number
          description: "This is an optional field which allows you to specify the number of splits you want per chunk. If not specified, the default 20 is used. However, you may want to use a different number."
          format: double
          nullable: true
        splitDelimiters:
          type: array
          description: "This is an optional field which allows you to specify the delimiters to use when splitting the file before chunking the text. If not specified, the default [.!?\\n] are used to split into sentences. However, you may want to use spaces or other delimiters."
          nullable: true
          items:
            type: string
        rebalanceChunks:
          type: boolean
          description: "This is an optional field which allows you to specify whether or not to rebalance the chunks created from the file. If not specified, the default true is used. If true, Trieve will evenly distribute remainder splits across chunks such that 66 splits with a target_splits_per_chunk of 20 will result in 3 chunks with 22 splits each."
          nullable: true
    TrieveKnowledgeBaseCreate:
      title: TrieveKnowledgeBaseCreate
      required:
      - chunkPlans
      - type
      type: object
      properties:
        type:
          type: string
          description: This is to create a new dataset on Trieve.
          enum:
          - create
        chunkPlans:
          type: array
          description: These are the chunk plans used to create the dataset.
          items:
            $ref: '#/components/schemas/TrieveKnowledgeBaseChunkPlan'
    TrieveKnowledgeBaseImport:
      title: TrieveKnowledgeBaseImport
      required:
      - providerId
      - type
      type: object
      properties:
        type:
          type: string
          description: This is to import an existing dataset from Trieve.
          enum:
          - import
        providerId:
          type: string
          description: This is the `datasetId` of the dataset on your Trieve account.
    Squad:
      title: Squad
      required:
      - createdAt
      - id
      - members
      - orgId
      - updatedAt
      type: object
      properties:
        name:
          type: string
          description: This is the name of the squad.
          nullable: true
        members:
          type: array
          description: |-
            This is the list of assistants that make up the squad.

            The call will start with the first assistant in the list.
          items:
            $ref: '#/components/schemas/SquadMemberDto'
        membersOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
        id:
          type: string
          description: This is the unique identifier for the squad.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the org that this squad belongs to.
          example: orgId
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the squad was created.
          format: date-time
          example: 2024-01-15T09:30:00Z
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the squad was last updated.
          format: date-time
          example: 2024-01-15T09:30:00Z
    TesterPlan:
      title: TesterPlan
      type: object
      properties:
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        assistantId:
          type: string
          description: |-
            Pass an assistant id that can be access

            Make sure to write a detailed system prompt for the test assistant, and use the {{test.script}} variable to access the test script.
          nullable: true
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
    TestSuitePhoneNumber:
      title: TestSuitePhoneNumber
      required:
      - number
      - provider
      type: object
      properties:
        provider:
          type: string
          description: This is the provider of the phone number.
          enum:
          - test-suite
        number:
          type: string
          description: This is the phone number that is being tested.
    TargetPlan:
      title: TargetPlan
      type: object
      properties:
        phoneNumberId:
          type: string
          description: This is the phoneNumberId that is being tested.
          nullable: true
        phoneNumber:
          $ref: '#/components/schemas/TestSuitePhoneNumber'
    TestSuite:
      title: TestSuite
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        id:
          type: string
          description: This is the unique identifier for the test suite.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the org that this test suite belongs to.
          example: orgId
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test suite was created.
          format: date-time
          example: 2024-01-15T09:30:00Z
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test suite was last updated.
          format: date-time
          example: 2024-01-15T09:30:00Z
        name:
          type: string
          description: This is the name of the test suite.
          nullable: true
        phoneNumberId:
          type: string
          description: This is the phone number ID associated with this test suite.
          nullable: true
        testerPlan:
          $ref: '#/components/schemas/TesterPlan'
        targetPlan:
          $ref: '#/components/schemas/TargetPlan'
    TestSuitesPaginatedResponse:
      title: TestSuitesPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuite'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    TestSuiteTestVoice:
      title: TestSuiteTestVoice
      required:
      - createdAt
      - id
      - orgId
      - scorers
      - script
      - testSuiteId
      - updatedAt
      type: object
      properties:
        scorers:
          type: array
          description: These are the scorers used to evaluate the test.
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
        id:
          type: string
          description: This is the unique identifier for the test.
        testSuiteId:
          type: string
          description: This is the unique identifier for the test suite this test belongs to.
        orgId:
          type: string
          description: This is the unique identifier for the organization this test belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of the test.
          nullable: true
        script:
          type: string
          description: This is the script to be used for the voice test.
        numAttempts:
          type: number
          description: This is the number of attempts allowed for the test.
          format: double
          nullable: true
    TestSuiteTestChat:
      title: TestSuiteTestChat
      required:
      - createdAt
      - id
      - orgId
      - scorers
      - script
      - testSuiteId
      - updatedAt
      type: object
      properties:
        scorers:
          type: array
          description: These are the scorers used to evaluate the test.
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
        id:
          type: string
          description: This is the unique identifier for the test.
        testSuiteId:
          type: string
          description: This is the unique identifier for the test suite this test belongs to.
        orgId:
          type: string
          description: This is the unique identifier for the organization this test belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of the test.
          nullable: true
        script:
          type: string
          description: This is the script to be used for the chat test.
        numAttempts:
          type: number
          description: This is the number of attempts allowed for the test.
          format: double
          nullable: true
    CreateTestSuiteTestVoiceDto:
      title: CreateTestSuiteTestVoiceDto
      required:
      - scorers
      - script
      type: object
      properties:
        scorers:
          type: array
          description: These are the scorers used to evaluate the test.
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
        script:
          type: string
          description: This is the script to be used for the voice test.
        numAttempts:
          type: number
          description: This is the number of attempts allowed for the test.
          format: double
          nullable: true
        name:
          type: string
          description: This is the name of the test.
          nullable: true
    CreateTestSuiteTestChatDto:
      title: CreateTestSuiteTestChatDto
      required:
      - scorers
      - script
      type: object
      properties:
        scorers:
          type: array
          description: These are the scorers used to evaluate the test.
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
        script:
          type: string
          description: This is the script to be used for the chat test.
        numAttempts:
          type: number
          description: This is the number of attempts allowed for the test.
          format: double
          nullable: true
        name:
          type: string
          description: This is the name of the test.
          nullable: true
    UpdateTestSuiteTestVoiceDto:
      title: UpdateTestSuiteTestVoiceDto
      type: object
      properties:
        scorers:
          type: array
          description: These are the scorers used to evaluate the test.
          nullable: true
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
        name:
          type: string
          description: This is the name of the test.
          nullable: true
        script:
          type: string
          description: This is the script to be used for the voice test.
          nullable: true
        numAttempts:
          type: number
          description: This is the number of attempts allowed for the test.
          format: double
          nullable: true
    UpdateTestSuiteTestChatDto:
      title: UpdateTestSuiteTestChatDto
      type: object
      properties:
        scorers:
          type: array
          description: These are the scorers used to evaluate the test.
          nullable: true
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
        name:
          type: string
          description: This is the name of the test.
          nullable: true
        script:
          type: string
          description: This is the script to be used for the chat test.
          nullable: true
        numAttempts:
          type: number
          description: This is the number of attempts allowed for the test.
          format: double
          nullable: true
    TestSuiteTestScorerAi:
      title: TestSuiteTestScorerAi
      required:
      - rubric
      - type
      type: object
      properties:
        type:
          type: string
          description: "This is the type of the scorer, which must be AI."
          enum:
          - ai
        rubric:
          type: string
          description: This is the rubric used by the AI scorer.
    TestSuiteTestsPaginatedResponseResultsItem:
      title: TestSuiteTestsPaginatedResponseResultsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/TestSuiteTestVoice'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - chat
        - $ref: '#/components/schemas/TestSuiteTestChat'
    TestSuiteTestsPaginatedResponse:
      title: TestSuiteTestsPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          description: A list of test suite tests.
          items:
            $ref: '#/components/schemas/TestSuiteTestsPaginatedResponseResultsItem'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    TestSuiteRunScorerAiResult:
      title: TestSuiteRunScorerAiResult
      type: string
      description: This is the result of the test suite.
      enum:
      - pass
      - fail
    TestSuiteRunScorerAi:
      title: TestSuiteRunScorerAi
      required:
      - reasoning
      - result
      - rubric
      - type
      type: object
      properties:
        type:
          type: string
          description: "This is the type of the scorer, which must be AI."
          enum:
          - ai
        result:
          $ref: '#/components/schemas/TestSuiteRunScorerAiResult'
        reasoning:
          type: string
          description: This is the reasoning provided by the AI scorer.
        rubric:
          type: string
          description: This is the rubric used by the AI scorer.
    TestSuiteRunTestAttemptCall:
      title: TestSuiteRunTestAttemptCall
      required:
      - artifact
      type: object
      properties:
        artifact:
          $ref: '#/components/schemas/Artifact'
    TestSuiteRunTestAttemptMetadata:
      title: TestSuiteRunTestAttemptMetadata
      required:
      - sessionId
      type: object
      properties:
        sessionId:
          type: string
          description: This is the session ID for the test attempt.
    TestSuiteRunTestAttempt:
      title: TestSuiteRunTestAttempt
      required:
      - scorerResults
      type: object
      properties:
        scorerResults:
          type: array
          description: These are the results of the scorers used to evaluate the test attempt.
          items:
            $ref: '#/components/schemas/TestSuiteRunScorerAi'
        call:
          $ref: '#/components/schemas/TestSuiteRunTestAttemptCall'
        callId:
          type: string
          description: This is the call ID for the test attempt.
          nullable: true
        metadata:
          $ref: '#/components/schemas/TestSuiteRunTestAttemptMetadata'
    TestSuiteRunTestResult:
      title: TestSuiteRunTestResult
      required:
      - attempts
      - test
      type: object
      properties:
        test:
          $ref: '#/components/schemas/TestSuiteTestVoice'
        attempts:
          type: array
          description: These are the attempts made for this test.
          items:
            $ref: '#/components/schemas/TestSuiteRunTestAttempt'
    TestSuiteRunStatus:
      title: TestSuiteRunStatus
      type: string
      description: This is the current status of the test suite run.
      enum:
      - queued
      - in-progress
      - completed
      - failed
    TestSuiteRun:
      title: TestSuiteRun
      required:
      - createdAt
      - id
      - orgId
      - status
      - testResults
      - testSuiteId
      - updatedAt
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TestSuiteRunStatus'
        id:
          type: string
          description: This is the unique identifier for the test suite run.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the organization this run belongs to.
          example: orgId
        testSuiteId:
          type: string
          description: This is the unique identifier for the test suite this run belongs to.
          example: testSuiteId
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test suite run was created.
          format: date-time
          example: 2024-01-15T09:30:00Z
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the test suite run was last updated.
          format: date-time
          example: 2024-01-15T09:30:00Z
        testResults:
          type: array
          description: These are the results of the tests in this test suite run.
          items:
            $ref: '#/components/schemas/TestSuiteRunTestResult'
        name:
          type: string
          description: This is the name of the test suite run.
          nullable: true
    TestSuiteRunsPaginatedResponse:
      title: TestSuiteRunsPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRun'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    Metrics:
      title: Metrics
      required:
      - bill
      - billDailyBreakdown
      - billWithinBillingLimit
      - callActive
      - callActiveWithinConcurrencyLimit
      - callCount
      - callCountDailyBreakdown
      - callMinutes
      - callMinutesAverage
      - callMinutesAverageDailyBreakdown
      - callMinutesDailyBreakdown
      - orgId
      - rangeEnd
      - rangeStart
      type: object
      properties:
        orgId:
          type: string
        rangeStart:
          type: string
        rangeEnd:
          type: string
        bill:
          type: number
          format: double
        billWithinBillingLimit:
          type: boolean
        billDailyBreakdown:
          type: object
          additionalProperties: true
        callActive:
          type: number
          format: double
        callActiveWithinConcurrencyLimit:
          type: boolean
        callMinutes:
          type: number
          format: double
        callMinutesDailyBreakdown:
          type: object
          additionalProperties: true
        callMinutesAverage:
          type: number
          format: double
        callMinutesAverageDailyBreakdown:
          type: object
          additionalProperties: true
        callCount:
          type: number
          format: double
        callCountDailyBreakdown:
          type: object
          additionalProperties: true
    TimeRangeStep:
      title: TimeRangeStep
      type: string
      description: |-
        This is the time step for aggregations.

        If not provided, defaults to returning for the entire time range.
      enum:
      - second
      - minute
      - hour
      - day
      - week
      - month
      - quarter
      - year
      - decade
      - century
      - millennium
    TimeRange:
      title: TimeRange
      type: object
      properties:
        step:
          $ref: '#/components/schemas/TimeRangeStep'
        start:
          type: string
          description: |-
            This is the start date for the time range.

            If not provided, defaults to the 7 days ago.
          format: date-time
          nullable: true
        end:
          type: string
          description: |-
            This is the end date for the time range.

            If not provided, defaults to now.
          format: date-time
          nullable: true
        timezone:
          type: string
          description: |-
            This is the timezone you want to set for the query.

            If not provided, defaults to UTC.
          nullable: true
    AnalyticsOperationOperation:
      title: AnalyticsOperationOperation
      type: string
      description: This is the aggregation operation you want to perform.
      enum:
      - sum
      - avg
      - count
      - min
      - max
      - history
    AnalyticsOperationColumn:
      title: AnalyticsOperationColumn
      type: string
      description: This is the columns you want to perform the aggregation operation on.
      enum:
      - id
      - cost
      - costBreakdown.llm
      - costBreakdown.stt
      - costBreakdown.tts
      - costBreakdown.vapi
      - costBreakdown.ttsCharacters
      - costBreakdown.llmPromptTokens
      - costBreakdown.llmCompletionTokens
      - duration
      - concurrency
      - minutesUsed
    AnalyticsOperation:
      title: AnalyticsOperation
      required:
      - column
      - operation
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/AnalyticsOperationOperation'
        column:
          $ref: '#/components/schemas/AnalyticsOperationColumn'
        alias:
          type: string
          description: "This is the alias for column name returned. Defaults to `${operation}${column}`."
          nullable: true
    AnalyticsQueryTable:
      title: AnalyticsQueryTable
      type: string
      description: This is the table you want to query.
      enum:
      - call
      - subscription
    AnalyticsQueryGroupByItem:
      title: AnalyticsQueryGroupByItem
      type: string
      enum:
      - type
      - assistantId
      - endedReason
      - analysis.successEvaluation
      - status
    AnalyticsQuery:
      title: AnalyticsQuery
      required:
      - name
      - operations
      - table
      type: object
      properties:
        table:
          $ref: '#/components/schemas/AnalyticsQueryTable'
        groupBy:
          type: array
          description: This is the list of columns you want to group by.
          nullable: true
          items:
            $ref: '#/components/schemas/AnalyticsQueryGroupByItem'
        name:
          type: string
          description: This is the name of the query. This will be used to identify the query in the response.
        timeRange:
          $ref: '#/components/schemas/TimeRange'
        operations:
          type: array
          description: This is the list of operations you want to perform.
          items:
            $ref: '#/components/schemas/AnalyticsOperation'
    AnalyticsQueryResult:
      title: AnalyticsQueryResult
      required:
      - name
      - result
      - timeRange
      type: object
      properties:
        name:
          type: string
          description: This is the unique key for the query.
        timeRange:
          $ref: '#/components/schemas/TimeRange'
        result:
          type: array
          description: |-
            This is the result of the query, a list of unique groups with result of their aggregations.

            Example:
            "result": [
              { "date": "2023-01-01", "assistantId": "123", "endedReason": "customer-ended-call", "sumDuration": 120, "avgCost": 10.5 },
              { "date": "2023-01-02", "assistantId": "123", "endedReason": "customer-did-not-give-microphone-permission", "sumDuration": 0, "avgCost": 0 },
              // Additional results
            ]
          items:
            type: object
            additionalProperties: true
    CallLogPrivilegedLevel:
      title: CallLogPrivilegedLevel
      type: string
      description: This is the level of the log message.
      enum:
      - INFO
      - LOG
      - WARN
      - ERROR
      - CHECKPOINT
    CallLogPrivileged:
      title: CallLogPrivileged
      required:
      - callId
      - level
      - log
      - orgId
      - time
      type: object
      properties:
        callId:
          type: string
          description: This is the unique identifier for the call.
        orgId:
          type: string
          description: This is the unique identifier for the org that this call log belongs to.
        log:
          type: string
          description: This is the log message associated with the call.
        level:
          $ref: '#/components/schemas/CallLogPrivilegedLevel'
        time:
          type: string
          description: This is the ISO 8601 date-time string of when the log was created.
          format: date-time
    CallLogsPaginatedResponse:
      title: CallLogsPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CallLogPrivileged'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    Error:
      title: Error
      required:
      - message
      type: object
      properties:
        message:
          type: string
    LogType:
      title: LogType
      type: string
      description: This is the type of the log.
      enum:
      - API
      - Webhook
      - Call
      - Provider
    LogResource:
      title: LogResource
      type: string
      description: "This is the specific resource, relevant only to API logs."
      enum:
      - org
      - assistant
      - analytics
      - credential
      - phone-number
      - block
      - voice-library
      - provider
      - tool
      - token
      - template
      - squad
      - call
      - file
      - metric
      - log
    LogRequestHttpMethod:
      title: LogRequestHttpMethod
      type: string
      description: This is the request method.
      enum:
      - POST
      - GET
      - PUT
      - PATCH
      - DELETE
    Log:
      title: Log
      required:
      - orgId
      - time
      - type
      type: object
      properties:
        time:
          type: string
          description: This is the timestamp at which the log was written.
        orgId:
          type: string
          description: This is the unique identifier for the org that this log belongs to.
        type:
          $ref: '#/components/schemas/LogType'
        webhookType:
          type: string
          description: "This is the type of the webhook, given the log is from a webhook."
          nullable: true
        resource:
          $ref: '#/components/schemas/LogResource'
        requestDurationSeconds:
          type: number
          description: '''This is how long the request took.'
          format: double
          nullable: true
        requestStartedAt:
          type: string
          description: This is the timestamp at which the request began.
          nullable: true
        requestFinishedAt:
          type: string
          description: This is the timestamp at which the request finished.
          nullable: true
        requestBody:
          type: object
          additionalProperties: true
          description: This is the body of the request.
          nullable: true
        requestHttpMethod:
          $ref: '#/components/schemas/LogRequestHttpMethod'
        requestUrl:
          type: string
          description: This is the request URL.
          nullable: true
        requestPath:
          type: string
          description: This is the request path.
          nullable: true
        requestQuery:
          type: string
          description: This is the request query.
          nullable: true
        responseHttpCode:
          type: number
          description: This the HTTP status code of the response.
          format: double
          nullable: true
        requestIpAddress:
          type: string
          description: This is the request IP address.
          nullable: true
        requestOrigin:
          type: string
          description: This is the origin of the request
          nullable: true
        responseBody:
          type: object
          additionalProperties: true
          description: This is the body of the response.
          nullable: true
        requestHeaders:
          type: object
          additionalProperties: true
          description: These are the headers of the request.
          nullable: true
        error:
          $ref: '#/components/schemas/Error'
        assistantId:
          type: string
          description: This is the ID of the assistant.
          nullable: true
        phoneNumberId:
          type: string
          description: This is the ID of the phone number.
          nullable: true
        customerId:
          type: string
          description: This is the ID of the customer.
          nullable: true
        squadId:
          type: string
          description: This is the ID of the squad.
          nullable: true
        callId:
          type: string
          description: This is the ID of the call.
          nullable: true
    LogsPaginatedResponse:
      title: LogsPaginatedResponse
      required:
      - metadata
      - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Log'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
    CreateOrgDtoChannel:
      title: CreateOrgDtoChannel
      type: string
      description: This is the channel of the org. There is the cluster the API traffic for the org will be directed.
      enum:
      - default
      - weekly
    CreateOrgDto:
      title: CreateOrgDto
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          description: |-
            When this is enabled, no logs, recordings, or transcriptions will be stored. At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.
            When HIPAA is enabled, only OpenAI/Custom LLM or Azure Providers will be available for LLM and Voice respectively.
            This is due to the compliance requirements of HIPAA. Other providers may not meet these requirements.
          nullable: true
        subscriptionId:
          type: string
          description: This is the ID of the subscription the org belongs to.
          nullable: true
        name:
          type: string
          description: This is the name of the org. This is just for your own reference.
          nullable: true
        channel:
          $ref: '#/components/schemas/CreateOrgDtoChannel'
        billingLimit:
          type: number
          description: "This is the monthly billing limit for the org. To go beyond $1000/mo, please contact us at support@vapi.ai."
          format: double
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        concurrencyLimit:
          type: number
          description: "This is the concurrency limit for the org. This is the maximum number of calls that can be active at any given time. To go beyond 10, please contact us at support@vapi.ai."
          format: double
          nullable: true
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
    AutoReloadPlan:
      title: AutoReloadPlan
      required:
      - credits
      - threshold
      type: object
      properties:
        credits:
          type: number
          description: This the amount of credits to reload.
          format: double
        threshold:
          type: number
          description: This is the limit at which the reload is triggered.
          format: double
    InvoicePlan:
      title: InvoicePlan
      type: object
      properties:
        companyName:
          type: string
          description: This is the name of the company.
          nullable: true
        companyAddress:
          type: string
          description: This is the address of the company.
          nullable: true
        companyTaxId:
          type: string
          description: This is the tax ID of the company.
          nullable: true
        companyEmail:
          type: string
          description: "This is the preferred invoicing email of the company. If not specified, defaults to the subscription's email."
          nullable: true
    SubscriptionType:
      title: SubscriptionType
      type: string
      description: This is the type / tier of the subscription.
      enum:
      - trial
      - pay-as-you-go
      - enterprise
    SubscriptionStatus:
      title: SubscriptionStatus
      type: string
      description: |-
        This is the status of the subscription. Past due subscriptions are subscriptions
        with past due payments.
      enum:
      - active
      - frozen
    Subscription:
      title: Subscription
      required:
      - concurrencyCounter
      - concurrencyLimitIncluded
      - concurrencyLimitPurchased
      - createdAt
      - credits
      - id
      - status
      - type
      - updatedAt
      type: object
      properties:
        id:
          type: string
          description: This is the unique identifier for the subscription.
        createdAt:
          type: string
          description: This is the timestamp when the subscription was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the timestamp when the subscription was last updated.
          format: date-time
        type:
          $ref: '#/components/schemas/SubscriptionType'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        credits:
          type: string
          description: |-
            This is the number of credits the subscription currently has.

            Note: This is a string to avoid floating point precision issues.
        concurrencyCounter:
          type: number
          description: This is the total number of active calls (concurrency) across all orgs under this subscription.
          format: double
        concurrencyLimitIncluded:
          type: number
          description: This is the default concurrency limit for the subscription.
          format: double
        phoneNumbersCounter:
          type: number
          description: This is the number of free phone numbers the subscription has
          format: double
          nullable: true
        phoneNumbersIncluded:
          type: number
          description: This is the maximum number of free phone numbers the subscription can have
          format: double
          nullable: true
        concurrencyLimitPurchased:
          type: number
          description: This is the purchased add-on concurrency limit for the subscription.
          format: double
        monthlyChargeScheduleId:
          type: number
          description: This is the ID of the monthly job that charges for subscription add ons and phone numbers.
          format: double
          nullable: true
        monthlyCreditCheckScheduleId:
          type: number
          description: |-
            This is the ID of the monthly job that checks whether the credit balance of the subscription
            is sufficient for the monthly charge.
          format: double
          nullable: true
        stripeCustomerId:
          type: string
          description: This is the Stripe customer ID.
          nullable: true
        stripePaymentMethodId:
          type: string
          description: This is the Stripe payment ID.
          nullable: true
        slackSupportEnabled:
          type: boolean
          description: "If this flag is true, then the user has purchased slack support."
          nullable: true
        slackChannelId:
          type: string
          description: "If this subscription has a slack support subscription, the slack channel's ID will be stored here."
          nullable: true
        hipaaEnabled:
          type: boolean
          description: |-
            This is the HIPAA enabled flag for the subscription. It determines whether orgs under this
            subscription have the option to enable HIPAA compliance.
          nullable: true
        hipaaCommonPaperAgreementId:
          type: string
          description: This is the ID for the Common Paper agreement outlining the HIPAA contract.
          nullable: true
        stripePaymentMethodFingerprint:
          type: string
          description: |-
            This is the Stripe fingerprint of the payment method (card). It allows us
            to detect users who try to abuse our system through multiple sign-ups.
          nullable: true
        stripeCustomerEmail:
          type: string
          description: This is the customer's email on Stripe.
          nullable: true
        referredByEmail:
          type: string
          description: This is the email of the referrer for the subscription.
          nullable: true
        autoReloadPlan:
          $ref: '#/components/schemas/AutoReloadPlan'
        minutesIncluded:
          type: number
          description: The number of minutes included in the subscription.
          format: double
          nullable: true
        minutesUsed:
          type: number
          description: The number of minutes used in the subscription.
          format: double
          nullable: true
        minutesUsedNextResetAt:
          type: string
          description: This is the timestamp at which the number of monthly free minutes is scheduled to reset at.
          format: date-time
          nullable: true
        minutesOverageCost:
          type: number
          description: The per minute charge on minutes that exceed the included minutes. Enterprise only.
          format: double
          nullable: true
        providersIncluded:
          type: array
          description: The list of providers included in the subscription. Enterprise only.
          nullable: true
          items:
            type: string
        outboundCallsDailyLimit:
          type: number
          description: The maximum number of outbound calls this subscription may make in a day. Resets every night.
          format: double
          nullable: true
        outboundCallsCounter:
          type: number
          description: The current number of outbound calls the subscription has made in the current day.
          format: double
          nullable: true
        outboundCallsCounterNextResetAt:
          type: string
          description: This is the timestamp at which the outbound calls counter is scheduled to reset at.
          format: date-time
          nullable: true
        couponIds:
          type: array
          description: This is the IDs of the coupons applicable to this subscription.
          nullable: true
          items:
            type: string
        couponUsageLeft:
          type: string
          description: This is the number of credits left obtained from a coupon.
          nullable: true
        invoicePlan:
          $ref: '#/components/schemas/InvoicePlan'
        pciEnabled:
          type: boolean
          description: |-
            This is the PCI enabled flag for the subscription. It determines whether orgs under this
            subscription have the option to enable PCI compliance.
          nullable: true
        pciCommonPaperAgreementId:
          type: string
          description: This is the ID for the Common Paper agreement outlining the PCI contract.
          nullable: true
    OrgPlan:
      title: OrgPlan
      type: object
      properties:
        includedProviders:
          type: array
          nullable: true
          items:
            type: object
            additionalProperties: true
        includedMinutes:
          type: number
          format: double
          nullable: true
        costPerOverageMinute:
          type: number
          format: double
          nullable: true
    OrgChannel:
      title: OrgChannel
      type: string
      description: This is the channel of the org. There is the cluster the API traffic for the org will be directed.
      enum:
      - default
      - weekly
    Org:
      title: Org
      required:
      - createdAt
      - id
      - updatedAt
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          description: |-
            When this is enabled, no logs, recordings, or transcriptions will be stored. At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.
            When HIPAA is enabled, only OpenAI/Custom LLM or Azure Providers will be available for LLM and Voice respectively.
            This is due to the compliance requirements of HIPAA. Other providers may not meet these requirements.
          nullable: true
        subscription:
          $ref: '#/components/schemas/Subscription'
        subscriptionId:
          type: string
          description: This is the ID of the subscription the org belongs to.
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the org.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the org was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the org was last updated.
          format: date-time
        stripeCustomerId:
          type: string
          description: This is the Stripe customer for the org.
          nullable: true
        stripeSubscriptionId:
          type: string
          description: This is the subscription for the org.
          nullable: true
        stripeSubscriptionItemId:
          type: string
          description: This is the subscription's subscription item.
          nullable: true
        stripeSubscriptionCurrentPeriodStart:
          type: string
          description: This is the subscription's current period start.
          format: date-time
          nullable: true
        stripeSubscriptionStatus:
          type: string
          description: This is the subscription's status.
          nullable: true
        plan:
          $ref: '#/components/schemas/OrgPlan'
        name:
          type: string
          description: This is the name of the org. This is just for your own reference.
          nullable: true
        channel:
          $ref: '#/components/schemas/OrgChannel'
        billingLimit:
          type: number
          description: "This is the monthly billing limit for the org. To go beyond $1000/mo, please contact us at support@vapi.ai."
          format: double
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        concurrencyLimit:
          type: number
          description: "This is the concurrency limit for the org. This is the maximum number of calls that can be active at any given time. To go beyond 10, please contact us at support@vapi.ai."
          format: double
          nullable: true
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
    UpdateOrgDtoChannel:
      title: UpdateOrgDtoChannel
      type: string
      description: This is the channel of the org. There is the cluster the API traffic for the org will be directed.
      enum:
      - default
      - weekly
    UpdateOrgDto:
      title: UpdateOrgDto
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          description: |-
            When this is enabled, no logs, recordings, or transcriptions will be stored. At the end of the call, you will still receive an end-of-call-report message to store on your server. Defaults to false.
            When HIPAA is enabled, only OpenAI/Custom LLM or Azure Providers will be available for LLM and Voice respectively.
            This is due to the compliance requirements of HIPAA. Other providers may not meet these requirements.
          nullable: true
        subscriptionId:
          type: string
          description: This is the ID of the subscription the org belongs to.
          nullable: true
        name:
          type: string
          description: This is the name of the org. This is just for your own reference.
          nullable: true
        channel:
          $ref: '#/components/schemas/UpdateOrgDtoChannel'
        billingLimit:
          type: number
          description: "This is the monthly billing limit for the org. To go beyond $1000/mo, please contact us at support@vapi.ai."
          format: double
          nullable: true
        server:
          $ref: '#/components/schemas/Server'
        concurrencyLimit:
          type: number
          description: "This is the concurrency limit for the org. This is the maximum number of calls that can be active at any given time. To go beyond 10, please contact us at support@vapi.ai."
          format: double
          nullable: true
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
    User:
      title: User
      required:
      - createdAt
      - email
      - id
      - updatedAt
      type: object
      properties:
        id:
          type: string
          description: This is the unique identifier for the profile or user.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the profile was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the profile was last updated.
          format: date-time
        email:
          type: string
          description: This is the email of the user that is associated with the profile.
        fullName:
          type: string
          description: This is the full name of the user that is associated with the profile.
          nullable: true
    InviteUserDtoRole:
      title: InviteUserDtoRole
      type: string
      enum:
      - admin
      - editor
      - viewer
    InviteUserDto:
      title: InviteUserDto
      required:
      - emails
      - role
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
        role:
          $ref: '#/components/schemas/InviteUserDtoRole'
        redirectTo:
          type: string
          nullable: true
    UpdateUserRoleDtoRole:
      title: UpdateUserRoleDtoRole
      type: string
      enum:
      - admin
      - editor
      - viewer
    UpdateUserRoleDto:
      title: UpdateUserRoleDto
      required:
      - role
      - userId
      type: object
      properties:
        userId:
          type: string
        role:
          $ref: '#/components/schemas/UpdateUserRoleDtoRole'
    TokenRestrictions:
      title: TokenRestrictions
      type: object
      properties:
        enabled:
          type: boolean
          description: "This determines whether the token is enabled or disabled. Default is true, it's enabled."
          nullable: true
        allowedOrigins:
          type: array
          description: |-
            This determines the allowed origins for this token. Validates the `Origin` header. Default is any origin.

            Only relevant for `public` tokens.
          nullable: true
          items:
            type: string
        allowedAssistantIds:
          type: array
          description: |-
            This determines which assistantIds can be used when creating a call. Default is any assistantId.

            Only relevant for `public` tokens.
          nullable: true
          items:
            type: string
        allowTransientAssistant:
          type: boolean
          description: |-
            This determines whether transient assistants can be used when creating a call. Default is true.

            If `allowedAssistantIds` is provided, this is automatically false.

            Only relevant for `public` tokens.
          nullable: true
    CreateTokenDtoTag:
      title: CreateTokenDtoTag
      type: string
      description: This is the tag for the token. It represents its scope.
      enum:
      - private
      - public
    CreateTokenDto:
      title: CreateTokenDto
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/CreateTokenDtoTag'
        name:
          type: string
          description: This is the name of the token. This is just for your own reference.
          nullable: true
        restrictions:
          $ref: '#/components/schemas/TokenRestrictions'
    TokenTag:
      title: TokenTag
      type: string
      description: This is the tag for the token. It represents its scope.
      enum:
      - private
      - public
    Token:
      title: Token
      required:
      - createdAt
      - id
      - orgId
      - updatedAt
      - value
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/TokenTag'
        id:
          type: string
          description: This is the unique identifier for the token.
        orgId:
          type: string
          description: This is unique identifier for the org that this token belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the token was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the token was last updated.
          format: date-time
        value:
          type: string
          description: This is the token key.
        name:
          type: string
          description: This is the name of the token. This is just for your own reference.
          nullable: true
        restrictions:
          $ref: '#/components/schemas/TokenRestrictions'
    UpdateTokenDtoTag:
      title: UpdateTokenDtoTag
      type: string
      description: This is the tag for the token. It represents its scope.
      enum:
      - private
      - public
    UpdateTokenDto:
      title: UpdateTokenDto
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/UpdateTokenDtoTag'
        name:
          type: string
          description: This is the name of the token. This is just for your own reference.
          nullable: true
        restrictions:
          $ref: '#/components/schemas/TokenRestrictions'
    AnthropicCredential:
      title: AnthropicCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - anthropic
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    AnyscaleCredential:
      title: AnyscaleCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - anyscale
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    AssemblyAiCredential:
      title: AssemblyAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - assembly-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    AzureCredentialService:
      title: AzureCredentialService
      type: string
      description: This is the service being used in Azure.
      enum:
      - speech
      - blob_storage
    AzureCredentialRegion:
      title: AzureCredentialRegion
      type: string
      description: This is the region of the Azure resource.
      enum:
      - australia
      - canadaeast
      - canadacentral
      - eastus2
      - eastus
      - france
      - india
      - japaneast
      - japanwest
      - uaenorth
      - northcentralus
      - norway
      - southcentralus
      - swedencentral
      - switzerland
      - uk
      - westus
      - westus3
    AzureCredential:
      title: AzureCredential
      required:
      - createdAt
      - id
      - orgId
      - provider
      - service
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - azure
        service:
          $ref: '#/components/schemas/AzureCredentialService'
        region:
          $ref: '#/components/schemas/AzureCredentialRegion'
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/AzureBlobStorageBucketPlan'
    AzureOpenAiCredentialRegion:
      title: AzureOpenAiCredentialRegion
      type: string
      enum:
      - australia
      - canadaeast
      - canadacentral
      - eastus2
      - eastus
      - france
      - india
      - japaneast
      - japanwest
      - uaenorth
      - northcentralus
      - norway
      - southcentralus
      - swedencentral
      - switzerland
      - uk
      - westus
      - westus3
    AzureOpenAiCredentialModelsItem:
      title: AzureOpenAiCredentialModelsItem
      type: string
      enum:
      - gpt-4o-2024-11-20
      - gpt-4o-2024-08-06
      - gpt-4o-mini-2024-07-18
      - gpt-4o-2024-05-13
      - gpt-4-turbo-2024-04-09
      - gpt-4-0125-preview
      - gpt-4-1106-preview
      - gpt-4-0613
      - gpt-35-turbo-0125
      - gpt-35-turbo-1106
    AzureOpenAiCredential:
      title: AzureOpenAiCredential
      required:
      - createdAt
      - id
      - models
      - openAIEndpoint
      - openAIKey
      - orgId
      - provider
      - region
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - azure-openai
        region:
          $ref: '#/components/schemas/AzureOpenAiCredentialRegion'
        models:
          type: array
          items:
            $ref: '#/components/schemas/AzureOpenAiCredentialModelsItem'
        openAIKey:
          type: string
          description: This is not returned in the API.
        ocpApimSubscriptionKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        openAIEndpoint:
          type: string
    ByoSipTrunkCredential:
      title: ByoSipTrunkCredential
      required:
      - createdAt
      - gateways
      - id
      - orgId
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          description: This can be used to bring your own SIP trunks or to connect to a Carrier.
          nullable: true
          enum:
          - byo-sip-trunk
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        gateways:
          type: array
          description: This is the list of SIP trunk's gateways.
          items:
            $ref: '#/components/schemas/SipTrunkGateway'
        outboundAuthenticationPlan:
          $ref: '#/components/schemas/SipTrunkOutboundAuthenticationPlan'
        outboundLeadingPlusEnabled:
          type: boolean
          description: |-
            This ensures the outbound origination attempts have a leading plus. Defaults to false to match conventional telecom behavior.

            Usage:
            - Vonage/Twilio requires leading plus for all outbound calls. Set this to true.

            @default false
          nullable: true
        techPrefix:
          type: string
          description: This can be used to configure the tech prefix on outbound calls. This is an advanced property.
          nullable: true
        sipDiversionHeader:
          type: string
          description: This can be used to enable the SIP diversion header for authenticating the calling number if the SIP trunk supports it. This is an advanced property.
          nullable: true
        sbcConfiguration:
          $ref: '#/components/schemas/SbcConfiguration'
    CartesiaCredential:
      title: CartesiaCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - cartesia
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CerebrasCredential:
      title: CerebrasCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - cerebras
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CloudflareCredential:
      title: CloudflareCredential
      required:
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          description: Credential provider. Only allowed value is cloudflare
          enum:
          - cloudflare
        accountId:
          type: string
          description: Cloudflare Account Id.
          nullable: true
        apiKey:
          type: string
          description: Cloudflare API Key / Token.
          nullable: true
        accountEmail:
          type: string
          description: Cloudflare Account Email.
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/CloudflareR2BucketPlan'
    Oauth2AuthenticationSession:
      title: Oauth2AuthenticationSession
      type: object
      properties:
        accessToken:
          type: string
          description: This is the OAuth2 access token.
          nullable: true
        expiresAt:
          type: string
          description: This is the OAuth2 access token expiration.
          format: date-time
          nullable: true
    CustomLlmCredential:
      title: CustomLlmCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - custom-llm
        apiKey:
          type: string
          description: This is not returned in the API.
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        authenticationSession:
          $ref: '#/components/schemas/Oauth2AuthenticationSession'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    DeepgramCredential:
      title: DeepgramCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - deepgram
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        apiUrl:
          type: string
          description: This can be used to point to an onprem Deepgram instance. Defaults to api.deepgram.com.
          nullable: true
    DeepInfraCredential:
      title: DeepInfraCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - deepinfra
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    DeepSeekCredential:
      title: DeepSeekCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - deep-seek
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    ElevenLabsCredential:
      title: ElevenLabsCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - 11labs
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GcpCredential:
      title: GcpCredential
      required:
      - createdAt
      - gcpKey
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - gcp
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        gcpKey:
          $ref: '#/components/schemas/GcpKey'
        bucketPlan:
          $ref: '#/components/schemas/BucketPlan'
    GladiaCredential:
      title: GladiaCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - gladia
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GoHighLevelCredential:
      title: GoHighLevelCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - gohighlevel
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GoogleCredential:
      title: GoogleCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          description: "This is the key for Gemini in Google AI Studio. Get it from here: https://aistudio.google.com/app/apikey"
          enum:
          - google
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GroqCredential:
      title: GroqCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - groq
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    HumeCredential:
      title: HumeCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - hume
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    InflectionAiCredential:
      title: InflectionAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          description: "This is the api key for Pi in InflectionAI's console. Get it from here: https://developers.inflection.ai/keys, billing will need to be setup"
          enum:
          - inflection-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    LangfuseCredential:
      title: LangfuseCredential
      required:
      - apiKey
      - apiUrl
      - createdAt
      - id
      - orgId
      - provider
      - publicKey
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - langfuse
        publicKey:
          type: string
          description: "The public key for Langfuse project. Eg: pk-lf-..."
        apiKey:
          type: string
          description: "The secret key for Langfuse project. Eg: sk-lf-... .This is not returned in the API."
        apiUrl:
          type: string
          description: "The host URL for Langfuse project. Eg: https://cloud.langfuse.com"
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    LmntCredential:
      title: LmntCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - lmnt
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    MakeCredential:
      title: MakeCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - region
      - teamId
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - make
        teamId:
          type: string
          description: Team ID
        region:
          type: string
          description: "Region of your application. For example: eu1, eu2, us1, us2"
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    MistralCredential:
      title: MistralCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - mistral
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    NeuphonicCredential:
      title: NeuphonicCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - neuphonic
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    OpenAiCredential:
      title: OpenAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - openai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    OpenRouterCredential:
      title: OpenRouterCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - openrouter
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    PerplexityAiCredential:
      title: PerplexityAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - perplexity-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    PlayHtCredential:
      title: PlayHtCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      - userId
      type: object
      properties:
        provider:
          type: string
          enum:
          - playht
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        userId:
          type: string
    RimeAiCredential:
      title: RimeAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - rime-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    RunpodCredential:
      title: RunpodCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - runpod
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    S3Credential:
      title: S3Credential
      required:
      - awsAccessKeyId
      - awsSecretAccessKey
      - createdAt
      - id
      - orgId
      - provider
      - region
      - s3BucketName
      - s3PathPrefix
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          description: Credential provider. Only allowed value is s3
          enum:
          - s3
        awsAccessKeyId:
          type: string
          description: AWS access key ID.
        awsSecretAccessKey:
          type: string
          description: AWS access key secret. This is not returned in the API.
        region:
          type: string
          description: AWS region in which the S3 bucket is located.
        s3BucketName:
          type: string
          description: AWS S3 bucket name.
        s3PathPrefix:
          type: string
          description: The path prefix for the uploaded recording. Ex. "recordings/"
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    SmallestAiCredential:
      title: SmallestAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - smallest-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    SpeechmaticsCredential:
      title: SpeechmaticsCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - speechmatics
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    SupabaseCredential:
      title: SupabaseCredential
      required:
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          description: This is for supabase storage.
          enum:
          - supabase
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/SupabaseBucketPlan'
    TavusCredential:
      title: TavusCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - tavus
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    TogetherAiCredential:
      title: TogetherAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - together-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    TrieveCredential:
      title: TrieveCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - trieve
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    TwilioCredential:
      title: TwilioCredential
      required:
      - accountSid
      - authToken
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - twilio
        authToken:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        accountSid:
          type: string
    VonageCredential:
      title: VonageCredential
      required:
      - apiKey
      - apiSecret
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      - vonageApplicationId
      - vonageApplicationPrivateKey
      type: object
      properties:
        vonageApplicationPrivateKey:
          type: string
          description: This is not returned in the API.
        provider:
          type: string
          enum:
          - vonage
        apiSecret:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        vonageApplicationId:
          type: string
          description: |-
            This is the Vonage Application ID for the credential.

            Only relevant for Vonage credentials.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        apiKey:
          type: string
    WebhookCredential:
      title: WebhookCredential
      required:
      - authenticationPlan
      - authenticationSession
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - webhook
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        authenticationSession:
          $ref: '#/components/schemas/Oauth2AuthenticationSession'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    XAiCredential:
      title: XAiCredential
      required:
      - apiKey
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          description: "This is the api key for Grok in XAi's console. Get it from here: https://console.x.ai"
          enum:
          - xai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GoogleCalendarOAuth2ClientCredential:
      title: GoogleCalendarOAuth2ClientCredential
      required:
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - google.calendar.oauth2-client
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GoogleCalendarOAuth2AuthorizationCredential:
      title: GoogleCalendarOAuth2AuthorizationCredential
      required:
      - authorizationId
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - google.calendar.oauth2-authorization
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    GoogleSheetsOAuth2AuthorizationCredential:
      title: GoogleSheetsOAuth2AuthorizationCredential
      required:
      - authorizationId
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - google.sheets.oauth2-authorization
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    SlackOAuth2AuthorizationCredential:
      title: SlackOAuth2AuthorizationCredential
      required:
      - authorizationId
      - createdAt
      - id
      - orgId
      - provider
      - updatedAt
      type: object
      properties:
        provider:
          type: string
          enum:
          - slack.oauth2-authorization
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: This is the unique identifier for the org that this credential belongs to.
        createdAt:
          type: string
          description: This is the ISO 8601 date-time string of when the credential was created.
          format: date-time
        updatedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the assistant was last updated.
          format: date-time
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateCerebrasCredentialDto:
      title: CreateCerebrasCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateGoogleCredentialDto:
      title: CreateGoogleCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateHumeCredentialDto:
      title: CreateHumeCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateInflectionAiCredentialDto:
      title: CreateInflectionAiCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateMistralCredentialDto:
      title: CreateMistralCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateNeuphonicCredentialDto:
      title: CreateNeuphonicCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateSpeechmaticsCredentialDto:
      title: CreateSpeechmaticsCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CreateTrieveCredentialDto:
      title: CreateTrieveCredentialDto
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateAnthropicCredentialDto:
      title: UpdateAnthropicCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateAnyscaleCredentialDto:
      title: UpdateAnyscaleCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateAssemblyAiCredentialDto:
      title: UpdateAssemblyAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateAzureCredentialDtoService:
      title: UpdateAzureCredentialDtoService
      type: string
      description: This is the service being used in Azure.
      enum:
      - speech
      - blob_storage
    UpdateAzureCredentialDtoRegion:
      title: UpdateAzureCredentialDtoRegion
      type: string
      description: This is the region of the Azure resource.
      enum:
      - australia
      - canadaeast
      - canadacentral
      - eastus2
      - eastus
      - france
      - india
      - japaneast
      - japanwest
      - uaenorth
      - northcentralus
      - norway
      - southcentralus
      - swedencentral
      - switzerland
      - uk
      - westus
      - westus3
    UpdateAzureCredentialDto:
      title: UpdateAzureCredentialDto
      type: object
      properties:
        service:
          $ref: '#/components/schemas/UpdateAzureCredentialDtoService'
        region:
          $ref: '#/components/schemas/UpdateAzureCredentialDtoRegion'
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/AzureBlobStorageBucketPlan'
    UpdateAzureOpenAiCredentialDtoRegion:
      title: UpdateAzureOpenAiCredentialDtoRegion
      type: string
      enum:
      - australia
      - canadaeast
      - canadacentral
      - eastus2
      - eastus
      - france
      - india
      - japaneast
      - japanwest
      - uaenorth
      - northcentralus
      - norway
      - southcentralus
      - swedencentral
      - switzerland
      - uk
      - westus
      - westus3
    UpdateAzureOpenAiCredentialDtoModelsItem:
      title: UpdateAzureOpenAiCredentialDtoModelsItem
      type: string
      enum:
      - gpt-4o-2024-11-20
      - gpt-4o-2024-08-06
      - gpt-4o-mini-2024-07-18
      - gpt-4o-2024-05-13
      - gpt-4-turbo-2024-04-09
      - gpt-4-0125-preview
      - gpt-4-1106-preview
      - gpt-4-0613
      - gpt-35-turbo-0125
      - gpt-35-turbo-1106
    UpdateAzureOpenAiCredentialDto:
      title: UpdateAzureOpenAiCredentialDto
      type: object
      properties:
        region:
          $ref: '#/components/schemas/UpdateAzureOpenAiCredentialDtoRegion'
        models:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateAzureOpenAiCredentialDtoModelsItem'
        openAIKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        ocpApimSubscriptionKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        openAIEndpoint:
          type: string
          nullable: true
    UpdateByoSipTrunkCredentialDto:
      title: UpdateByoSipTrunkCredentialDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        gateways:
          type: array
          description: This is the list of SIP trunk's gateways.
          nullable: true
          items:
            $ref: '#/components/schemas/SipTrunkGateway'
        outboundAuthenticationPlan:
          $ref: '#/components/schemas/SipTrunkOutboundAuthenticationPlan'
        outboundLeadingPlusEnabled:
          type: boolean
          description: |-
            This ensures the outbound origination attempts have a leading plus. Defaults to false to match conventional telecom behavior.

            Usage:
            - Vonage/Twilio requires leading plus for all outbound calls. Set this to true.

            @default false
          nullable: true
        techPrefix:
          type: string
          description: This can be used to configure the tech prefix on outbound calls. This is an advanced property.
          nullable: true
        sipDiversionHeader:
          type: string
          description: This can be used to enable the SIP diversion header for authenticating the calling number if the SIP trunk supports it. This is an advanced property.
          nullable: true
        sbcConfiguration:
          $ref: '#/components/schemas/SbcConfiguration'
    UpdateCartesiaCredentialDto:
      title: UpdateCartesiaCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateCerebrasCredentialDto:
      title: UpdateCerebrasCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateCloudflareCredentialDto:
      title: UpdateCloudflareCredentialDto
      type: object
      properties:
        accountId:
          type: string
          description: Cloudflare Account Id.
          nullable: true
        apiKey:
          type: string
          description: Cloudflare API Key / Token.
          nullable: true
        accountEmail:
          type: string
          description: Cloudflare Account Email.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/CloudflareR2BucketPlan'
    UpdateCustomLlmCredentialDto:
      title: UpdateCustomLlmCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateDeepgramCredentialDto:
      title: UpdateDeepgramCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        apiUrl:
          type: string
          description: This can be used to point to an onprem Deepgram instance. Defaults to api.deepgram.com.
          nullable: true
    UpdateDeepInfraCredentialDto:
      title: UpdateDeepInfraCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateDeepSeekCredentialDto:
      title: UpdateDeepSeekCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateElevenLabsCredentialDto:
      title: UpdateElevenLabsCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        provider:
          type: string
          nullable: true
          enum:
          - 11labs
    UpdateGcpCredentialDto:
      title: UpdateGcpCredentialDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        gcpKey:
          $ref: '#/components/schemas/GcpKey'
        bucketPlan:
          $ref: '#/components/schemas/BucketPlan'
    UpdateGladiaCredentialDto:
      title: UpdateGladiaCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateGoHighLevelCredentialDto:
      title: UpdateGoHighLevelCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateGoogleCredentialDto:
      title: UpdateGoogleCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateGroqCredentialDto:
      title: UpdateGroqCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateHumeCredentialDto:
      title: UpdateHumeCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateInflectionAiCredentialDto:
      title: UpdateInflectionAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateLangfuseCredentialDto:
      title: UpdateLangfuseCredentialDto
      type: object
      properties:
        publicKey:
          type: string
          description: "The public key for Langfuse project. Eg: pk-lf-..."
          nullable: true
        apiKey:
          type: string
          description: "The secret key for Langfuse project. Eg: sk-lf-... .This is not returned in the API."
          nullable: true
        apiUrl:
          type: string
          description: "The host URL for Langfuse project. Eg: https://cloud.langfuse.com"
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateLmntCredentialDto:
      title: UpdateLmntCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateMakeCredentialDto:
      title: UpdateMakeCredentialDto
      type: object
      properties:
        teamId:
          type: string
          description: Team ID
          nullable: true
        region:
          type: string
          description: "Region of your application. For example: eu1, eu2, us1, us2"
          nullable: true
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateMistralCredentialDto:
      title: UpdateMistralCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateNeuphonicCredentialDto:
      title: UpdateNeuphonicCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateOpenAiCredentialDto:
      title: UpdateOpenAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateOpenRouterCredentialDto:
      title: UpdateOpenRouterCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdatePerplexityAiCredentialDto:
      title: UpdatePerplexityAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdatePlayHtCredentialDto:
      title: UpdatePlayHtCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        userId:
          type: string
          nullable: true
    UpdateRimeAiCredentialDto:
      title: UpdateRimeAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateRunpodCredentialDto:
      title: UpdateRunpodCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateS3CredentialDto:
      title: UpdateS3CredentialDto
      type: object
      properties:
        awsAccessKeyId:
          type: string
          description: AWS access key ID.
          nullable: true
        awsSecretAccessKey:
          type: string
          description: AWS access key secret. This is not returned in the API.
          nullable: true
        region:
          type: string
          description: AWS region in which the S3 bucket is located.
          nullable: true
        s3BucketName:
          type: string
          description: AWS S3 bucket name.
          nullable: true
        s3PathPrefix:
          type: string
          description: The path prefix for the uploaded recording. Ex. "recordings/"
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateSmallestAiCredentialDto:
      title: UpdateSmallestAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateSpeechmaticsCredentialDto:
      title: UpdateSpeechmaticsCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateSupabaseCredentialDto:
      title: UpdateSupabaseCredentialDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        bucketPlan:
          $ref: '#/components/schemas/SupabaseBucketPlan'
    UpdateTavusCredentialDto:
      title: UpdateTavusCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateTogetherAiCredentialDto:
      title: UpdateTogetherAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateTrieveCredentialDto:
      title: UpdateTrieveCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateTwilioCredentialDto:
      title: UpdateTwilioCredentialDto
      type: object
      properties:
        authToken:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        accountSid:
          type: string
          nullable: true
    UpdateVonageCredentialDto:
      title: UpdateVonageCredentialDto
      type: object
      properties:
        apiSecret:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
        apiKey:
          type: string
          nullable: true
    UpdateWebhookCredentialDto:
      title: UpdateWebhookCredentialDto
      type: object
      properties:
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateXAiCredentialDto:
      title: UpdateXAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateGoogleCalendarOAuth2ClientCredentialDto:
      title: UpdateGoogleCalendarOAuth2ClientCredentialDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateGoogleCalendarOAuth2AuthorizationCredentialDto:
      title: UpdateGoogleCalendarOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateGoogleSheetsOAuth2AuthorizationCredentialDto:
      title: UpdateGoogleSheetsOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    UpdateSlackOAuth2AuthorizationCredentialDto:
      title: UpdateSlackOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
          nullable: true
        name:
          type: string
          description: This is the name of credential. This is just for your reference.
          nullable: true
    CredentialSessionResponse:
      title: CredentialSessionResponse
      required:
      - sessionToken
      type: object
      properties:
        sessionToken:
          type: string
    CredentialEndUser:
      title: CredentialEndUser
      required:
      - endUserId
      - organizationId
      type: object
      properties:
        endUserId:
          type: string
        organizationId:
          type: string
    CredentialSessionError:
      title: CredentialSessionError
      required:
      - description
      - type
      type: object
      properties:
        type:
          type: string
        description:
          type: string
    CredentialWebhookDtoType:
      title: CredentialWebhookDtoType
      type: string
      enum:
      - auth
      - sync
      - forward
    CredentialWebhookDtoOperation:
      title: CredentialWebhookDtoOperation
      type: string
      enum:
      - creation
      - override
      - refresh
    CredentialWebhookDtoAuthMode:
      title: CredentialWebhookDtoAuthMode
      type: string
      enum:
      - OAUTH2
      - API_KEY
      - BASIC
    CredentialWebhookDto:
      title: CredentialWebhookDto
      required:
      - authMode
      - connectionId
      - endUser
      - environment
      - from
      - operation
      - provider
      - providerConfigKey
      - success
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CredentialWebhookDtoType'
        operation:
          $ref: '#/components/schemas/CredentialWebhookDtoOperation'
        from:
          type: string
        connectionId:
          type: string
        authMode:
          $ref: '#/components/schemas/CredentialWebhookDtoAuthMode'
        providerConfigKey:
          type: string
        provider:
          type: string
        environment:
          type: string
        success:
          type: boolean
        endUser:
          $ref: '#/components/schemas/CredentialEndUser'
        error:
          $ref: '#/components/schemas/CredentialSessionError'
    CredentialActionRequest:
      title: CredentialActionRequest
      required:
      - action_name
      - input
      type: object
      properties:
        action_name:
          type: string
        input:
          type: object
          additionalProperties: true
    CredentialSessionDtoProvider:
      title: CredentialSessionDtoProvider
      type: string
      description: The type of credential to generate a session for. Only Nango user-facing providers are supported.
      enum:
      - google.calendar.oauth2-client
      - google.calendar.oauth2-authorization
      - google.sheets.oauth2-authorization
      - slack.oauth2-authorization
    CredentialSessionDto:
      title: CredentialSessionDto
      required:
      - provider
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/CredentialSessionDtoProvider'
    ToolTemplateSetup:
      title: ToolTemplateSetup
      required:
      - title
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        videoUrl:
          type: string
          nullable: true
        docsUrl:
          type: string
          nullable: true
    MakeToolProviderDetails:
      title: MakeToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          description: This is the Template URL or the Snapshot URL corresponding to the Template.
          nullable: true
        setupInstructions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
        scenarioId:
          type: number
          format: double
          nullable: true
        scenarioName:
          type: string
          nullable: true
        triggerHookId:
          type: number
          format: double
          nullable: true
        triggerHookName:
          type: string
          nullable: true
    GhlToolProviderDetails:
      title: GhlToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          description: This is the Template URL or the Snapshot URL corresponding to the Template.
          nullable: true
        setupInstructions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
        workflowId:
          type: string
          nullable: true
        workflowName:
          type: string
          nullable: true
        webhookHookId:
          type: string
          nullable: true
        webhookHookName:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
    FunctionToolProviderDetails:
      title: FunctionToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          description: This is the Template URL or the Snapshot URL corresponding to the Template.
          nullable: true
        setupInstructions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
    GoogleCalendarCreateEventToolProviderDetails:
      title: GoogleCalendarCreateEventToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          description: This is the Template URL or the Snapshot URL corresponding to the Template.
          nullable: true
        setupInstructions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
    GoogleSheetsRowAppendToolProviderDetails:
      title: GoogleSheetsRowAppendToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          description: This is the Template URL or the Snapshot URL corresponding to the Template.
          nullable: true
        setupInstructions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
    ToolTemplateMetadata:
      title: ToolTemplateMetadata
      type: object
      properties:
        collectionType:
          type: string
          nullable: true
        collectionId:
          type: string
          nullable: true
        collectionName:
          type: string
          nullable: true
    CreateToolTemplateDtoDetails:
      title: CreateToolTemplateDtoDetails
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
    CreateToolTemplateDtoProviderDetails:
      title: CreateToolTemplateDtoProviderDetails
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendToolProviderDetails'
    CreateToolTemplateDtoVisibility:
      title: CreateToolTemplateDtoVisibility
      type: string
      enum:
      - public
      - private
    CreateToolTemplateDtoProvider:
      title: CreateToolTemplateDtoProvider
      type: string
      enum:
      - make
      - gohighlevel
      - function
    CreateToolTemplateDto:
      title: CreateToolTemplateDto
      required:
      - type
      type: object
      properties:
        details:
          $ref: '#/components/schemas/CreateToolTemplateDtoDetails'
        providerDetails:
          $ref: '#/components/schemas/CreateToolTemplateDtoProviderDetails'
        metadata:
          $ref: '#/components/schemas/ToolTemplateMetadata'
        visibility:
          $ref: '#/components/schemas/CreateToolTemplateDtoVisibility'
        type:
          type: string
          enum:
          - tool
        name:
          type: string
          description: The name of the template. This is just for your own reference.
          nullable: true
        provider:
          $ref: '#/components/schemas/CreateToolTemplateDtoProvider'
    TemplateDetails:
      title: TemplateDetails
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
    TemplateProviderDetails:
      title: TemplateProviderDetails
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendToolProviderDetails'
    TemplateVisibility:
      title: TemplateVisibility
      type: string
      enum:
      - public
      - private
    TemplateProvider:
      title: TemplateProvider
      type: string
      enum:
      - make
      - gohighlevel
      - function
    Template:
      title: Template
      required:
      - createdAt
      - id
      - orgId
      - type
      - updatedAt
      type: object
      properties:
        details:
          $ref: '#/components/schemas/TemplateDetails'
        providerDetails:
          $ref: '#/components/schemas/TemplateProviderDetails'
        metadata:
          $ref: '#/components/schemas/ToolTemplateMetadata'
        visibility:
          $ref: '#/components/schemas/TemplateVisibility'
        type:
          type: string
          enum:
          - tool
        name:
          type: string
          description: The name of the template. This is just for your own reference.
          nullable: true
        provider:
          $ref: '#/components/schemas/TemplateProvider'
        id:
          type: string
          description: The unique identifier for the template.
        orgId:
          type: string
          description: The unique identifier for the organization that this template belongs to.
        createdAt:
          type: string
          description: The ISO 8601 date-time string of when the template was created.
          format: date-time
        updatedAt:
          type: string
          description: The ISO 8601 date-time string of when the template was last updated.
          format: date-time
    UpdateToolTemplateDtoDetails:
      title: UpdateToolTemplateDtoDetails
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - dtmf
        - $ref: '#/components/schemas/CreateDtmfToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - endCall
        - $ref: '#/components/schemas/CreateEndCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail
        - $ref: '#/components/schemas/CreateVoicemailToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/CreateFunctionToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/CreateGhlToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/CreateMakeToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transferCall
        - $ref: '#/components/schemas/CreateTransferCallToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
    UpdateToolTemplateDtoProviderDetails:
      title: UpdateToolTemplateDtoProviderDetails
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventToolProviderDetails'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.sheets.row.append
        - $ref: '#/components/schemas/GoogleSheetsRowAppendToolProviderDetails'
    UpdateToolTemplateDtoVisibility:
      title: UpdateToolTemplateDtoVisibility
      type: string
      enum:
      - public
      - private
    UpdateToolTemplateDtoProvider:
      title: UpdateToolTemplateDtoProvider
      type: string
      enum:
      - make
      - gohighlevel
      - function
    UpdateToolTemplateDto:
      title: UpdateToolTemplateDto
      required:
      - type
      type: object
      properties:
        details:
          $ref: '#/components/schemas/UpdateToolTemplateDtoDetails'
        providerDetails:
          $ref: '#/components/schemas/UpdateToolTemplateDtoProviderDetails'
        metadata:
          $ref: '#/components/schemas/ToolTemplateMetadata'
        visibility:
          $ref: '#/components/schemas/UpdateToolTemplateDtoVisibility'
        type:
          type: string
          enum:
          - tool
        name:
          type: string
          description: The name of the template. This is just for your own reference.
          nullable: true
        provider:
          $ref: '#/components/schemas/UpdateToolTemplateDtoProvider'
    VoiceLibraryGender:
      title: VoiceLibraryGender
      type: string
      description: The gender of the voice.
      enum:
      - male
      - female
    VoiceLibrary:
      title: VoiceLibrary
      required:
      - createdAt
      - id
      - isDeleted
      - isPublic
      - orgId
      - updatedAt
      type: object
      properties:
        provider:
          type: object
          additionalProperties: true
          description: This is the voice provider that will be used.
          nullable: true
        providerId:
          type: string
          description: The ID of the voice provided by the provider.
          nullable: true
        slug:
          type: string
          description: The unique slug of the voice.
          nullable: true
        name:
          type: string
          description: The name of the voice.
          nullable: true
        language:
          type: string
          description: The language of the voice.
          nullable: true
        languageCode:
          type: string
          description: The language code of the voice.
          nullable: true
        model:
          type: string
          description: The model of the voice.
          nullable: true
        supportedModels:
          type: string
          description: The supported models of the voice.
          nullable: true
        gender:
          $ref: '#/components/schemas/VoiceLibraryGender'
        accent:
          type: string
          description: The accent of the voice.
          nullable: true
        previewUrl:
          type: string
          description: The preview URL of the voice.
          nullable: true
        description:
          type: string
          description: The description of the voice.
          nullable: true
        credentialId:
          type: string
          description: The credential ID of the voice.
          nullable: true
        id:
          type: string
          description: The unique identifier for the voice library.
        orgId:
          type: string
          description: The unique identifier for the organization that this voice library belongs to.
        isPublic:
          type: boolean
          description: The Public voice is shared accross all the organizations.
        isDeleted:
          type: boolean
          description: The deletion status of the voice.
        createdAt:
          type: string
          description: The ISO 8601 date-time string of when the voice library was created.
          format: date-time
        updatedAt:
          type: string
          description: The ISO 8601 date-time string of when the voice library was last updated.
          format: date-time
    SyncVoiceLibraryDtoProvidersItem:
      title: SyncVoiceLibraryDtoProvidersItem
      type: string
      enum:
      - vapi
      - 11labs
      - azure
      - cartesia
      - custom-voice
      - deepgram
      - hume
      - lmnt
      - neuphonic
      - openai
      - playht
      - rime-ai
      - smallest-ai
      - tavus
      - sesame
    SyncVoiceLibraryDto:
      title: SyncVoiceLibraryDto
      type: object
      properties:
        providers:
          type: array
          description: List of providers you want to sync.
          nullable: true
          items:
            $ref: '#/components/schemas/SyncVoiceLibraryDtoProvidersItem'
    VoiceLibraryVoiceResponse:
      title: VoiceLibraryVoiceResponse
      required:
      - name
      - voiceId
      type: object
      properties:
        voiceId:
          type: string
        name:
          type: string
        publicOwnerId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        age:
          type: object
          additionalProperties: true
          nullable: true
        accent:
          type: string
          nullable: true
    AddVoiceToProviderDto:
      title: AddVoiceToProviderDto
      required:
      - name
      - ownerId
      - voiceId
      type: object
      properties:
        ownerId:
          type: string
          description: This is the owner_id of your shared voice which you want to add to your provider Account from Provider Voice Library
        voiceId:
          type: string
          description: This is the voice_id of the shared voice which you want to add to your provider Account from Provider Voice Library
        name:
          type: string
          description: This is the new name of the voice which you want to have once you have added voice to your provider Account from Provider Voice Library
    CloneVoiceDto:
      title: CloneVoiceDto
      required:
      - files
      - name
      type: object
      properties:
        name:
          type: string
          description: This is the name of the cloned voice in the provider account.
        description:
          type: string
          description: This is the description of your cloned voice.
          nullable: true
        labels:
          type: string
          description: Serialized labels dictionary for the voice.
          nullable: true
        files:
          type: array
          description: These are the files you want to use to clone your voice. Only Audio files are supported.
          items:
            type: string
    ClientMessageWorkflowNodeStarted:
      title: ClientMessageWorkflowNodeStarted
      required:
      - node
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "workflow.node.started" is sent when the active node changes.
          enum:
          - workflow.node.started
        node:
          type: object
          additionalProperties: true
          description: This is the active node.
    ClientMessageConversationUpdateMessagesItem:
      title: ClientMessageConversationUpdateMessagesItem
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/BotMessage'
      - $ref: '#/components/schemas/ToolCallMessage'
      - $ref: '#/components/schemas/ToolCallResultMessage'
    ClientMessageConversationUpdate:
      title: ClientMessageConversationUpdate
      required:
      - messagesOpenAIFormatted
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "conversation-update" is sent when an update is committed to the conversation history.
          enum:
          - conversation-update
        messages:
          type: array
          description: This is the most up-to-date conversation history at the time the message is sent.
          nullable: true
          items:
            $ref: '#/components/schemas/ClientMessageConversationUpdateMessagesItem'
        messagesOpenAIFormatted:
          type: array
          description: "This is the most up-to-date conversation history at the time the message is sent, formatted for OpenAI."
          items:
            $ref: '#/components/schemas/OpenAiMessage'
    ClientMessageHang:
      title: ClientMessageHang
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: |-
            This is the type of the message. "hang" is sent when the assistant is hanging due to a delay. The delay can be caused by many factors, such as:
            - the model is too slow to respond
            - the voice is too slow to respond
            - the tool call is still waiting for a response from your server
            - etc.
          enum:
          - hang
    ClientMessageMetadata:
      title: ClientMessageMetadata
      required:
      - metadata
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "metadata" is sent to forward metadata to the client.
          enum:
          - metadata
        metadata:
          type: string
          description: This is the metadata content
    ClientMessageModelOutput:
      title: ClientMessageModelOutput
      required:
      - output
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "model-output" is sent as the model outputs tokens.
          enum:
          - model-output
        output:
          type: object
          additionalProperties: true
          description: This is the output of the model. It can be a token or tool call.
    ClientMessageSpeechUpdateStatus:
      title: ClientMessageSpeechUpdateStatus
      type: string
      description: This is the status of the speech update.
      enum:
      - started
      - stopped
    ClientMessageSpeechUpdateRole:
      title: ClientMessageSpeechUpdateRole
      type: string
      description: This is the role which the speech update is for.
      enum:
      - assistant
      - user
    ClientMessageSpeechUpdate:
      title: ClientMessageSpeechUpdate
      required:
      - role
      - status
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "speech-update" is sent whenever assistant or user start or stop speaking.
          enum:
          - speech-update
        status:
          $ref: '#/components/schemas/ClientMessageSpeechUpdateStatus'
        role:
          $ref: '#/components/schemas/ClientMessageSpeechUpdateRole'
        turn:
          type: number
          description: This is the turn number of the speech update (0-indexed).
          format: double
          nullable: true
    ClientMessageTranscriptType:
      title: ClientMessageTranscriptType
      type: string
      description: This is the type of the message. "transcript" is sent as transcriber outputs partial or final transcript.
      enum:
      - transcript
      - "transcript[transcriptType='final']"
    ClientMessageTranscriptRole:
      title: ClientMessageTranscriptRole
      type: string
      description: This is the role for which the transcript is for.
      enum:
      - assistant
      - user
    ClientMessageTranscriptTranscriptType:
      title: ClientMessageTranscriptTranscriptType
      type: string
      description: This is the type of the transcript.
      enum:
      - partial
      - final
    ClientMessageTranscript:
      title: ClientMessageTranscript
      required:
      - role
      - transcript
      - transcriptType
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientMessageTranscriptType'
        role:
          $ref: '#/components/schemas/ClientMessageTranscriptRole'
        transcriptType:
          $ref: '#/components/schemas/ClientMessageTranscriptTranscriptType'
        transcript:
          type: string
          description: This is the transcript content.
    ToolCallFunction:
      title: ToolCallFunction
      required:
      - arguments
      - name
      type: object
      properties:
        name:
          type: string
          description: This is the name of the function the model called.
        arguments:
          type: object
          additionalProperties: true
          description: These are the arguments that the function was called with.
    ToolCall:
      title: ToolCall
      required:
      - function
      - id
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of tool the model called.
          enum:
          - function
        function:
          $ref: '#/components/schemas/ToolCallFunction'
        id:
          type: string
          description: This is the unique identifier for the tool call.
    ClientMessageToolCallsToolWithToolCallListItem:
      title: ClientMessageToolCallsToolWithToolCallListItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/BashToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/ComputerToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/TextEditorToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventToolWithToolCall'
    ClientMessageToolCalls:
      title: ClientMessageToolCalls
      required:
      - toolCallList
      - toolWithToolCallList
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "tool-calls" is sent to call a tool.
          nullable: true
          enum:
          - tool-calls
        toolWithToolCallList:
          type: array
          description: This is the list of tools calls that the model is requesting along with the original tool configuration.
          items:
            $ref: '#/components/schemas/ClientMessageToolCallsToolWithToolCallListItem'
        toolCallList:
          type: array
          description: This is the list of tool calls that the model is requesting.
          items:
            $ref: '#/components/schemas/ToolCall'
    ClientMessageToolCallsResult:
      title: ClientMessageToolCallsResult
      required:
      - toolCallResult
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "tool-calls-result" is sent to forward the result of a tool call to the client.
          enum:
          - tool-calls-result
        toolCallResult:
          type: object
          additionalProperties: true
          description: This is the result of the tool call.
    ClientMessageTransferUpdateDestination:
      title: ClientMessageTransferUpdateDestination
      description: This is the destination of the transfer.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - assistant
        - $ref: '#/components/schemas/TransferDestinationAssistant'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - step
        - $ref: '#/components/schemas/TransferDestinationStep'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ClientMessageTransferUpdate:
      title: ClientMessageTransferUpdate
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "transfer-update" is sent whenever a transfer happens.
          enum:
          - transfer-update
        destination:
          $ref: '#/components/schemas/ClientMessageTransferUpdateDestination'
        toAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        fromAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        toStepRecord:
          type: object
          additionalProperties: true
          description: This is the step that the conversation moved to.
          nullable: true
        fromStepRecord:
          type: object
          additionalProperties: true
          description: This is the step that the conversation moved from. =
          nullable: true
    ClientMessageUserInterrupted:
      title: ClientMessageUserInterrupted
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "user-interrupted" is sent when the user interrupts the assistant.
          enum:
          - user-interrupted
    ClientMessageLanguageChangeDetected:
      title: ClientMessageLanguageChangeDetected
      required:
      - language
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "language-change-detected" is sent when the transcriber is automatically switched based on the detected language.
          enum:
          - language-change-detected
        language:
          type: string
          description: This is the language the transcriber is switched to.
    ClientMessageVoiceInput:
      title: ClientMessageVoiceInput
      required:
      - input
      - type
      type: object
      properties:
        type:
          type: string
          description: This is the type of the message. "voice-input" is sent when a generation is requested from voice provider.
          enum:
          - voice-input
        input:
          type: string
          description: This is the voice input content
    ClientMessageMessage:
      title: ClientMessageMessage
      description: These are all the messages that can be sent to the client-side SDKs during the call. Configure the messages you'd like to receive in `assistant.clientMessages`.
      oneOf:
      - $ref: '#/components/schemas/ClientMessageWorkflowNodeStarted'
      - $ref: '#/components/schemas/ClientMessageConversationUpdate'
      - $ref: '#/components/schemas/ClientMessageHang'
      - $ref: '#/components/schemas/ClientMessageMetadata'
      - $ref: '#/components/schemas/ClientMessageModelOutput'
      - $ref: '#/components/schemas/ClientMessageSpeechUpdate'
      - $ref: '#/components/schemas/ClientMessageTranscript'
      - $ref: '#/components/schemas/ClientMessageToolCalls'
      - $ref: '#/components/schemas/ClientMessageToolCallsResult'
      - $ref: '#/components/schemas/ClientMessageTransferUpdate'
      - $ref: '#/components/schemas/ClientMessageUserInterrupted'
      - $ref: '#/components/schemas/ClientMessageLanguageChangeDetected'
      - $ref: '#/components/schemas/ClientMessageVoiceInput'
    ClientMessage:
      title: ClientMessage
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ClientMessageMessage'
    ServerMessageAssistantRequestPhoneNumber:
      title: ServerMessageAssistantRequestPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageAssistantRequest:
      title: ServerMessageAssistantRequest
      required:
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageAssistantRequestPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "assistant-request" is sent to fetch assistant configuration for an incoming call.
          enum:
          - assistant-request
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageConversationUpdatePhoneNumber:
      title: ServerMessageConversationUpdatePhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageConversationUpdateMessagesItem:
      title: ServerMessageConversationUpdateMessagesItem
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/BotMessage'
      - $ref: '#/components/schemas/ToolCallMessage'
      - $ref: '#/components/schemas/ToolCallResultMessage'
    ServerMessageConversationUpdate:
      title: ServerMessageConversationUpdate
      required:
      - messagesOpenAIFormatted
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageConversationUpdatePhoneNumber'
        type:
          type: string
          description: This is the type of the message. "conversation-update" is sent when an update is committed to the conversation history.
          enum:
          - conversation-update
        messages:
          type: array
          description: This is the most up-to-date conversation history at the time the message is sent.
          nullable: true
          items:
            $ref: '#/components/schemas/ServerMessageConversationUpdateMessagesItem'
        messagesOpenAIFormatted:
          type: array
          description: "This is the most up-to-date conversation history at the time the message is sent, formatted for OpenAI."
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageEndOfCallReportPhoneNumber:
      title: ServerMessageEndOfCallReportPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageEndOfCallReportEndedReason:
      title: ServerMessageEndOfCallReportEndedReason
      type: string
      description: This is the reason the call ended. This can also be found at `call.endedReason` on GET /call/:id.
      enum:
      - call-start-error-neither-assistant-nor-server-set
      - assistant-request-failed
      - assistant-request-returned-error
      - assistant-request-returned-unspeakable-error
      - assistant-request-returned-invalid-assistant
      - assistant-request-returned-no-assistant
      - assistant-request-returned-forwarding-phone-number
      - call.start.error-get-org
      - call.start.error-get-subscription
      - call.start.error-get-assistant
      - call.start.error-get-phone-number
      - call.start.error-get-customer
      - call.start.error-get-resources-validation
      - call.start.error-vapi-number-international
      - call.start.error-vapi-number-outbound-daily-limit
      - call.start.error-get-transport
      - assistant-not-valid
      - database-error
      - assistant-not-found
      - pipeline-error-openai-voice-failed
      - pipeline-error-cartesia-voice-failed
      - pipeline-error-deepgram-voice-failed
      - pipeline-error-eleven-labs-voice-failed
      - pipeline-error-playht-voice-failed
      - pipeline-error-lmnt-voice-failed
      - pipeline-error-azure-voice-failed
      - pipeline-error-rime-ai-voice-failed
      - pipeline-error-smallest-ai-voice-failed
      - pipeline-error-neuphonic-voice-failed
      - pipeline-error-hume-voice-failed
      - pipeline-error-sesame-voice-failed
      - pipeline-error-tavus-video-failed
      - call.in-progress.error-vapifault-openai-voice-failed
      - call.in-progress.error-vapifault-cartesia-voice-failed
      - call.in-progress.error-vapifault-deepgram-voice-failed
      - call.in-progress.error-vapifault-eleven-labs-voice-failed
      - call.in-progress.error-vapifault-playht-voice-failed
      - call.in-progress.error-vapifault-lmnt-voice-failed
      - call.in-progress.error-vapifault-azure-voice-failed
      - call.in-progress.error-vapifault-rime-ai-voice-failed
      - call.in-progress.error-vapifault-smallest-ai-voice-failed
      - call.in-progress.error-vapifault-neuphonic-voice-failed
      - call.in-progress.error-vapifault-hume-voice-failed
      - call.in-progress.error-vapifault-sesame-voice-failed
      - call.in-progress.error-vapifault-tavus-video-failed
      - pipeline-error-vapi-llm-failed
      - pipeline-error-vapi-400-bad-request-validation-failed
      - pipeline-error-vapi-401-unauthorized
      - pipeline-error-vapi-403-model-access-denied
      - pipeline-error-vapi-429-exceeded-quota
      - pipeline-error-vapi-500-server-error
      - pipeline-error-vapi-503-server-overloaded-error
      - call.in-progress.error-vapifault-vapi-llm-failed
      - call.in-progress.error-vapifault-vapi-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-vapi-401-unauthorized
      - call.in-progress.error-vapifault-vapi-403-model-access-denied
      - call.in-progress.error-vapifault-vapi-429-exceeded-quota
      - call.in-progress.error-providerfault-vapi-500-server-error
      - call.in-progress.error-providerfault-vapi-503-server-overloaded-error
      - pipeline-error-deepgram-transcriber-failed
      - call.in-progress.error-vapifault-deepgram-transcriber-failed
      - pipeline-error-gladia-transcriber-failed
      - call.in-progress.error-vapifault-gladia-transcriber-failed
      - pipeline-error-speechmatics-transcriber-failed
      - call.in-progress.error-vapifault-speechmatics-transcriber-failed
      - pipeline-error-assembly-ai-transcriber-failed
      - pipeline-error-assembly-ai-returning-400-insufficent-funds
      - pipeline-error-assembly-ai-returning-400-paid-only-feature
      - pipeline-error-assembly-ai-returning-401-invalid-credentials
      - pipeline-error-assembly-ai-returning-500-invalid-schema
      - pipeline-error-assembly-ai-returning-500-word-boost-parsing-failed
      - call.in-progress.error-vapifault-assembly-ai-transcriber-failed
      - call.in-progress.error-vapifault-assembly-ai-returning-400-insufficent-funds
      - call.in-progress.error-vapifault-assembly-ai-returning-400-paid-only-feature
      - call.in-progress.error-vapifault-assembly-ai-returning-401-invalid-credentials
      - call.in-progress.error-vapifault-assembly-ai-returning-500-invalid-schema
      - call.in-progress.error-vapifault-assembly-ai-returning-500-word-boost-parsing-failed
      - pipeline-error-talkscriber-transcriber-failed
      - call.in-progress.error-vapifault-talkscriber-transcriber-failed
      - pipeline-error-azure-speech-transcriber-failed
      - call.in-progress.error-vapifault-azure-speech-transcriber-failed
      - call.in-progress.error-pipeline-no-available-llm-model
      - worker-shutdown
      - unknown-error
      - vonage-disconnected
      - vonage-failed-to-connect-call
      - vonage-completed
      - phone-call-provider-bypass-enabled-but-no-call-received
      - call.in-progress.error-vapifault-transport-never-connected
      - call.in-progress.error-vapifault-transport-connected-but-call-not-active
      - call.in-progress.error-vapifault-call-started-but-connection-to-transport-missing
      - call.in-progress.error-vapifault-openai-llm-failed
      - call.in-progress.error-vapifault-azure-openai-llm-failed
      - call.in-progress.error-vapifault-groq-llm-failed
      - call.in-progress.error-vapifault-google-llm-failed
      - call.in-progress.error-vapifault-xai-llm-failed
      - call.in-progress.error-vapifault-mistral-llm-failed
      - call.in-progress.error-vapifault-inflection-ai-llm-failed
      - call.in-progress.error-vapifault-cerebras-llm-failed
      - call.in-progress.error-vapifault-deep-seek-llm-failed
      - pipeline-error-openai-400-bad-request-validation-failed
      - pipeline-error-openai-401-unauthorized
      - pipeline-error-openai-401-incorrect-api-key
      - pipeline-error-openai-401-account-not-in-organization
      - pipeline-error-openai-403-model-access-denied
      - pipeline-error-openai-429-exceeded-quota
      - pipeline-error-openai-429-rate-limit-reached
      - pipeline-error-openai-500-server-error
      - pipeline-error-openai-503-server-overloaded-error
      - pipeline-error-openai-llm-failed
      - call.in-progress.error-vapifault-openai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-openai-401-unauthorized
      - call.in-progress.error-vapifault-openai-401-incorrect-api-key
      - call.in-progress.error-vapifault-openai-401-account-not-in-organization
      - call.in-progress.error-vapifault-openai-403-model-access-denied
      - call.in-progress.error-vapifault-openai-429-exceeded-quota
      - call.in-progress.error-vapifault-openai-429-rate-limit-reached
      - call.in-progress.error-providerfault-openai-500-server-error
      - call.in-progress.error-providerfault-openai-503-server-overloaded-error
      - pipeline-error-azure-openai-400-bad-request-validation-failed
      - pipeline-error-azure-openai-401-unauthorized
      - pipeline-error-azure-openai-403-model-access-denied
      - pipeline-error-azure-openai-429-exceeded-quota
      - pipeline-error-azure-openai-500-server-error
      - pipeline-error-azure-openai-503-server-overloaded-error
      - pipeline-error-azure-openai-llm-failed
      - call.in-progress.error-vapifault-azure-openai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-azure-openai-401-unauthorized
      - call.in-progress.error-vapifault-azure-openai-403-model-access-denied
      - call.in-progress.error-vapifault-azure-openai-429-exceeded-quota
      - call.in-progress.error-providerfault-azure-openai-500-server-error
      - call.in-progress.error-providerfault-azure-openai-503-server-overloaded-error
      - pipeline-error-google-400-bad-request-validation-failed
      - pipeline-error-google-401-unauthorized
      - pipeline-error-google-403-model-access-denied
      - pipeline-error-google-429-exceeded-quota
      - pipeline-error-google-500-server-error
      - pipeline-error-google-503-server-overloaded-error
      - pipeline-error-google-llm-failed
      - call.in-progress.error-vapifault-google-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-google-401-unauthorized
      - call.in-progress.error-vapifault-google-403-model-access-denied
      - call.in-progress.error-vapifault-google-429-exceeded-quota
      - call.in-progress.error-providerfault-google-500-server-error
      - call.in-progress.error-providerfault-google-503-server-overloaded-error
      - pipeline-error-xai-400-bad-request-validation-failed
      - pipeline-error-xai-401-unauthorized
      - pipeline-error-xai-403-model-access-denied
      - pipeline-error-xai-429-exceeded-quota
      - pipeline-error-xai-500-server-error
      - pipeline-error-xai-503-server-overloaded-error
      - pipeline-error-xai-llm-failed
      - call.in-progress.error-vapifault-xai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-xai-401-unauthorized
      - call.in-progress.error-vapifault-xai-403-model-access-denied
      - call.in-progress.error-vapifault-xai-429-exceeded-quota
      - call.in-progress.error-providerfault-xai-500-server-error
      - call.in-progress.error-providerfault-xai-503-server-overloaded-error
      - pipeline-error-mistral-400-bad-request-validation-failed
      - pipeline-error-mistral-401-unauthorized
      - pipeline-error-mistral-403-model-access-denied
      - pipeline-error-mistral-429-exceeded-quota
      - pipeline-error-mistral-500-server-error
      - pipeline-error-mistral-503-server-overloaded-error
      - pipeline-error-mistral-llm-failed
      - call.in-progress.error-vapifault-mistral-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-mistral-401-unauthorized
      - call.in-progress.error-vapifault-mistral-403-model-access-denied
      - call.in-progress.error-vapifault-mistral-429-exceeded-quota
      - call.in-progress.error-providerfault-mistral-500-server-error
      - call.in-progress.error-providerfault-mistral-503-server-overloaded-error
      - pipeline-error-inflection-ai-400-bad-request-validation-failed
      - pipeline-error-inflection-ai-401-unauthorized
      - pipeline-error-inflection-ai-403-model-access-denied
      - pipeline-error-inflection-ai-429-exceeded-quota
      - pipeline-error-inflection-ai-500-server-error
      - pipeline-error-inflection-ai-503-server-overloaded-error
      - pipeline-error-inflection-ai-llm-failed
      - call.in-progress.error-vapifault-inflection-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-inflection-ai-401-unauthorized
      - call.in-progress.error-vapifault-inflection-ai-403-model-access-denied
      - call.in-progress.error-vapifault-inflection-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-inflection-ai-500-server-error
      - call.in-progress.error-providerfault-inflection-ai-503-server-overloaded-error
      - pipeline-error-deep-seek-400-bad-request-validation-failed
      - pipeline-error-deep-seek-401-unauthorized
      - pipeline-error-deep-seek-403-model-access-denied
      - pipeline-error-deep-seek-429-exceeded-quota
      - pipeline-error-deep-seek-500-server-error
      - pipeline-error-deep-seek-503-server-overloaded-error
      - pipeline-error-deep-seek-llm-failed
      - call.in-progress.error-vapifault-deep-seek-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-deep-seek-401-unauthorized
      - call.in-progress.error-vapifault-deep-seek-403-model-access-denied
      - call.in-progress.error-vapifault-deep-seek-429-exceeded-quota
      - call.in-progress.error-providerfault-deep-seek-500-server-error
      - call.in-progress.error-providerfault-deep-seek-503-server-overloaded-error
      - pipeline-error-groq-400-bad-request-validation-failed
      - pipeline-error-groq-401-unauthorized
      - pipeline-error-groq-403-model-access-denied
      - pipeline-error-groq-429-exceeded-quota
      - pipeline-error-groq-500-server-error
      - pipeline-error-groq-503-server-overloaded-error
      - pipeline-error-groq-llm-failed
      - call.in-progress.error-vapifault-groq-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-groq-401-unauthorized
      - call.in-progress.error-vapifault-groq-403-model-access-denied
      - call.in-progress.error-vapifault-groq-429-exceeded-quota
      - call.in-progress.error-providerfault-groq-500-server-error
      - call.in-progress.error-providerfault-groq-503-server-overloaded-error
      - pipeline-error-cerebras-400-bad-request-validation-failed
      - pipeline-error-cerebras-401-unauthorized
      - pipeline-error-cerebras-403-model-access-denied
      - pipeline-error-cerebras-429-exceeded-quota
      - pipeline-error-cerebras-500-server-error
      - pipeline-error-cerebras-503-server-overloaded-error
      - pipeline-error-cerebras-llm-failed
      - call.in-progress.error-vapifault-cerebras-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-cerebras-401-unauthorized
      - call.in-progress.error-vapifault-cerebras-403-model-access-denied
      - call.in-progress.error-vapifault-cerebras-429-exceeded-quota
      - call.in-progress.error-providerfault-cerebras-500-server-error
      - call.in-progress.error-providerfault-cerebras-503-server-overloaded-error
      - pipeline-error-anthropic-400-bad-request-validation-failed
      - pipeline-error-anthropic-401-unauthorized
      - pipeline-error-anthropic-403-model-access-denied
      - pipeline-error-anthropic-429-exceeded-quota
      - pipeline-error-anthropic-500-server-error
      - pipeline-error-anthropic-503-server-overloaded-error
      - pipeline-error-anthropic-llm-failed
      - call.in-progress.error-vapifault-anthropic-llm-failed
      - call.in-progress.error-vapifault-anthropic-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-anthropic-401-unauthorized
      - call.in-progress.error-vapifault-anthropic-403-model-access-denied
      - call.in-progress.error-vapifault-anthropic-429-exceeded-quota
      - call.in-progress.error-providerfault-anthropic-500-server-error
      - call.in-progress.error-providerfault-anthropic-503-server-overloaded-error
      - pipeline-error-together-ai-400-bad-request-validation-failed
      - pipeline-error-together-ai-401-unauthorized
      - pipeline-error-together-ai-403-model-access-denied
      - pipeline-error-together-ai-429-exceeded-quota
      - pipeline-error-together-ai-500-server-error
      - pipeline-error-together-ai-503-server-overloaded-error
      - pipeline-error-together-ai-llm-failed
      - call.in-progress.error-vapifault-together-ai-llm-failed
      - call.in-progress.error-vapifault-together-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-together-ai-401-unauthorized
      - call.in-progress.error-vapifault-together-ai-403-model-access-denied
      - call.in-progress.error-vapifault-together-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-together-ai-500-server-error
      - call.in-progress.error-providerfault-together-ai-503-server-overloaded-error
      - pipeline-error-anyscale-400-bad-request-validation-failed
      - pipeline-error-anyscale-401-unauthorized
      - pipeline-error-anyscale-403-model-access-denied
      - pipeline-error-anyscale-429-exceeded-quota
      - pipeline-error-anyscale-500-server-error
      - pipeline-error-anyscale-503-server-overloaded-error
      - pipeline-error-anyscale-llm-failed
      - call.in-progress.error-vapifault-anyscale-llm-failed
      - call.in-progress.error-vapifault-anyscale-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-anyscale-401-unauthorized
      - call.in-progress.error-vapifault-anyscale-403-model-access-denied
      - call.in-progress.error-vapifault-anyscale-429-exceeded-quota
      - call.in-progress.error-providerfault-anyscale-500-server-error
      - call.in-progress.error-providerfault-anyscale-503-server-overloaded-error
      - pipeline-error-openrouter-400-bad-request-validation-failed
      - pipeline-error-openrouter-401-unauthorized
      - pipeline-error-openrouter-403-model-access-denied
      - pipeline-error-openrouter-429-exceeded-quota
      - pipeline-error-openrouter-500-server-error
      - pipeline-error-openrouter-503-server-overloaded-error
      - pipeline-error-openrouter-llm-failed
      - call.in-progress.error-vapifault-openrouter-llm-failed
      - call.in-progress.error-vapifault-openrouter-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-openrouter-401-unauthorized
      - call.in-progress.error-vapifault-openrouter-403-model-access-denied
      - call.in-progress.error-vapifault-openrouter-429-exceeded-quota
      - call.in-progress.error-providerfault-openrouter-500-server-error
      - call.in-progress.error-providerfault-openrouter-503-server-overloaded-error
      - pipeline-error-perplexity-ai-400-bad-request-validation-failed
      - pipeline-error-perplexity-ai-401-unauthorized
      - pipeline-error-perplexity-ai-403-model-access-denied
      - pipeline-error-perplexity-ai-429-exceeded-quota
      - pipeline-error-perplexity-ai-500-server-error
      - pipeline-error-perplexity-ai-503-server-overloaded-error
      - pipeline-error-perplexity-ai-llm-failed
      - call.in-progress.error-vapifault-perplexity-ai-llm-failed
      - call.in-progress.error-vapifault-perplexity-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-perplexity-ai-401-unauthorized
      - call.in-progress.error-vapifault-perplexity-ai-403-model-access-denied
      - call.in-progress.error-vapifault-perplexity-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-perplexity-ai-500-server-error
      - call.in-progress.error-providerfault-perplexity-ai-503-server-overloaded-error
      - pipeline-error-deepinfra-400-bad-request-validation-failed
      - pipeline-error-deepinfra-401-unauthorized
      - pipeline-error-deepinfra-403-model-access-denied
      - pipeline-error-deepinfra-429-exceeded-quota
      - pipeline-error-deepinfra-500-server-error
      - pipeline-error-deepinfra-503-server-overloaded-error
      - pipeline-error-deepinfra-llm-failed
      - call.in-progress.error-vapifault-deepinfra-llm-failed
      - call.in-progress.error-vapifault-deepinfra-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-deepinfra-401-unauthorized
      - call.in-progress.error-vapifault-deepinfra-403-model-access-denied
      - call.in-progress.error-vapifault-deepinfra-429-exceeded-quota
      - call.in-progress.error-providerfault-deepinfra-500-server-error
      - call.in-progress.error-providerfault-deepinfra-503-server-overloaded-error
      - pipeline-error-runpod-400-bad-request-validation-failed
      - pipeline-error-runpod-401-unauthorized
      - pipeline-error-runpod-403-model-access-denied
      - pipeline-error-runpod-429-exceeded-quota
      - pipeline-error-runpod-500-server-error
      - pipeline-error-runpod-503-server-overloaded-error
      - pipeline-error-runpod-llm-failed
      - call.in-progress.error-vapifault-runpod-llm-failed
      - call.in-progress.error-vapifault-runpod-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-runpod-401-unauthorized
      - call.in-progress.error-vapifault-runpod-403-model-access-denied
      - call.in-progress.error-vapifault-runpod-429-exceeded-quota
      - call.in-progress.error-providerfault-runpod-500-server-error
      - call.in-progress.error-providerfault-runpod-503-server-overloaded-error
      - pipeline-error-custom-llm-400-bad-request-validation-failed
      - pipeline-error-custom-llm-401-unauthorized
      - pipeline-error-custom-llm-403-model-access-denied
      - pipeline-error-custom-llm-429-exceeded-quota
      - pipeline-error-custom-llm-500-server-error
      - pipeline-error-custom-llm-503-server-overloaded-error
      - pipeline-error-custom-llm-llm-failed
      - call.in-progress.error-vapifault-custom-llm-llm-failed
      - call.in-progress.error-vapifault-custom-llm-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-custom-llm-401-unauthorized
      - call.in-progress.error-vapifault-custom-llm-403-model-access-denied
      - call.in-progress.error-vapifault-custom-llm-429-exceeded-quota
      - call.in-progress.error-providerfault-custom-llm-500-server-error
      - call.in-progress.error-providerfault-custom-llm-503-server-overloaded-error
      - pipeline-error-custom-voice-failed
      - pipeline-error-cartesia-socket-hang-up
      - pipeline-error-cartesia-requested-payment
      - pipeline-error-cartesia-500-server-error
      - pipeline-error-cartesia-503-server-error
      - pipeline-error-cartesia-522-server-error
      - call.in-progress.error-vapifault-cartesia-socket-hang-up
      - call.in-progress.error-vapifault-cartesia-requested-payment
      - call.in-progress.error-providerfault-cartesia-500-server-error
      - call.in-progress.error-providerfault-cartesia-503-server-error
      - call.in-progress.error-providerfault-cartesia-522-server-error
      - pipeline-error-eleven-labs-voice-not-found
      - pipeline-error-eleven-labs-quota-exceeded
      - pipeline-error-eleven-labs-unauthorized-access
      - pipeline-error-eleven-labs-unauthorized-to-access-model
      - pipeline-error-eleven-labs-professional-voices-only-for-creator-plus
      - pipeline-error-eleven-labs-blocked-free-plan-and-requested-upgrade
      - pipeline-error-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
      - pipeline-error-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
      - pipeline-error-eleven-labs-system-busy-and-requested-upgrade
      - pipeline-error-eleven-labs-voice-not-fine-tuned
      - pipeline-error-eleven-labs-invalid-api-key
      - pipeline-error-eleven-labs-invalid-voice-samples
      - pipeline-error-eleven-labs-voice-disabled-by-owner
      - pipeline-error-eleven-labs-blocked-account-in-probation
      - pipeline-error-eleven-labs-blocked-content-against-their-policy
      - pipeline-error-eleven-labs-missing-samples-for-voice-clone
      - pipeline-error-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
      - pipeline-error-eleven-labs-voice-not-allowed-for-free-users
      - pipeline-error-eleven-labs-max-character-limit-exceeded
      - pipeline-error-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
      - pipeline-error-eleven-labs-500-server-error
      - call.in-progress.error-vapifault-eleven-labs-voice-not-found
      - call.in-progress.error-vapifault-eleven-labs-quota-exceeded
      - call.in-progress.error-vapifault-eleven-labs-unauthorized-access
      - call.in-progress.error-vapifault-eleven-labs-unauthorized-to-access-model
      - call.in-progress.error-vapifault-eleven-labs-professional-voices-only-for-creator-plus
      - call.in-progress.error-vapifault-eleven-labs-blocked-free-plan-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-system-busy-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned
      - call.in-progress.error-vapifault-eleven-labs-invalid-api-key
      - call.in-progress.error-vapifault-eleven-labs-invalid-voice-samples
      - call.in-progress.error-vapifault-eleven-labs-voice-disabled-by-owner
      - call.in-progress.error-vapifault-eleven-labs-blocked-account-in-probation
      - call.in-progress.error-vapifault-eleven-labs-blocked-content-against-their-policy
      - call.in-progress.error-vapifault-eleven-labs-missing-samples-for-voice-clone
      - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
      - call.in-progress.error-vapifault-eleven-labs-voice-not-allowed-for-free-users
      - call.in-progress.error-vapifault-eleven-labs-max-character-limit-exceeded
      - call.in-progress.error-vapifault-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
      - call.in-progress.error-providerfault-eleven-labs-500-server-error
      - pipeline-error-playht-request-timed-out
      - pipeline-error-playht-invalid-voice
      - pipeline-error-playht-unexpected-error
      - pipeline-error-playht-out-of-credits
      - pipeline-error-playht-invalid-emotion
      - pipeline-error-playht-voice-must-be-a-valid-voice-manifest-uri
      - pipeline-error-playht-401-unauthorized
      - pipeline-error-playht-403-forbidden-out-of-characters
      - pipeline-error-playht-403-forbidden-api-access-not-available
      - pipeline-error-playht-429-exceeded-quota
      - pipeline-error-playht-502-gateway-error
      - pipeline-error-playht-504-gateway-error
      - call.in-progress.error-vapifault-playht-request-timed-out
      - call.in-progress.error-vapifault-playht-invalid-voice
      - call.in-progress.error-vapifault-playht-unexpected-error
      - call.in-progress.error-vapifault-playht-out-of-credits
      - call.in-progress.error-vapifault-playht-invalid-emotion
      - call.in-progress.error-vapifault-playht-voice-must-be-a-valid-voice-manifest-uri
      - call.in-progress.error-vapifault-playht-401-unauthorized
      - call.in-progress.error-vapifault-playht-403-forbidden-out-of-characters
      - call.in-progress.error-vapifault-playht-403-forbidden-api-access-not-available
      - call.in-progress.error-vapifault-playht-429-exceeded-quota
      - call.in-progress.error-providerfault-playht-502-gateway-error
      - call.in-progress.error-providerfault-playht-504-gateway-error
      - pipeline-error-custom-transcriber-failed
      - call.in-progress.error-vapifault-custom-transcriber-failed
      - pipeline-error-11labs-transcriber-failed
      - call.in-progress.error-vapifault-11labs-transcriber-failed
      - pipeline-error-deepgram-returning-400-no-such-model-language-tier-combination
      - pipeline-error-deepgram-returning-401-invalid-credentials
      - pipeline-error-deepgram-returning-403-model-access-denied
      - pipeline-error-deepgram-returning-404-not-found
      - pipeline-error-deepgram-returning-500-invalid-json
      - pipeline-error-deepgram-returning-502-network-error
      - pipeline-error-deepgram-returning-502-bad-gateway-ehostunreach
      - call.in-progress.error-vapifault-deepgram-returning-400-no-such-model-language-tier-combination
      - call.in-progress.error-vapifault-deepgram-returning-401-invalid-credentials
      - call.in-progress.error-vapifault-deepgram-returning-404-not-found
      - call.in-progress.error-vapifault-deepgram-returning-403-model-access-denied
      - call.in-progress.error-providerfault-deepgram-returning-500-invalid-json
      - call.in-progress.error-providerfault-deepgram-returning-502-network-error
      - call.in-progress.error-providerfault-deepgram-returning-502-bad-gateway-ehostunreach
      - pipeline-error-google-transcriber-failed
      - call.in-progress.error-vapifault-google-transcriber-failed
      - pipeline-error-openai-transcriber-failed
      - call.in-progress.error-vapifault-openai-transcriber-failed
      - assistant-ended-call
      - assistant-said-end-call-phrase
      - assistant-ended-call-with-hangup-task
      - assistant-ended-call-after-message-spoken
      - assistant-forwarded-call
      - assistant-join-timed-out
      - call.in-progress.error-assistant-did-not-receive-customer-audio
      - customer-busy
      - customer-ended-call
      - customer-did-not-answer
      - customer-did-not-give-microphone-permission
      - exceeded-max-duration
      - manually-canceled
      - phone-call-provider-closed-websocket
      - silence-timed-out
      - call.in-progress.error-sip-telephony-provider-failed-to-connect-call
      - twilio-failed-to-connect-call
      - twilio-reported-customer-misdialed
      - vonage-rejected
      - voicemail
    ServerMessageEndOfCallReportCostsItem:
      title: ServerMessageEndOfCallReportCostsItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transport
        - $ref: '#/components/schemas/TransportCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transcriber
        - $ref: '#/components/schemas/TranscriberCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - model
        - $ref: '#/components/schemas/ModelCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voice
        - $ref: '#/components/schemas/VoiceCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/VapiCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - voicemail-detection
        - $ref: '#/components/schemas/VoicemailDetectionCost'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - analysis
        - $ref: '#/components/schemas/AnalysisCost'
    ServerMessageEndOfCallReport:
      title: ServerMessageEndOfCallReport
      required:
      - analysis
      - artifact
      - endedReason
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageEndOfCallReportPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "end-of-call-report" is sent when the call ends and post-processing is complete.
          enum:
          - end-of-call-report
        endedReason:
          $ref: '#/components/schemas/ServerMessageEndOfCallReportEndedReason'
        cost:
          type: number
          description: This is the cost of the call in USD. This can also be found at `call.cost` on GET /call/:id.
          format: double
          nullable: true
        costs:
          type: array
          description: These are the costs of individual components of the call in USD. This can also be found at `call.costs` on GET /call/:id.
          nullable: true
          items:
            $ref: '#/components/schemas/ServerMessageEndOfCallReportCostsItem'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        analysis:
          $ref: '#/components/schemas/Analysis'
        startedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the call started. This can also be found at `call.startedAt` on GET /call/:id.
          format: date-time
          nullable: true
        endedAt:
          type: string
          description: This is the ISO 8601 date-time string of when the call ended. This can also be found at `call.endedAt` on GET /call/:id.
          format: date-time
          nullable: true
    ServerMessageHangPhoneNumber:
      title: ServerMessageHangPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageHang:
      title: ServerMessageHang
      required:
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageHangPhoneNumber'
        type:
          type: string
          description: |-
            This is the type of the message. "hang" is sent when the assistant is hanging due to a delay. The delay can be caused by many factors, such as:
            - the model is too slow to respond
            - the voice is too slow to respond
            - the tool call is still waiting for a response from your server
            - etc.
          enum:
          - hang
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageKnowledgeBaseRequestPhoneNumber:
      title: ServerMessageKnowledgeBaseRequestPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageKnowledgeBaseRequestMessagesItem:
      title: ServerMessageKnowledgeBaseRequestMessagesItem
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/BotMessage'
      - $ref: '#/components/schemas/ToolCallMessage'
      - $ref: '#/components/schemas/ToolCallResultMessage'
    ServerMessageKnowledgeBaseRequest:
      title: ServerMessageKnowledgeBaseRequest
      required:
      - messagesOpenAIFormatted
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageKnowledgeBaseRequestPhoneNumber'
        type:
          type: string
          description: "This is the type of the message. \"knowledge-base-request\" is sent to request knowledge base documents. To enable, use `assistant.knowledgeBase.provider=custom-knowledge-base`."
          enum:
          - knowledge-base-request
        messages:
          type: array
          description: These are the messages that are going to be sent to the `model` right after the `knowledge-base-request` webhook completes.
          nullable: true
          items:
            $ref: '#/components/schemas/ServerMessageKnowledgeBaseRequestMessagesItem'
        messagesOpenAIFormatted:
          type: array
          description: This is just `messages` formatted for OpenAI.
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageModelOutputPhoneNumber:
      title: ServerMessageModelOutputPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageModelOutput:
      title: ServerMessageModelOutput
      required:
      - output
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageModelOutputPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "model-output" is sent as the model outputs tokens.
          enum:
          - model-output
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        output:
          type: object
          additionalProperties: true
          description: This is the output of the model. It can be a token or tool call.
    ServerMessagePhoneCallControlPhoneNumber:
      title: ServerMessagePhoneCallControlPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessagePhoneCallControlRequest:
      title: ServerMessagePhoneCallControlRequest
      type: string
      description: This is the request to control the phone call.
      enum:
      - forward
      - hang-up
    ServerMessagePhoneCallControlDestination:
      title: ServerMessagePhoneCallControlDestination
      description: This is the destination to forward the call to if the request is "forward".
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ServerMessagePhoneCallControl:
      title: ServerMessagePhoneCallControl
      required:
      - request
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessagePhoneCallControlPhoneNumber'
        type:
          type: string
          description: |-
            This is the type of the message. "phone-call-control" is an advanced type of message.

            When it is requested in `assistant.serverMessages`, the hangup and forwarding responsibilities are delegated to your server. Vapi will no longer do the actual transfer and hangup.
          enum:
          - phone-call-control
        request:
          $ref: '#/components/schemas/ServerMessagePhoneCallControlRequest'
        destination:
          $ref: '#/components/schemas/ServerMessagePhoneCallControlDestination'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageSpeechUpdatePhoneNumber:
      title: ServerMessageSpeechUpdatePhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageSpeechUpdateStatus:
      title: ServerMessageSpeechUpdateStatus
      type: string
      description: This is the status of the speech update.
      enum:
      - started
      - stopped
    ServerMessageSpeechUpdateRole:
      title: ServerMessageSpeechUpdateRole
      type: string
      description: This is the role which the speech update is for.
      enum:
      - assistant
      - user
    ServerMessageSpeechUpdate:
      title: ServerMessageSpeechUpdate
      required:
      - role
      - status
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageSpeechUpdatePhoneNumber'
        type:
          type: string
          description: This is the type of the message. "speech-update" is sent whenever assistant or user start or stop speaking.
          enum:
          - speech-update
        status:
          $ref: '#/components/schemas/ServerMessageSpeechUpdateStatus'
        role:
          $ref: '#/components/schemas/ServerMessageSpeechUpdateRole'
        turn:
          type: number
          description: This is the turn number of the speech update (0-indexed).
          format: double
          nullable: true
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageStatusUpdatePhoneNumber:
      title: ServerMessageStatusUpdatePhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageStatusUpdateStatus:
      title: ServerMessageStatusUpdateStatus
      type: string
      description: This is the status of the call.
      enum:
      - scheduled
      - queued
      - ringing
      - in-progress
      - forwarding
      - ended
    ServerMessageStatusUpdateEndedReason:
      title: ServerMessageStatusUpdateEndedReason
      type: string
      description: This is the reason the call ended. This is only sent if the status is "ended".
      enum:
      - call-start-error-neither-assistant-nor-server-set
      - assistant-request-failed
      - assistant-request-returned-error
      - assistant-request-returned-unspeakable-error
      - assistant-request-returned-invalid-assistant
      - assistant-request-returned-no-assistant
      - assistant-request-returned-forwarding-phone-number
      - call.start.error-get-org
      - call.start.error-get-subscription
      - call.start.error-get-assistant
      - call.start.error-get-phone-number
      - call.start.error-get-customer
      - call.start.error-get-resources-validation
      - call.start.error-vapi-number-international
      - call.start.error-vapi-number-outbound-daily-limit
      - call.start.error-get-transport
      - assistant-not-valid
      - database-error
      - assistant-not-found
      - pipeline-error-openai-voice-failed
      - pipeline-error-cartesia-voice-failed
      - pipeline-error-deepgram-voice-failed
      - pipeline-error-eleven-labs-voice-failed
      - pipeline-error-playht-voice-failed
      - pipeline-error-lmnt-voice-failed
      - pipeline-error-azure-voice-failed
      - pipeline-error-rime-ai-voice-failed
      - pipeline-error-smallest-ai-voice-failed
      - pipeline-error-neuphonic-voice-failed
      - pipeline-error-hume-voice-failed
      - pipeline-error-sesame-voice-failed
      - pipeline-error-tavus-video-failed
      - call.in-progress.error-vapifault-openai-voice-failed
      - call.in-progress.error-vapifault-cartesia-voice-failed
      - call.in-progress.error-vapifault-deepgram-voice-failed
      - call.in-progress.error-vapifault-eleven-labs-voice-failed
      - call.in-progress.error-vapifault-playht-voice-failed
      - call.in-progress.error-vapifault-lmnt-voice-failed
      - call.in-progress.error-vapifault-azure-voice-failed
      - call.in-progress.error-vapifault-rime-ai-voice-failed
      - call.in-progress.error-vapifault-smallest-ai-voice-failed
      - call.in-progress.error-vapifault-neuphonic-voice-failed
      - call.in-progress.error-vapifault-hume-voice-failed
      - call.in-progress.error-vapifault-sesame-voice-failed
      - call.in-progress.error-vapifault-tavus-video-failed
      - pipeline-error-vapi-llm-failed
      - pipeline-error-vapi-400-bad-request-validation-failed
      - pipeline-error-vapi-401-unauthorized
      - pipeline-error-vapi-403-model-access-denied
      - pipeline-error-vapi-429-exceeded-quota
      - pipeline-error-vapi-500-server-error
      - pipeline-error-vapi-503-server-overloaded-error
      - call.in-progress.error-vapifault-vapi-llm-failed
      - call.in-progress.error-vapifault-vapi-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-vapi-401-unauthorized
      - call.in-progress.error-vapifault-vapi-403-model-access-denied
      - call.in-progress.error-vapifault-vapi-429-exceeded-quota
      - call.in-progress.error-providerfault-vapi-500-server-error
      - call.in-progress.error-providerfault-vapi-503-server-overloaded-error
      - pipeline-error-deepgram-transcriber-failed
      - call.in-progress.error-vapifault-deepgram-transcriber-failed
      - pipeline-error-gladia-transcriber-failed
      - call.in-progress.error-vapifault-gladia-transcriber-failed
      - pipeline-error-speechmatics-transcriber-failed
      - call.in-progress.error-vapifault-speechmatics-transcriber-failed
      - pipeline-error-assembly-ai-transcriber-failed
      - pipeline-error-assembly-ai-returning-400-insufficent-funds
      - pipeline-error-assembly-ai-returning-400-paid-only-feature
      - pipeline-error-assembly-ai-returning-401-invalid-credentials
      - pipeline-error-assembly-ai-returning-500-invalid-schema
      - pipeline-error-assembly-ai-returning-500-word-boost-parsing-failed
      - call.in-progress.error-vapifault-assembly-ai-transcriber-failed
      - call.in-progress.error-vapifault-assembly-ai-returning-400-insufficent-funds
      - call.in-progress.error-vapifault-assembly-ai-returning-400-paid-only-feature
      - call.in-progress.error-vapifault-assembly-ai-returning-401-invalid-credentials
      - call.in-progress.error-vapifault-assembly-ai-returning-500-invalid-schema
      - call.in-progress.error-vapifault-assembly-ai-returning-500-word-boost-parsing-failed
      - pipeline-error-talkscriber-transcriber-failed
      - call.in-progress.error-vapifault-talkscriber-transcriber-failed
      - pipeline-error-azure-speech-transcriber-failed
      - call.in-progress.error-vapifault-azure-speech-transcriber-failed
      - call.in-progress.error-pipeline-no-available-llm-model
      - worker-shutdown
      - unknown-error
      - vonage-disconnected
      - vonage-failed-to-connect-call
      - vonage-completed
      - phone-call-provider-bypass-enabled-but-no-call-received
      - call.in-progress.error-vapifault-transport-never-connected
      - call.in-progress.error-vapifault-transport-connected-but-call-not-active
      - call.in-progress.error-vapifault-call-started-but-connection-to-transport-missing
      - call.in-progress.error-vapifault-openai-llm-failed
      - call.in-progress.error-vapifault-azure-openai-llm-failed
      - call.in-progress.error-vapifault-groq-llm-failed
      - call.in-progress.error-vapifault-google-llm-failed
      - call.in-progress.error-vapifault-xai-llm-failed
      - call.in-progress.error-vapifault-mistral-llm-failed
      - call.in-progress.error-vapifault-inflection-ai-llm-failed
      - call.in-progress.error-vapifault-cerebras-llm-failed
      - call.in-progress.error-vapifault-deep-seek-llm-failed
      - pipeline-error-openai-400-bad-request-validation-failed
      - pipeline-error-openai-401-unauthorized
      - pipeline-error-openai-401-incorrect-api-key
      - pipeline-error-openai-401-account-not-in-organization
      - pipeline-error-openai-403-model-access-denied
      - pipeline-error-openai-429-exceeded-quota
      - pipeline-error-openai-429-rate-limit-reached
      - pipeline-error-openai-500-server-error
      - pipeline-error-openai-503-server-overloaded-error
      - pipeline-error-openai-llm-failed
      - call.in-progress.error-vapifault-openai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-openai-401-unauthorized
      - call.in-progress.error-vapifault-openai-401-incorrect-api-key
      - call.in-progress.error-vapifault-openai-401-account-not-in-organization
      - call.in-progress.error-vapifault-openai-403-model-access-denied
      - call.in-progress.error-vapifault-openai-429-exceeded-quota
      - call.in-progress.error-vapifault-openai-429-rate-limit-reached
      - call.in-progress.error-providerfault-openai-500-server-error
      - call.in-progress.error-providerfault-openai-503-server-overloaded-error
      - pipeline-error-azure-openai-400-bad-request-validation-failed
      - pipeline-error-azure-openai-401-unauthorized
      - pipeline-error-azure-openai-403-model-access-denied
      - pipeline-error-azure-openai-429-exceeded-quota
      - pipeline-error-azure-openai-500-server-error
      - pipeline-error-azure-openai-503-server-overloaded-error
      - pipeline-error-azure-openai-llm-failed
      - call.in-progress.error-vapifault-azure-openai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-azure-openai-401-unauthorized
      - call.in-progress.error-vapifault-azure-openai-403-model-access-denied
      - call.in-progress.error-vapifault-azure-openai-429-exceeded-quota
      - call.in-progress.error-providerfault-azure-openai-500-server-error
      - call.in-progress.error-providerfault-azure-openai-503-server-overloaded-error
      - pipeline-error-google-400-bad-request-validation-failed
      - pipeline-error-google-401-unauthorized
      - pipeline-error-google-403-model-access-denied
      - pipeline-error-google-429-exceeded-quota
      - pipeline-error-google-500-server-error
      - pipeline-error-google-503-server-overloaded-error
      - pipeline-error-google-llm-failed
      - call.in-progress.error-vapifault-google-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-google-401-unauthorized
      - call.in-progress.error-vapifault-google-403-model-access-denied
      - call.in-progress.error-vapifault-google-429-exceeded-quota
      - call.in-progress.error-providerfault-google-500-server-error
      - call.in-progress.error-providerfault-google-503-server-overloaded-error
      - pipeline-error-xai-400-bad-request-validation-failed
      - pipeline-error-xai-401-unauthorized
      - pipeline-error-xai-403-model-access-denied
      - pipeline-error-xai-429-exceeded-quota
      - pipeline-error-xai-500-server-error
      - pipeline-error-xai-503-server-overloaded-error
      - pipeline-error-xai-llm-failed
      - call.in-progress.error-vapifault-xai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-xai-401-unauthorized
      - call.in-progress.error-vapifault-xai-403-model-access-denied
      - call.in-progress.error-vapifault-xai-429-exceeded-quota
      - call.in-progress.error-providerfault-xai-500-server-error
      - call.in-progress.error-providerfault-xai-503-server-overloaded-error
      - pipeline-error-mistral-400-bad-request-validation-failed
      - pipeline-error-mistral-401-unauthorized
      - pipeline-error-mistral-403-model-access-denied
      - pipeline-error-mistral-429-exceeded-quota
      - pipeline-error-mistral-500-server-error
      - pipeline-error-mistral-503-server-overloaded-error
      - pipeline-error-mistral-llm-failed
      - call.in-progress.error-vapifault-mistral-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-mistral-401-unauthorized
      - call.in-progress.error-vapifault-mistral-403-model-access-denied
      - call.in-progress.error-vapifault-mistral-429-exceeded-quota
      - call.in-progress.error-providerfault-mistral-500-server-error
      - call.in-progress.error-providerfault-mistral-503-server-overloaded-error
      - pipeline-error-inflection-ai-400-bad-request-validation-failed
      - pipeline-error-inflection-ai-401-unauthorized
      - pipeline-error-inflection-ai-403-model-access-denied
      - pipeline-error-inflection-ai-429-exceeded-quota
      - pipeline-error-inflection-ai-500-server-error
      - pipeline-error-inflection-ai-503-server-overloaded-error
      - pipeline-error-inflection-ai-llm-failed
      - call.in-progress.error-vapifault-inflection-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-inflection-ai-401-unauthorized
      - call.in-progress.error-vapifault-inflection-ai-403-model-access-denied
      - call.in-progress.error-vapifault-inflection-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-inflection-ai-500-server-error
      - call.in-progress.error-providerfault-inflection-ai-503-server-overloaded-error
      - pipeline-error-deep-seek-400-bad-request-validation-failed
      - pipeline-error-deep-seek-401-unauthorized
      - pipeline-error-deep-seek-403-model-access-denied
      - pipeline-error-deep-seek-429-exceeded-quota
      - pipeline-error-deep-seek-500-server-error
      - pipeline-error-deep-seek-503-server-overloaded-error
      - pipeline-error-deep-seek-llm-failed
      - call.in-progress.error-vapifault-deep-seek-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-deep-seek-401-unauthorized
      - call.in-progress.error-vapifault-deep-seek-403-model-access-denied
      - call.in-progress.error-vapifault-deep-seek-429-exceeded-quota
      - call.in-progress.error-providerfault-deep-seek-500-server-error
      - call.in-progress.error-providerfault-deep-seek-503-server-overloaded-error
      - pipeline-error-groq-400-bad-request-validation-failed
      - pipeline-error-groq-401-unauthorized
      - pipeline-error-groq-403-model-access-denied
      - pipeline-error-groq-429-exceeded-quota
      - pipeline-error-groq-500-server-error
      - pipeline-error-groq-503-server-overloaded-error
      - pipeline-error-groq-llm-failed
      - call.in-progress.error-vapifault-groq-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-groq-401-unauthorized
      - call.in-progress.error-vapifault-groq-403-model-access-denied
      - call.in-progress.error-vapifault-groq-429-exceeded-quota
      - call.in-progress.error-providerfault-groq-500-server-error
      - call.in-progress.error-providerfault-groq-503-server-overloaded-error
      - pipeline-error-cerebras-400-bad-request-validation-failed
      - pipeline-error-cerebras-401-unauthorized
      - pipeline-error-cerebras-403-model-access-denied
      - pipeline-error-cerebras-429-exceeded-quota
      - pipeline-error-cerebras-500-server-error
      - pipeline-error-cerebras-503-server-overloaded-error
      - pipeline-error-cerebras-llm-failed
      - call.in-progress.error-vapifault-cerebras-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-cerebras-401-unauthorized
      - call.in-progress.error-vapifault-cerebras-403-model-access-denied
      - call.in-progress.error-vapifault-cerebras-429-exceeded-quota
      - call.in-progress.error-providerfault-cerebras-500-server-error
      - call.in-progress.error-providerfault-cerebras-503-server-overloaded-error
      - pipeline-error-anthropic-400-bad-request-validation-failed
      - pipeline-error-anthropic-401-unauthorized
      - pipeline-error-anthropic-403-model-access-denied
      - pipeline-error-anthropic-429-exceeded-quota
      - pipeline-error-anthropic-500-server-error
      - pipeline-error-anthropic-503-server-overloaded-error
      - pipeline-error-anthropic-llm-failed
      - call.in-progress.error-vapifault-anthropic-llm-failed
      - call.in-progress.error-vapifault-anthropic-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-anthropic-401-unauthorized
      - call.in-progress.error-vapifault-anthropic-403-model-access-denied
      - call.in-progress.error-vapifault-anthropic-429-exceeded-quota
      - call.in-progress.error-providerfault-anthropic-500-server-error
      - call.in-progress.error-providerfault-anthropic-503-server-overloaded-error
      - pipeline-error-together-ai-400-bad-request-validation-failed
      - pipeline-error-together-ai-401-unauthorized
      - pipeline-error-together-ai-403-model-access-denied
      - pipeline-error-together-ai-429-exceeded-quota
      - pipeline-error-together-ai-500-server-error
      - pipeline-error-together-ai-503-server-overloaded-error
      - pipeline-error-together-ai-llm-failed
      - call.in-progress.error-vapifault-together-ai-llm-failed
      - call.in-progress.error-vapifault-together-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-together-ai-401-unauthorized
      - call.in-progress.error-vapifault-together-ai-403-model-access-denied
      - call.in-progress.error-vapifault-together-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-together-ai-500-server-error
      - call.in-progress.error-providerfault-together-ai-503-server-overloaded-error
      - pipeline-error-anyscale-400-bad-request-validation-failed
      - pipeline-error-anyscale-401-unauthorized
      - pipeline-error-anyscale-403-model-access-denied
      - pipeline-error-anyscale-429-exceeded-quota
      - pipeline-error-anyscale-500-server-error
      - pipeline-error-anyscale-503-server-overloaded-error
      - pipeline-error-anyscale-llm-failed
      - call.in-progress.error-vapifault-anyscale-llm-failed
      - call.in-progress.error-vapifault-anyscale-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-anyscale-401-unauthorized
      - call.in-progress.error-vapifault-anyscale-403-model-access-denied
      - call.in-progress.error-vapifault-anyscale-429-exceeded-quota
      - call.in-progress.error-providerfault-anyscale-500-server-error
      - call.in-progress.error-providerfault-anyscale-503-server-overloaded-error
      - pipeline-error-openrouter-400-bad-request-validation-failed
      - pipeline-error-openrouter-401-unauthorized
      - pipeline-error-openrouter-403-model-access-denied
      - pipeline-error-openrouter-429-exceeded-quota
      - pipeline-error-openrouter-500-server-error
      - pipeline-error-openrouter-503-server-overloaded-error
      - pipeline-error-openrouter-llm-failed
      - call.in-progress.error-vapifault-openrouter-llm-failed
      - call.in-progress.error-vapifault-openrouter-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-openrouter-401-unauthorized
      - call.in-progress.error-vapifault-openrouter-403-model-access-denied
      - call.in-progress.error-vapifault-openrouter-429-exceeded-quota
      - call.in-progress.error-providerfault-openrouter-500-server-error
      - call.in-progress.error-providerfault-openrouter-503-server-overloaded-error
      - pipeline-error-perplexity-ai-400-bad-request-validation-failed
      - pipeline-error-perplexity-ai-401-unauthorized
      - pipeline-error-perplexity-ai-403-model-access-denied
      - pipeline-error-perplexity-ai-429-exceeded-quota
      - pipeline-error-perplexity-ai-500-server-error
      - pipeline-error-perplexity-ai-503-server-overloaded-error
      - pipeline-error-perplexity-ai-llm-failed
      - call.in-progress.error-vapifault-perplexity-ai-llm-failed
      - call.in-progress.error-vapifault-perplexity-ai-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-perplexity-ai-401-unauthorized
      - call.in-progress.error-vapifault-perplexity-ai-403-model-access-denied
      - call.in-progress.error-vapifault-perplexity-ai-429-exceeded-quota
      - call.in-progress.error-providerfault-perplexity-ai-500-server-error
      - call.in-progress.error-providerfault-perplexity-ai-503-server-overloaded-error
      - pipeline-error-deepinfra-400-bad-request-validation-failed
      - pipeline-error-deepinfra-401-unauthorized
      - pipeline-error-deepinfra-403-model-access-denied
      - pipeline-error-deepinfra-429-exceeded-quota
      - pipeline-error-deepinfra-500-server-error
      - pipeline-error-deepinfra-503-server-overloaded-error
      - pipeline-error-deepinfra-llm-failed
      - call.in-progress.error-vapifault-deepinfra-llm-failed
      - call.in-progress.error-vapifault-deepinfra-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-deepinfra-401-unauthorized
      - call.in-progress.error-vapifault-deepinfra-403-model-access-denied
      - call.in-progress.error-vapifault-deepinfra-429-exceeded-quota
      - call.in-progress.error-providerfault-deepinfra-500-server-error
      - call.in-progress.error-providerfault-deepinfra-503-server-overloaded-error
      - pipeline-error-runpod-400-bad-request-validation-failed
      - pipeline-error-runpod-401-unauthorized
      - pipeline-error-runpod-403-model-access-denied
      - pipeline-error-runpod-429-exceeded-quota
      - pipeline-error-runpod-500-server-error
      - pipeline-error-runpod-503-server-overloaded-error
      - pipeline-error-runpod-llm-failed
      - call.in-progress.error-vapifault-runpod-llm-failed
      - call.in-progress.error-vapifault-runpod-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-runpod-401-unauthorized
      - call.in-progress.error-vapifault-runpod-403-model-access-denied
      - call.in-progress.error-vapifault-runpod-429-exceeded-quota
      - call.in-progress.error-providerfault-runpod-500-server-error
      - call.in-progress.error-providerfault-runpod-503-server-overloaded-error
      - pipeline-error-custom-llm-400-bad-request-validation-failed
      - pipeline-error-custom-llm-401-unauthorized
      - pipeline-error-custom-llm-403-model-access-denied
      - pipeline-error-custom-llm-429-exceeded-quota
      - pipeline-error-custom-llm-500-server-error
      - pipeline-error-custom-llm-503-server-overloaded-error
      - pipeline-error-custom-llm-llm-failed
      - call.in-progress.error-vapifault-custom-llm-llm-failed
      - call.in-progress.error-vapifault-custom-llm-400-bad-request-validation-failed
      - call.in-progress.error-vapifault-custom-llm-401-unauthorized
      - call.in-progress.error-vapifault-custom-llm-403-model-access-denied
      - call.in-progress.error-vapifault-custom-llm-429-exceeded-quota
      - call.in-progress.error-providerfault-custom-llm-500-server-error
      - call.in-progress.error-providerfault-custom-llm-503-server-overloaded-error
      - pipeline-error-custom-voice-failed
      - pipeline-error-cartesia-socket-hang-up
      - pipeline-error-cartesia-requested-payment
      - pipeline-error-cartesia-500-server-error
      - pipeline-error-cartesia-503-server-error
      - pipeline-error-cartesia-522-server-error
      - call.in-progress.error-vapifault-cartesia-socket-hang-up
      - call.in-progress.error-vapifault-cartesia-requested-payment
      - call.in-progress.error-providerfault-cartesia-500-server-error
      - call.in-progress.error-providerfault-cartesia-503-server-error
      - call.in-progress.error-providerfault-cartesia-522-server-error
      - pipeline-error-eleven-labs-voice-not-found
      - pipeline-error-eleven-labs-quota-exceeded
      - pipeline-error-eleven-labs-unauthorized-access
      - pipeline-error-eleven-labs-unauthorized-to-access-model
      - pipeline-error-eleven-labs-professional-voices-only-for-creator-plus
      - pipeline-error-eleven-labs-blocked-free-plan-and-requested-upgrade
      - pipeline-error-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
      - pipeline-error-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
      - pipeline-error-eleven-labs-system-busy-and-requested-upgrade
      - pipeline-error-eleven-labs-voice-not-fine-tuned
      - pipeline-error-eleven-labs-invalid-api-key
      - pipeline-error-eleven-labs-invalid-voice-samples
      - pipeline-error-eleven-labs-voice-disabled-by-owner
      - pipeline-error-eleven-labs-blocked-account-in-probation
      - pipeline-error-eleven-labs-blocked-content-against-their-policy
      - pipeline-error-eleven-labs-missing-samples-for-voice-clone
      - pipeline-error-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
      - pipeline-error-eleven-labs-voice-not-allowed-for-free-users
      - pipeline-error-eleven-labs-max-character-limit-exceeded
      - pipeline-error-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
      - pipeline-error-eleven-labs-500-server-error
      - call.in-progress.error-vapifault-eleven-labs-voice-not-found
      - call.in-progress.error-vapifault-eleven-labs-quota-exceeded
      - call.in-progress.error-vapifault-eleven-labs-unauthorized-access
      - call.in-progress.error-vapifault-eleven-labs-unauthorized-to-access-model
      - call.in-progress.error-vapifault-eleven-labs-professional-voices-only-for-creator-plus
      - call.in-progress.error-vapifault-eleven-labs-blocked-free-plan-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-system-busy-and-requested-upgrade
      - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned
      - call.in-progress.error-vapifault-eleven-labs-invalid-api-key
      - call.in-progress.error-vapifault-eleven-labs-invalid-voice-samples
      - call.in-progress.error-vapifault-eleven-labs-voice-disabled-by-owner
      - call.in-progress.error-vapifault-eleven-labs-blocked-account-in-probation
      - call.in-progress.error-vapifault-eleven-labs-blocked-content-against-their-policy
      - call.in-progress.error-vapifault-eleven-labs-missing-samples-for-voice-clone
      - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
      - call.in-progress.error-vapifault-eleven-labs-voice-not-allowed-for-free-users
      - call.in-progress.error-vapifault-eleven-labs-max-character-limit-exceeded
      - call.in-progress.error-vapifault-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
      - call.in-progress.error-providerfault-eleven-labs-500-server-error
      - pipeline-error-playht-request-timed-out
      - pipeline-error-playht-invalid-voice
      - pipeline-error-playht-unexpected-error
      - pipeline-error-playht-out-of-credits
      - pipeline-error-playht-invalid-emotion
      - pipeline-error-playht-voice-must-be-a-valid-voice-manifest-uri
      - pipeline-error-playht-401-unauthorized
      - pipeline-error-playht-403-forbidden-out-of-characters
      - pipeline-error-playht-403-forbidden-api-access-not-available
      - pipeline-error-playht-429-exceeded-quota
      - pipeline-error-playht-502-gateway-error
      - pipeline-error-playht-504-gateway-error
      - call.in-progress.error-vapifault-playht-request-timed-out
      - call.in-progress.error-vapifault-playht-invalid-voice
      - call.in-progress.error-vapifault-playht-unexpected-error
      - call.in-progress.error-vapifault-playht-out-of-credits
      - call.in-progress.error-vapifault-playht-invalid-emotion
      - call.in-progress.error-vapifault-playht-voice-must-be-a-valid-voice-manifest-uri
      - call.in-progress.error-vapifault-playht-401-unauthorized
      - call.in-progress.error-vapifault-playht-403-forbidden-out-of-characters
      - call.in-progress.error-vapifault-playht-403-forbidden-api-access-not-available
      - call.in-progress.error-vapifault-playht-429-exceeded-quota
      - call.in-progress.error-providerfault-playht-502-gateway-error
      - call.in-progress.error-providerfault-playht-504-gateway-error
      - pipeline-error-custom-transcriber-failed
      - call.in-progress.error-vapifault-custom-transcriber-failed
      - pipeline-error-11labs-transcriber-failed
      - call.in-progress.error-vapifault-11labs-transcriber-failed
      - pipeline-error-deepgram-returning-400-no-such-model-language-tier-combination
      - pipeline-error-deepgram-returning-401-invalid-credentials
      - pipeline-error-deepgram-returning-403-model-access-denied
      - pipeline-error-deepgram-returning-404-not-found
      - pipeline-error-deepgram-returning-500-invalid-json
      - pipeline-error-deepgram-returning-502-network-error
      - pipeline-error-deepgram-returning-502-bad-gateway-ehostunreach
      - call.in-progress.error-vapifault-deepgram-returning-400-no-such-model-language-tier-combination
      - call.in-progress.error-vapifault-deepgram-returning-401-invalid-credentials
      - call.in-progress.error-vapifault-deepgram-returning-404-not-found
      - call.in-progress.error-vapifault-deepgram-returning-403-model-access-denied
      - call.in-progress.error-providerfault-deepgram-returning-500-invalid-json
      - call.in-progress.error-providerfault-deepgram-returning-502-network-error
      - call.in-progress.error-providerfault-deepgram-returning-502-bad-gateway-ehostunreach
      - pipeline-error-google-transcriber-failed
      - call.in-progress.error-vapifault-google-transcriber-failed
      - pipeline-error-openai-transcriber-failed
      - call.in-progress.error-vapifault-openai-transcriber-failed
      - assistant-ended-call
      - assistant-said-end-call-phrase
      - assistant-ended-call-with-hangup-task
      - assistant-ended-call-after-message-spoken
      - assistant-forwarded-call
      - assistant-join-timed-out
      - call.in-progress.error-assistant-did-not-receive-customer-audio
      - customer-busy
      - customer-ended-call
      - customer-did-not-answer
      - customer-did-not-give-microphone-permission
      - exceeded-max-duration
      - manually-canceled
      - phone-call-provider-closed-websocket
      - silence-timed-out
      - call.in-progress.error-sip-telephony-provider-failed-to-connect-call
      - twilio-failed-to-connect-call
      - twilio-reported-customer-misdialed
      - vonage-rejected
      - voicemail
    ServerMessageStatusUpdateMessagesItem:
      title: ServerMessageStatusUpdateMessagesItem
      oneOf:
      - $ref: '#/components/schemas/UserMessage'
      - $ref: '#/components/schemas/SystemMessage'
      - $ref: '#/components/schemas/BotMessage'
      - $ref: '#/components/schemas/ToolCallMessage'
      - $ref: '#/components/schemas/ToolCallResultMessage'
    ServerMessageStatusUpdateDestination:
      title: ServerMessageStatusUpdateDestination
      description: This is the destination the call is being transferred to. This is only sent if the status is "forwarding".
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ServerMessageStatusUpdate:
      title: ServerMessageStatusUpdate
      required:
      - status
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageStatusUpdatePhoneNumber'
        type:
          type: string
          description: This is the type of the message. "status-update" is sent whenever the `call.status` changes.
          enum:
          - status-update
        status:
          $ref: '#/components/schemas/ServerMessageStatusUpdateStatus'
        endedReason:
          $ref: '#/components/schemas/ServerMessageStatusUpdateEndedReason'
        messages:
          type: array
          description: These are the conversation messages of the call. This is only sent if the status is "forwarding".
          nullable: true
          items:
            $ref: '#/components/schemas/ServerMessageStatusUpdateMessagesItem'
        messagesOpenAIFormatted:
          type: array
          description: These are the conversation messages of the call. This is only sent if the status is "forwarding".
          nullable: true
          items:
            $ref: '#/components/schemas/OpenAiMessage'
        destination:
          $ref: '#/components/schemas/ServerMessageStatusUpdateDestination'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        transcript:
          type: string
          description: This is the transcript of the call. This is only sent if the status is "forwarding".
          nullable: true
        summary:
          type: string
          description: This is the summary of the call. This is only sent if the status is "forwarding".
          nullable: true
        inboundPhoneCallDebuggingArtifacts:
          type: object
          additionalProperties: true
          description: |-
            This is the inbound phone call debugging artifacts. This is only sent if the status is "ended" and there was an error accepting the inbound phone call.

            This will include any errors related to the "assistant-request" if one was made.
          nullable: true
    ServerMessageToolCallsPhoneNumber:
      title: ServerMessageToolCallsPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageToolCallsToolWithToolCallListItem:
      title: ServerMessageToolCallsToolWithToolCallListItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - function
        - $ref: '#/components/schemas/FunctionToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - ghl
        - $ref: '#/components/schemas/GhlToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - make
        - $ref: '#/components/schemas/MakeToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - bash
        - $ref: '#/components/schemas/BashToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - computer
        - $ref: '#/components/schemas/ComputerToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - textEditor
        - $ref: '#/components/schemas/TextEditorToolWithToolCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - google.calendar.event.create
        - $ref: '#/components/schemas/GoogleCalendarCreateEventToolWithToolCall'
    ServerMessageToolCalls:
      title: ServerMessageToolCalls
      required:
      - toolCallList
      - toolWithToolCallList
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageToolCallsPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "tool-calls" is sent to call a tool.
          nullable: true
          enum:
          - tool-calls
        toolWithToolCallList:
          type: array
          description: This is the list of tools calls that the model is requesting along with the original tool configuration.
          items:
            $ref: '#/components/schemas/ServerMessageToolCallsToolWithToolCallListItem'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        toolCallList:
          type: array
          description: This is the list of tool calls that the model is requesting.
          items:
            $ref: '#/components/schemas/ToolCall'
    ServerMessageTransferDestinationRequestPhoneNumber:
      title: ServerMessageTransferDestinationRequestPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageTransferDestinationRequest:
      title: ServerMessageTransferDestinationRequest
      required:
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageTransferDestinationRequestPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "transfer-destination-request" is sent when the model is requesting transfer but destination is unknown.
          enum:
          - transfer-destination-request
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageTransferUpdatePhoneNumber:
      title: ServerMessageTransferUpdatePhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageTransferUpdateDestination:
      title: ServerMessageTransferUpdateDestination
      description: This is the destination of the transfer.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - assistant
        - $ref: '#/components/schemas/TransferDestinationAssistant'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - step
        - $ref: '#/components/schemas/TransferDestinationStep'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ServerMessageTransferUpdate:
      title: ServerMessageTransferUpdate
      required:
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageTransferUpdatePhoneNumber'
        type:
          type: string
          description: This is the type of the message. "transfer-update" is sent whenever a transfer happens.
          enum:
          - transfer-update
        destination:
          $ref: '#/components/schemas/ServerMessageTransferUpdateDestination'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        toAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        fromAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        toStepRecord:
          type: object
          additionalProperties: true
          description: This is the step that the conversation moved to.
          nullable: true
        fromStepRecord:
          type: object
          additionalProperties: true
          description: This is the step that the conversation moved from. =
          nullable: true
    ServerMessageTranscriptPhoneNumber:
      title: ServerMessageTranscriptPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageTranscriptType:
      title: ServerMessageTranscriptType
      type: string
      description: This is the type of the message. "transcript" is sent as transcriber outputs partial or final transcript.
      enum:
      - transcript
      - "transcript[transcriptType='final']"
    ServerMessageTranscriptRole:
      title: ServerMessageTranscriptRole
      type: string
      description: This is the role for which the transcript is for.
      enum:
      - assistant
      - user
    ServerMessageTranscriptTranscriptType:
      title: ServerMessageTranscriptTranscriptType
      type: string
      description: This is the type of the transcript.
      enum:
      - partial
      - final
    ServerMessageTranscript:
      title: ServerMessageTranscript
      required:
      - role
      - transcript
      - transcriptType
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageTranscriptPhoneNumber'
        type:
          $ref: '#/components/schemas/ServerMessageTranscriptType'
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        role:
          $ref: '#/components/schemas/ServerMessageTranscriptRole'
        transcriptType:
          $ref: '#/components/schemas/ServerMessageTranscriptTranscriptType'
        transcript:
          type: string
          description: This is the transcript content.
    ServerMessageUserInterruptedPhoneNumber:
      title: ServerMessageUserInterruptedPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageUserInterrupted:
      title: ServerMessageUserInterrupted
      required:
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageUserInterruptedPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "user-interrupted" is sent when the user interrupts the assistant.
          enum:
          - user-interrupted
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
    ServerMessageLanguageChangeDetectedPhoneNumber:
      title: ServerMessageLanguageChangeDetectedPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageLanguageChangeDetected:
      title: ServerMessageLanguageChangeDetected
      required:
      - language
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageLanguageChangeDetectedPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "language-change-detected" is sent when the transcriber is automatically switched based on the detected language.
          enum:
          - language-change-detected
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        language:
          type: string
          description: This is the language the transcriber is switched to.
    ServerMessageVoiceInputPhoneNumber:
      title: ServerMessageVoiceInputPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageVoiceInput:
      title: ServerMessageVoiceInput
      required:
      - input
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageVoiceInputPhoneNumber'
        type:
          type: string
          description: This is the type of the message. "voice-input" is sent when a generation is requested from voice provider.
          enum:
          - voice-input
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        input:
          type: string
          description: This is the voice input content
    ServerMessageVoiceRequestPhoneNumber:
      title: ServerMessageVoiceRequestPhoneNumber
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
      oneOf:
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - byo-phone-number
        - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - twilio
        - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vonage
        - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
      - required:
        - provider
        type: object
        allOf:
        - type: object
          properties:
            provider:
              type: string
              enum:
              - vapi
        - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
    ServerMessageVoiceRequest:
      title: ServerMessageVoiceRequest
      required:
      - sampleRate
      - text
      - type
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageVoiceRequestPhoneNumber'
        type:
          type: string
          description: |-
            This is the type of the message. "voice-request" is sent when using `assistant.voice={ "type": "custom-voice" }`.

            Here is what the request will look like:

            POST https://{assistant.voice.server.url}
            Content-Type: application/json

            {
              "messsage": {
                "type": "voice-request",
                "text": "Hello, world!",
                "sampleRate": 24000,
                ...other metadata about the call...
              }
            }

            The expected response is 1-channel 16-bit raw PCM audio at the sample rate specified in the request. Here is how the response will be piped to the transport:
            ```
            response.on('data', (chunk: Buffer) => {
              outputStream.write(chunk);
            });
            ```
          enum:
          - voice-request
        timestamp:
          type: number
          description: This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
          format: double
          nullable: true
        artifact:
          $ref: '#/components/schemas/Artifact'
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        call:
          $ref: '#/components/schemas/Call'
        text:
          type: string
          description: This is the text to be synthesized.
        sampleRate:
          type: number
          description: This is the sample rate to be synthesized.
          format: double
    ServerMessageMessage:
      title: ServerMessageMessage
      description: |-
        These are all the messages that can be sent to your server before, after and during the call. Configure the messages you'd like to receive in `assistant.serverMessages`.

        The server where the message is sent is determined by the following precedence order:

        1. `tool.server.url` (if configured, and only for "tool-calls" message)
        2. `assistant.serverUrl` (if configure)
        3. `phoneNumber.serverUrl` (if configured)
        4. `org.serverUrl` (if configured)
      oneOf:
      - $ref: '#/components/schemas/ServerMessageAssistantRequest'
      - $ref: '#/components/schemas/ServerMessageConversationUpdate'
      - $ref: '#/components/schemas/ServerMessageEndOfCallReport'
      - $ref: '#/components/schemas/ServerMessageHang'
      - $ref: '#/components/schemas/ServerMessageKnowledgeBaseRequest'
      - $ref: '#/components/schemas/ServerMessageModelOutput'
      - $ref: '#/components/schemas/ServerMessagePhoneCallControl'
      - $ref: '#/components/schemas/ServerMessageSpeechUpdate'
      - $ref: '#/components/schemas/ServerMessageStatusUpdate'
      - $ref: '#/components/schemas/ServerMessageToolCalls'
      - $ref: '#/components/schemas/ServerMessageTransferDestinationRequest'
      - $ref: '#/components/schemas/ServerMessageTransferUpdate'
      - $ref: '#/components/schemas/ServerMessageTranscript'
      - $ref: '#/components/schemas/ServerMessageUserInterrupted'
      - $ref: '#/components/schemas/ServerMessageLanguageChangeDetected'
      - $ref: '#/components/schemas/ServerMessageVoiceInput'
      - $ref: '#/components/schemas/ServerMessageVoiceRequest'
    ServerMessage:
      title: ServerMessage
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ServerMessageMessage'
    ServerMessageResponseAssistantRequestDestination:
      title: ServerMessageResponseAssistantRequestDestination
      description: |-
        This is the destination to transfer the inbound call to. This will immediately transfer without using any assistants.

        If this is sent, `assistantId`, `assistant`, `squadId`, and `squad` are ignored.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ServerMessageResponseAssistantRequest:
      title: ServerMessageResponseAssistantRequest
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/ServerMessageResponseAssistantRequestDestination'
        assistantId:
          type: string
          description: "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          nullable: true
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
        squadId:
          type: string
          description: "This is the squad that will be used for the call. To use a transient squad, use `squad` instead."
          nullable: true
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
        error:
          type: string
          description: |-
            This is the error if the call shouldn't be accepted. This is spoken to the customer.

            If this is sent, `assistantId`, `assistant`, `squadId`, `squad`, and `destination` are ignored.
          nullable: true
    KnowledgeBaseResponseDocument:
      title: KnowledgeBaseResponseDocument
      required:
      - content
      - similarity
      type: object
      properties:
        content:
          type: string
          description: This is the content of the document.
        similarity:
          type: number
          description: This is the similarity score of the document.
          format: double
        uuid:
          type: string
          description: This is the uuid of the document.
          nullable: true
    ServerMessageResponseKnowledgeBaseRequest:
      title: ServerMessageResponseKnowledgeBaseRequest
      type: object
      properties:
        documents:
          type: array
          description: This is the list of documents that will be sent to the model alongside the `messages` to generate a response.
          nullable: true
          items:
            $ref: '#/components/schemas/KnowledgeBaseResponseDocument'
        message:
          $ref: '#/components/schemas/CustomMessage'
    ToolCallResultMessageItem:
      title: ToolCallResultMessageItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
    ToolCallResult:
      title: ToolCallResult
      required:
      - name
      - toolCallId
      type: object
      properties:
        message:
          type: array
          description: |-
            This is the message that will be spoken to the user.

            If this is not returned, assistant will speak:
            1. a `request-complete` or `request-failed` message from `tool.messages`, if it exists
            2. a response generated by the model, if not
          nullable: true
          items:
            $ref: '#/components/schemas/ToolCallResultMessageItem'
        name:
          type: string
          description: This is the name of the function the model called.
        toolCallId:
          type: string
          description: This is the unique identifier for the tool call.
        result:
          type: string
          description: |-
            This is the result if the tool call was successful. This is added to the conversation history.

            Further, if this is returned, assistant will speak:
            1. the `message`, if it exists and is of type `request-complete`
            2. a `request-complete` message from `tool.messages`, if it exists
            3. a response generated by the model, if neither exist
          nullable: true
        error:
          type: string
          description: |-
            This is the error if the tool call was not successful. This is added to the conversation history.

            Further, if this is returned, assistant will speak:
            1. the `message`, if it exists and is of type `request-failed`
            2. a `request-failed` message from `tool.messages`, if it exists
            3. a response generated by the model, if neither exist
          nullable: true
    ServerMessageResponseToolCalls:
      title: ServerMessageResponseToolCalls
      type: object
      properties:
        results:
          type: array
          description: These are the results of the "tool-calls" message.
          nullable: true
          items:
            $ref: '#/components/schemas/ToolCallResult'
        error:
          type: string
          description: This is the error message if the tool call was not successful.
          nullable: true
    ServerMessageResponseTransferDestinationRequestDestination:
      title: ServerMessageResponseTransferDestinationRequestDestination
      description: This is the destination you'd like the call to be transferred to.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - assistant
        - $ref: '#/components/schemas/TransferDestinationAssistant'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - step
        - $ref: '#/components/schemas/TransferDestinationStep'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ServerMessageResponseTransferDestinationRequest:
      title: ServerMessageResponseTransferDestinationRequest
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/ServerMessageResponseTransferDestinationRequestDestination'
        error:
          type: string
          description: This is the error message if the transfer should not be made.
          nullable: true
    ServerMessageResponseVoiceRequest:
      title: ServerMessageResponseVoiceRequest
      required:
      - data
      type: object
      properties:
        data:
          type: string
          description: |-
            DO NOT respond to a `voice-request` webhook with this schema of { data }. This schema just exists to document what the response should look like. Follow these instructions:

            Here is what the request will look like:

            POST https://{assistant.voice.server.url}
            Content-Type: application/json

            {
              "messsage": {
                "type": "voice-request",
                "text": "Hello, world!",
                "sampleRate": 24000,
                ...other metadata about the call...
              }
            }

            The expected response is 1-channel 16-bit raw PCM audio at the sample rate specified in the request. Here is how the response will be piped to the transport:
            ```
            response.on('data', (chunk: Buffer) => {
              outputStream.write(chunk);
            });
            ```
    ServerMessageResponseMessageResponse:
      title: ServerMessageResponseMessageResponse
      description: |-
        This is the response that is expected from the server to the message.

        Note: Most messages don't expect a response. Only "assistant-request", "tool-calls" and "transfer-destination-request" do.
      oneOf:
      - $ref: '#/components/schemas/ServerMessageResponseAssistantRequest'
      - $ref: '#/components/schemas/ServerMessageResponseKnowledgeBaseRequest'
      - $ref: '#/components/schemas/ServerMessageResponseToolCalls'
      - $ref: '#/components/schemas/ServerMessageResponseTransferDestinationRequest'
      - $ref: '#/components/schemas/ServerMessageResponseVoiceRequest'
    ServerMessageResponse:
      title: ServerMessageResponse
      required:
      - messageResponse
      type: object
      properties:
        messageResponse:
          $ref: '#/components/schemas/ServerMessageResponseMessageResponse'
    ClientInboundMessageAddMessage:
      title: ClientInboundMessageAddMessage
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/OpenAiMessage'
        triggerResponseEnabled:
          type: boolean
          description: |-
            This is the flag to trigger a response, or to insert the message into the conversation history silently. Defaults to `true`.

            Usage:
            - Use `true` to trigger a response.
            - Use `false` to insert the message into the conversation history silently.

            @default true
          nullable: true
    ClientInboundMessageControlControl:
      title: ClientInboundMessageControlControl
      type: string
      description: This is the control action
      enum:
      - mute-assistant
      - unmute-assistant
      - say-first-message
    ClientInboundMessageControl:
      title: ClientInboundMessageControl
      required:
      - control
      type: object
      properties:
        control:
          $ref: '#/components/schemas/ClientInboundMessageControlControl'
    ClientInboundMessageSay:
      title: ClientInboundMessageSay
      type: object
      properties:
        content:
          type: string
          description: This is the content to say.
          nullable: true
        endCallAfterSpoken:
          type: boolean
          description: This is the flag to end call after content is spoken.
          nullable: true
        interruptionsEnabled:
          type: boolean
          description: This is the flag for whether the message is interruptible.
          nullable: true
    ClientInboundMessageEndCall:
      title: ClientInboundMessageEndCall
      type: object
      properties: {}
    ClientInboundMessageTransferDestination:
      title: ClientInboundMessageTransferDestination
      description: This is the destination to transfer the call to.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - number
        - $ref: '#/components/schemas/TransferDestinationNumber'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - sip
        - $ref: '#/components/schemas/TransferDestinationSip'
    ClientInboundMessageTransfer:
      title: ClientInboundMessageTransfer
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/ClientInboundMessageTransferDestination'
        content:
          type: string
          description: This is the content to say.
          nullable: true
    ClientInboundMessageMessage:
      title: ClientInboundMessageMessage
      description: These are the messages that can be sent from client-side SDKs to control the call.
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - add-message
        - $ref: '#/components/schemas/ClientInboundMessageAddMessage'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - control
        - $ref: '#/components/schemas/ClientInboundMessageControl'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - say
        - $ref: '#/components/schemas/ClientInboundMessageSay'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - end-call
        - $ref: '#/components/schemas/ClientInboundMessageEndCall'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - transfer
        - $ref: '#/components/schemas/ClientInboundMessageTransfer'
    ClientInboundMessage:
      title: ClientInboundMessage
      required:
      - message
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ClientInboundMessageMessage'
    UserMessage:
      title: UserMessage
      required:
      - endTime
      - message
      - role
      - secondsFromStart
      - time
      type: object
      properties:
        role:
          type: string
          description: The role of the user in the conversation.
        message:
          type: string
          description: The message content from the user.
        time:
          type: number
          description: The timestamp when the message was sent.
          format: double
        endTime:
          type: number
          description: The timestamp when the message ended.
          format: double
        secondsFromStart:
          type: number
          description: The number of seconds from the start of the conversation.
          format: double
        duration:
          type: number
          description: The duration of the message in seconds.
          format: double
          nullable: true
    SystemMessage:
      title: SystemMessage
      required:
      - message
      - role
      - secondsFromStart
      - time
      type: object
      properties:
        role:
          type: string
          description: The role of the system in the conversation.
        message:
          type: string
          description: The message content from the system.
        time:
          type: number
          description: The timestamp when the message was sent.
          format: double
        secondsFromStart:
          type: number
          description: The number of seconds from the start of the conversation.
          format: double
    BotMessage:
      title: BotMessage
      required:
      - endTime
      - message
      - role
      - secondsFromStart
      - time
      type: object
      properties:
        role:
          type: string
          description: The role of the bot in the conversation.
        message:
          type: string
          description: The message content from the bot.
        time:
          type: number
          description: The timestamp when the message was sent.
          format: double
        endTime:
          type: number
          description: The timestamp when the message ended.
          format: double
        secondsFromStart:
          type: number
          description: The number of seconds from the start of the conversation.
          format: double
        source:
          type: string
          description: The source of the message.
          nullable: true
        duration:
          type: number
          description: The duration of the message in seconds.
          format: double
          nullable: true
    ToolCallMessage:
      title: ToolCallMessage
      required:
      - message
      - role
      - secondsFromStart
      - time
      - toolCalls
      type: object
      properties:
        role:
          type: string
          description: The role of the tool call in the conversation.
        toolCalls:
          type: array
          description: The list of tool calls made during the conversation.
          items:
            type: object
            additionalProperties: true
        message:
          type: string
          description: The message content for the tool call.
        time:
          type: number
          description: The timestamp when the message was sent.
          format: double
        secondsFromStart:
          type: number
          description: The number of seconds from the start of the conversation.
          format: double
    ToolCallResultMessage:
      title: ToolCallResultMessage
      required:
      - name
      - result
      - role
      - secondsFromStart
      - time
      - toolCallId
      type: object
      properties:
        role:
          type: string
          description: The role of the tool call result in the conversation.
        toolCallId:
          type: string
          description: The ID of the tool call.
        name:
          type: string
          description: The name of the tool that returned the result.
        result:
          type: string
          description: The result of the tool call in JSON format.
        time:
          type: number
          description: The timestamp when the message was sent.
          format: double
        secondsFromStart:
          type: number
          description: The number of seconds from the start of the conversation.
          format: double
    TransportCostProvider:
      title: TransportCostProvider
      type: string
      enum:
      - twilio
      - vonage
      - vapi
    TransportCost:
      title: TransportCost
      required:
      - cost
      - minutes
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/TransportCostProvider'
        minutes:
          type: number
          description: This is the minutes of `transport` usage. This should match `call.endedAt` - `call.startedAt`.
          format: double
        cost:
          type: number
          description: This is the cost of the component in USD.
          format: double
    TranscriberCost:
      title: TranscriberCost
      required:
      - cost
      - minutes
      - transcriber
      type: object
      properties:
        transcriber:
          type: object
          additionalProperties: true
          description: |-
            This is the transcriber that was used during the call.

            This matches one of the below:
            - `call.assistant.transcriber`,
            - `call.assistantId->transcriber`,
            - `call.squad[n].assistant.transcriber`,
            - `call.squad[n].assistantId->transcriber`,
            - `call.squadId->[n].assistant.transcriber`,
            - `call.squadId->[n].assistantId->transcriber`.
        minutes:
          type: number
          description: "This is the minutes of `transcriber` usage. This should match `call.endedAt` - `call.startedAt` for single assistant calls, while squad calls will have multiple transcriber costs one for each assistant that was used."
          format: double
        cost:
          type: number
          description: This is the cost of the component in USD.
          format: double
    ModelCost:
      title: ModelCost
      required:
      - completionTokens
      - cost
      - model
      - promptTokens
      type: object
      properties:
        model:
          type: object
          additionalProperties: true
          description: |-
            This is the model that was used during the call.

            This matches one of the following:
            - `call.assistant.model`,
            - `call.assistantId->model`,
            - `call.squad[n].assistant.model`,
            - `call.squad[n].assistantId->model`,
            - `call.squadId->[n].assistant.model`,
            - `call.squadId->[n].assistantId->model`.
        promptTokens:
          type: number
          description: "This is the number of prompt tokens used in the call. These should be total prompt tokens used in the call for single assistant calls, while squad calls will have multiple model costs one for each assistant that was used."
          format: double
        completionTokens:
          type: number
          description: "This is the number of completion tokens generated in the call. These should be total completion tokens used in the call for single assistant calls, while squad calls will have multiple model costs one for each assistant that was used."
          format: double
        cost:
          type: number
          description: This is the cost of the component in USD.
          format: double
    VoiceCost:
      title: VoiceCost
      required:
      - characters
      - cost
      - voice
      type: object
      properties:
        voice:
          type: object
          additionalProperties: true
          description: |-
            This is the voice that was used during the call.

            This matches one of the following:
            - `call.assistant.voice`,
            - `call.assistantId->voice`,
            - `call.squad[n].assistant.voice`,
            - `call.squad[n].assistantId->voice`,
            - `call.squadId->[n].assistant.voice`,
            - `call.squadId->[n].assistantId->voice`.
        characters:
          type: number
          description: "This is the number of characters that were generated during the call. These should be total characters used in the call for single assistant calls, while squad calls will have multiple voice costs one for each assistant that was used."
          format: double
        cost:
          type: number
          description: This is the cost of the component in USD.
          format: double
    VapiCostSubType:
      title: VapiCostSubType
      type: string
      description: This is the sub type of the cost.
      enum:
      - normal
      - overage
    VapiCost:
      title: VapiCost
      required:
      - cost
      - minutes
      - subType
      type: object
      properties:
        subType:
          $ref: '#/components/schemas/VapiCostSubType'
        minutes:
          type: number
          description: This is the minutes of Vapi usage. This should match `call.endedAt` - `call.startedAt`.
          format: double
        cost:
          type: number
          description: This is the cost of the component in USD.
          format: double
    AnalysisCostAnalysisType:
      title: AnalysisCostAnalysisType
      type: string
      description: This is the type of analysis performed.
      enum:
      - summary
      - structuredData
      - successEvaluation
    AnalysisCost:
      title: AnalysisCost
      required:
      - analysisType
      - completionTokens
      - cost
      - model
      - promptTokens
      type: object
      properties:
        analysisType:
          $ref: '#/components/schemas/AnalysisCostAnalysisType'
        model:
          type: object
          additionalProperties: true
          description: This is the model that was used to perform the analysis.
        promptTokens:
          type: number
          description: This is the number of prompt tokens used in the analysis.
          format: double
        completionTokens:
          type: number
          description: This is the number of completion tokens generated in the analysis.
          format: double
        cost:
          type: number
          description: This is the cost of the component in USD.
          format: double
    VoicemailDetectionCostProvider:
      title: VoicemailDetectionCostProvider
      type: string
      description: This is the provider that was used to detect the voicemail.
      enum:
      - twilio
      - google
      - openai
    VoicemailDetectionCost:
      title: VoicemailDetectionCost
      required:
      - completionAudioTokens
      - completionTextTokens
      - cost
      - model
      - promptAudioTokens
      - promptTextTokens
      - provider
      type: object
      properties:
        model:
          type: object
          additionalProperties: true
          description: This is the model that was used to perform the analysis.
        provider:
          $ref: '#/components/schemas/VoicemailDetectionCostProvider'
        promptTextTokens:
          type: number
          description: This is the number of prompt text tokens used in the voicemail detection.
          format: double
        promptAudioTokens:
          type: number
          description: This is the number of prompt audio tokens used in the voicemail detection.
          format: double
        completionTextTokens:
          type: number
          description: This is the number of completion text tokens used in the voicemail detection.
          format: double
        completionAudioTokens:
          type: number
          description: This is the number of completion audio tokens used in the voicemail detection.
          format: double
        cost:
          type: number
          description: This is the cost of the component in USD.
          format: double
    FunctionToolWithToolCallMessagesItem:
      title: FunctionToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    FunctionToolWithToolCall:
      title: FunctionToolWithToolCall
      required:
      - toolCall
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/FunctionToolWithToolCallMessagesItem'
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GhlToolWithToolCallMessagesItem:
      title: GhlToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    GhlToolWithToolCall:
      title: GhlToolWithToolCall
      required:
      - metadata
      - toolCall
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/GhlToolWithToolCallMessagesItem'
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    MakeToolWithToolCallMessagesItem:
      title: MakeToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    MakeToolWithToolCall:
      title: MakeToolWithToolCall
      required:
      - metadata
      - toolCall
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/MakeToolWithToolCallMessagesItem'
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    BashToolWithToolCallMessagesItem:
      title: BashToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    BashToolWithToolCall:
      title: BashToolWithToolCall
      required:
      - name
      - subType
      - toolCall
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/BashToolWithToolCallMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - bash_20241022
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        name:
          type: string
          description: "The name of the tool, fixed to 'bash'"
          enum:
          - bash
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    ComputerToolWithToolCallMessagesItem:
      title: ComputerToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    ComputerToolWithToolCall:
      title: ComputerToolWithToolCall
      required:
      - displayHeightPx
      - displayWidthPx
      - name
      - subType
      - toolCall
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/ComputerToolWithToolCallMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - computer_20241022
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        name:
          type: string
          description: "The name of the tool, fixed to 'computer'"
          enum:
          - computer
        displayWidthPx:
          type: number
          description: The display width in pixels
          format: double
        displayHeightPx:
          type: number
          description: The display height in pixels
          format: double
        displayNumber:
          type: number
          description: Optional display number
          format: double
          nullable: true
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    TextEditorToolWithToolCallMessagesItem:
      title: TextEditorToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    TextEditorToolWithToolCall:
      title: TextEditorToolWithToolCall
      required:
      - name
      - subType
      - toolCall
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/TextEditorToolWithToolCallMessagesItem'
        subType:
          type: string
          description: The sub type of tool.
          enum:
          - text_editor_20241022
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        name:
          type: string
          description: "The name of the tool, fixed to 'str_replace_editor'"
          enum:
          - str_replace_editor
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GoogleCalendarCreateEventToolWithToolCallMessagesItem:
      title: GoogleCalendarCreateEventToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    GoogleCalendarCreateEventToolWithToolCall:
      title: GoogleCalendarCreateEventToolWithToolCall
      required:
      - toolCall
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/GoogleCalendarCreateEventToolWithToolCallMessagesItem'
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    GoogleSheetsRowAppendToolWithToolCallMessagesItem:
      title: GoogleSheetsRowAppendToolWithToolCallMessagesItem
      oneOf:
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-start
        - $ref: '#/components/schemas/ToolMessageStart'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-complete
        - $ref: '#/components/schemas/ToolMessageComplete'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-failed
        - $ref: '#/components/schemas/ToolMessageFailed'
      - required:
        - type
        type: object
        allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
              - request-response-delayed
        - $ref: '#/components/schemas/ToolMessageDelayed'
    GoogleSheetsRowAppendToolWithToolCall:
      title: GoogleSheetsRowAppendToolWithToolCall
      required:
      - toolCall
      - type
      type: object
      properties:
        async:
          type: boolean
          description: |-
            This determines if the tool is async.

            If async, the assistant will move forward without waiting for your server to respond. This is useful if you just want to trigger something on your server.

            If sync, the assistant will wait for your server to respond. This is useful if want assistant to respond with the result from your server.

            Defaults to synchronous (`false`).
          nullable: true
        messages:
          type: array
          description: |-
            These are the messages that will be spoken to the user as the tool is running.

            For some tools, this is auto-filled based on special fields like `tool.destinations`. For others like the function tool, these can be custom configured.
          nullable: true
          items:
            $ref: '#/components/schemas/GoogleSheetsRowAppendToolWithToolCallMessagesItem'
        type:
          type: string
          description: The type of tool. "google.sheets.row.append" for Google Sheets tool.
          enum:
          - google.sheets.row.append
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
        server:
          $ref: '#/components/schemas/Server'
    FallbackNeetsVoice:
      title: FallbackNeetsVoice
      type: object
      properties:
        voiceId:
          nullable: true
    NeetsVoice:
      title: NeetsVoice
      type: object
      properties:
        voiceId:
          nullable: true
    DeepgramTranscriberLanguage:
      title: DeepgramTranscriberLanguage
      type: string
      enum:
      - bg
      - ca
      - cs
      - da
      - da-DK
      - de
      - de-CH
      - el
      - en
      - en-AU
      - en-GB
      - en-IN
      - en-NZ
      - en-US
      - es
      - es-419
      - es-LATAM
      - et
      - fi
      - fr
      - fr-CA
      - hi
      - hi-Latn
      - hu
      - id
      - it
      - ja
      - ko
      - ko-KR
      - lt
      - lv
      - ms
      - multi
      - nl
      - nl-BE
      - "no"
      - pl
      - pt
      - pt-BR
      - ro
      - ru
      - sk
      - sv
      - sv-SE
      - ta
      - taq
      - th
      - th-TH
      - tr
      - uk
      - vi
      - zh
      - zh-CN
      - zh-Hans
      - zh-Hant
      - zh-TW
    DeepgramTranscriberModel:
      title: DeepgramTranscriberModel
      type: string
      enum:
      - nova-2
      - nova-2-general
      - nova-2-meeting
      - nova-2-phonecall
      - nova-2-finance
      - nova-2-conversationalai
      - nova-2-voicemail
      - nova-2-video
      - nova-2-medical
      - nova-2-drivethru
      - nova-2-automotive
      - nova
      - nova-general
      - nova-phonecall
      - nova-medical
      - enhanced
      - enhanced-general
      - enhanced-meeting
      - enhanced-phonecall
      - enhanced-finance
      - base
      - base-general
      - base-meeting
      - base-phonecall
      - base-finance
      - base-conversationalai
      - base-voicemail
      - base-video
    FallbackDeepgramTranscriberLanguage:
      title: FallbackDeepgramTranscriberLanguage
      type: string
      enum:
      - bg
      - ca
      - cs
      - da
      - da-DK
      - de
      - de-CH
      - el
      - en
      - en-AU
      - en-GB
      - en-IN
      - en-NZ
      - en-US
      - es
      - es-419
      - es-LATAM
      - et
      - fi
      - fr
      - fr-CA
      - hi
      - hi-Latn
      - hu
      - id
      - it
      - ja
      - ko
      - ko-KR
      - lt
      - lv
      - ms
      - multi
      - nl
      - nl-BE
      - "no"
      - pl
      - pt
      - pt-BR
      - ro
      - ru
      - sk
      - sv
      - sv-SE
      - ta
      - taq
      - th
      - th-TH
      - tr
      - uk
      - vi
      - zh
      - zh-CN
      - zh-Hans
      - zh-Hant
      - zh-TW
    FallbackDeepgramTranscriberModel:
      title: FallbackDeepgramTranscriberModel
      type: string
      enum:
      - nova-2
      - nova-2-general
      - nova-2-meeting
      - nova-2-phonecall
      - nova-2-finance
      - nova-2-conversationalai
      - nova-2-voicemail
      - nova-2-video
      - nova-2-medical
      - nova-2-drivethru
      - nova-2-automotive
      - nova
      - nova-general
      - nova-phonecall
      - nova-medical
      - enhanced
      - enhanced-general
      - enhanced-meeting
      - enhanced-phonecall
      - enhanced-finance
      - base
      - base-general
      - base-meeting
      - base-phonecall
      - base-finance
      - base-conversationalai
      - base-voicemail
      - base-video
    TransferMode:
      title: TransferMode
      type: string
      enum:
      - rolling-history
      - swap-system-message-in-history
    PunctuationBoundary:
      title: PunctuationBoundary
      type: string
      enum:
      - 。
      - ，
      - "."
      - '!'
      - '?'
      - ;
      - )
      - ،
      - ۔
      - ।
      - ॥
      - '|'
      - '||'
      - ","
      - ':'
    call_body:
      type: object
      properties:
        customers:
          type: array
          description: |-
            This is used to issue batch calls to multiple customers.

            Only relevant for `outboundPhoneCall`. To call a single customer, use `customer` instead.
          nullable: true
          items:
            $ref: '#/components/schemas/CreateCustomerDto'
        name:
          type: string
          description: This is the name of the call. This is just for your own reference.
          nullable: true
        schedulePlan:
          $ref: '#/components/schemas/SchedulePlan'
        assistantId:
          type: string
          description: "This is the assistant that will be used for the call. To use a transient assistant, use `assistant` instead."
          nullable: true
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
        squadId:
          type: string
          description: "This is the squad that will be used for the call. To use a transient squad, use `squad` instead."
          nullable: true
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
        phoneNumberId:
          type: string
          description: |-
            This is the phone number that will be used for the call. To use a transient number, use `phoneNumber` instead.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          nullable: true
        phoneNumber:
          $ref: '#/components/schemas/ImportTwilioPhoneNumberDto'
        customerId:
          type: string
          description: |-
            This is the customer that will be called. To call a transient customer , use `customer` instead.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          nullable: true
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
    call_id_body:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the call. This is just for your own reference.
          nullable: true
    assistant_id_body:
      type: object
      properties:
        transcriber:
          $ref: '#/components/schemas/UpdateAssistantDtoTranscriber'
        model:
          $ref: '#/components/schemas/UpdateAssistantDtoModel'
        voice:
          $ref: '#/components/schemas/UpdateAssistantDtoVoice'
        firstMessage:
          type: string
          description: |-
            This is the first message that the assistant will say. This can also be a URL to a containerized audio file (mp3, wav, etc.).

            If unspecified, assistant will wait for user to speak and use the model to respond once they speak.
          nullable: true
        firstMessageInterruptionsEnabled:
          type: boolean
          nullable: true
        firstMessageMode:
          $ref: '#/components/schemas/UpdateAssistantDtoFirstMessageMode'
        voicemailDetection:
          $ref: '#/components/schemas/UpdateAssistantDtoVoicemailDetection'
        clientMessages:
          type: array
          description: "These are the messages that will be sent to your Client SDKs. Default is conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started. You can check the shape of the messages in ClientMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateAssistantDtoClientMessagesItem'
        serverMessages:
          type: array
          description: "These are the messages that will be sent to your Server URL. Default is conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted. You can check the shape of the messages in ServerMessage schema."
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateAssistantDtoServerMessagesItem'
        silenceTimeoutSeconds:
          type: number
          description: |-
            How many seconds of silence to wait before ending the call. Defaults to 30.

            @default 30
          format: double
          nullable: true
        maxDurationSeconds:
          type: number
          description: |-
            This is the maximum number of seconds that the call will last. When the call reaches this duration, it will be ended.

            @default 600 (10 minutes)
          format: double
          nullable: true
        backgroundSound:
          $ref: '#/components/schemas/UpdateAssistantDtoBackgroundSound'
        backgroundDenoisingEnabled:
          type: boolean
          description: |-
            This enables filtering of noise and background speech while the user is talking.

            Default `false` while in beta.

            @default false
          nullable: true
        modelOutputInMessagesEnabled:
          type: boolean
          description: |-
            This determines whether the model's output is used in conversation history rather than the transcription of assistant's speech.

            Default `false` while in beta.

            @default false
          nullable: true
        transportConfigurations:
          type: array
          description: "These are the configurations to be passed to the transport providers of assistant's calls, like Twilio. You can store multiple configurations for different transport providers. For a call, only the configuration matching the call transport provider is used."
          nullable: true
          items:
            $ref: '#/components/schemas/TransportConfigurationTwilio'
        observabilityPlan:
          $ref: '#/components/schemas/LangfuseObservabilityPlan'
        credentials:
          type: array
          description: "These are dynamic credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can supplement an additional credentials using this. Dynamic credentials override existing credentials."
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateAssistantDtoCredentialsItem'
        name:
          type: string
          description: |-
            This is the name of the assistant.

            This is required when you want to transfer between assistants in a call.
          nullable: true
        voicemailMessage:
          type: string
          description: |-
            This is the message that the assistant will say if the call is forwarded to voicemail.

            If unspecified, it will hang up.
          nullable: true
        endCallMessage:
          type: string
          description: |-
            This is the message that the assistant will say if it ends the call.

            If unspecified, it will hang up without saying anything.
          nullable: true
        endCallPhrases:
          type: array
          description: "This list contains phrases that, if spoken by the assistant, will trigger the call to be hung up. Case insensitive."
          nullable: true
          items:
            type: string
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
        metadata:
          type: object
          additionalProperties: true
          description: This is for metadata you want to store on the assistant.
          nullable: true
        analysisPlan:
          $ref: '#/components/schemas/AnalysisPlan'
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
        messagePlan:
          $ref: '#/components/schemas/MessagePlan'
        startSpeakingPlan:
          $ref: '#/components/schemas/StartSpeakingPlan'
        stopSpeakingPlan:
          $ref: '#/components/schemas/StopSpeakingPlan'
        monitorPlan:
          $ref: '#/components/schemas/MonitorPlan'
        credentialIds:
          type: array
          description: "These are the credentials that will be used for the assistant calls. By default, all the credentials are available for use in the call but you can provide a subset using this."
          nullable: true
          items:
            type: string
        server:
          $ref: '#/components/schemas/Server'
        hooks:
          type: array
          description: This is a set of actions that will be performed on certain events.
          nullable: true
          items:
            $ref: '#/components/schemas/AssistantHooks'
        keypadInputPlan:
          $ref: '#/components/schemas/KeypadInputPlan'
    file_body:
      type: object
      properties:
        file:
          type: string
          format: binary
    file_id_body:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the file. This is just for your own reference.
          nullable: true
    workflow_id_body:
      type: object
      properties:
        nodes:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/UpdateWorkflowDtoNodesItem'
        model:
          $ref: '#/components/schemas/UpdateWorkflowDtoModel'
        name:
          type: string
          nullable: true
        edges:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Edge'
    squad_id_body:
      required:
      - members
      type: object
      properties:
        name:
          type: string
          description: This is the name of the squad.
          nullable: true
        members:
          type: array
          description: |-
            This is the list of assistants that make up the squad.

            The call will start with the first assistant in the list.
          items:
            $ref: '#/components/schemas/SquadMemberDto'
        membersOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
    testsuite_body:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the test suite.
          nullable: true
        phoneNumberId:
          type: string
          description: This is the phone number ID associated with this test suite.
          nullable: true
        testerPlan:
          $ref: '#/components/schemas/TesterPlan'
        targetPlan:
          $ref: '#/components/schemas/TargetPlan'
    testsuite_id_body:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the test suite.
          nullable: true
        phoneNumberId:
          type: string
          description: This is the phone number ID associated with this test suite.
          nullable: true
        testerPlan:
          $ref: '#/components/schemas/TesterPlan'
        targetPlan:
          $ref: '#/components/schemas/TargetPlan'
    testSuiteId_run_body:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the test suite run.
          nullable: true
    run_id_body:
      type: object
      properties:
        name:
          type: string
          description: This is the name of the test suite run.
          nullable: true
    analytics_body:
      required:
      - queries
      type: object
      properties:
        queries:
          type: array
          description: This is the list of metric queries you want to perform.
          items:
            $ref: '#/components/schemas/AnalyticsQuery'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
