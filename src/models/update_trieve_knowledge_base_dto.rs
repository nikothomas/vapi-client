/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateTrieveKnowledgeBaseDto {
    /// This is the name of the knowledge base.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// This is the searching plan used when searching for relevant chunks from the vector store.  You should configure this if you're running into these issues: - Too much unnecessary context is being fed as knowledge base context. - Not enough relevant context is being fed as knowledge base context.
    #[serde(rename = "searchPlan", skip_serializing_if = "Option::is_none")]
    pub search_plan: Option<models::TrieveKnowledgeBaseSearchPlan>,
    #[serde(rename = "createPlan", skip_serializing_if = "Option::is_none")]
    pub create_plan: Option<models::TrieveKnowledgeBaseCreatePlan>,
}

impl UpdateTrieveKnowledgeBaseDto {
    pub fn new() -> UpdateTrieveKnowledgeBaseDto {
        UpdateTrieveKnowledgeBaseDto {
            name: None,
            search_plan: None,
            create_plan: None,
        }
    }
}

