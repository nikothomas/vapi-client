/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::OpenApi;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, OpenApi)]
pub struct ClientMessageToolCallsResult {
    /// This is the type of the message. \"tool-calls-result\" is sent to forward the result of a tool call to the client.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// This is the result of the tool call.
    #[serde(rename = "toolCallResult")]
    pub tool_call_result: serde_json::Value,
}

impl ClientMessageToolCallsResult {
    pub fn new(r#type: Type, tool_call_result: serde_json::Value) -> ClientMessageToolCallsResult {
        ClientMessageToolCallsResult {
            r#type,
            tool_call_result,
        }
    }
}
/// This is the type of the message. \"tool-calls-result\" is sent to forward the result of a tool call to the client.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, OpenApi)]
pub enum Type {
    #[serde(rename = "tool-calls-result")]
    ToolCallsResult,
}

impl Default for Type {
    fn default() -> Type {
        Self::ToolCallsResult
    }
}
