/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalysisPlan {
    #[serde(rename = "summaryPlan", skip_serializing_if = "Option::is_none")]
    pub summary_plan: Option<models::SummaryPlan>,
    #[serde(rename = "structuredDataPlan", skip_serializing_if = "Option::is_none")]
    pub structured_data_plan: Option<models::StructuredDataPlan>,
    /// This is an array of structured data plan catalogs. Each entry includes a `key` and a `plan` for generating the structured data from the call. This outputs to `call.analysis.structuredDataMulti`.
    #[serde(rename = "structuredDataMultiPlan", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub structured_data_multi_plan: Option<Option<Vec<models::StructuredDataMultiPlan>>>,
    #[serde(rename = "successEvaluationPlan", skip_serializing_if = "Option::is_none")]
    pub success_evaluation_plan: Option<models::SuccessEvaluationPlan>,
}

impl AnalysisPlan {
    pub fn new() -> AnalysisPlan {
        AnalysisPlan {
            summary_plan: None,
            structured_data_plan: None,
            structured_data_multi_plan: None,
            success_evaluation_plan: None,
        }
    }
}

