/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TranscriptPlan {
    /// This determines whether the transcript is stored in `call.artifact.transcript`. Defaults to true.  @default true
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// This is the name of the assistant in the transcript. Defaults to 'AI'.  Usage: - If you want to change the name of the assistant in the transcript, set this. Example, here is what the transcript would look like with `assistantName` set to 'Buyer': ``` User: Hello, how are you? Buyer: I'm fine. User: Do you want to buy a car? Buyer: No. ```  @default 'AI'
    #[serde(rename = "assistantName", skip_serializing_if = "Option::is_none")]
    pub assistant_name: Option<String>,
    /// This is the name of the user in the transcript. Defaults to 'User'.  Usage: - If you want to change the name of the user in the transcript, set this. Example, here is what the transcript would look like with `userName` set to 'Seller': ``` Seller: Hello, how are you? AI: I'm fine. Seller: Do you want to buy a car? AI: No. ```  @default 'User'
    #[serde(rename = "userName", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<String>,
}

impl TranscriptPlan {
    pub fn new() -> TranscriptPlan {
        TranscriptPlan {
            enabled: None,
            assistant_name: None,
            user_name: None,
        }
    }
}

