/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateTestSuiteTestVoiceDto {
    /// These are the scorers used to evaluate the test.
    #[serde(rename = "scorers")]
    pub scorers: Vec<models::TestSuiteTestScorerAi>,
    /// This is the script to be used for the voice test.
    #[serde(rename = "script")]
    pub script: String,
    /// This is the number of attempts allowed for the test.
    #[serde(rename = "numAttempts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub num_attempts: Option<Option<f64>>,
    /// This is the name of the test.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
}

impl CreateTestSuiteTestVoiceDto {
    pub fn new(scorers: Vec<models::TestSuiteTestScorerAi>, script: String) -> CreateTestSuiteTestVoiceDto {
        CreateTestSuiteTestVoiceDto {
            scorers,
            script,
            num_attempts: None,
            name: None,
        }
    }
}

