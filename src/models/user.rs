/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::ToSchema;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, ToSchema)]
pub struct User {
    /// This is the unique identifier for the profile or user.
    #[serde(rename = "id")]
    pub id: String,
    /// This is the ISO 8601 date-time string of when the profile was created.
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// This is the ISO 8601 date-time string of when the profile was last updated.
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    /// This is the email of the user that is associated with the profile.
    #[serde(rename = "email")]
    pub email: String,
    /// This is the full name of the user that is associated with the profile.
    #[serde(rename = "fullName", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
}

impl User {
    pub fn new(id: String, created_at: String, updated_at: String, email: String) -> User {
        User {
            id,
            created_at,
            updated_at,
            email,
            full_name: None,
        }
    }
}
