/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientMessageSpeechUpdate {
    /// This is the type of the message. \"speech-update\" is sent whenever assistant or user start or stop speaking.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// This is the status of the speech update.
    #[serde(rename = "status")]
    pub status: Status,
    /// This is the role which the speech update is for.
    #[serde(rename = "role")]
    pub role: Role,
}

impl ClientMessageSpeechUpdate {
    pub fn new(r#type: Type, status: Status, role: Role) -> ClientMessageSpeechUpdate {
        ClientMessageSpeechUpdate {
            r#type,
            status,
            role,
        }
    }
}
/// This is the type of the message. \"speech-update\" is sent whenever assistant or user start or stop speaking.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "speech-update")]
    SpeechUpdate,
}

impl Default for Type {
    fn default() -> Type {
        Self::SpeechUpdate
    }
}
/// This is the status of the speech update.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "started")]
    Started,
    #[serde(rename = "stopped")]
    Stopped,
}

impl Default for Status {
    fn default() -> Status {
        Self::Started
    }
}
/// This is the role which the speech update is for.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "assistant")]
    Assistant,
    #[serde(rename = "user")]
    User,
}

impl Default for Role {
    fn default() -> Role {
        Self::Assistant
    }
}
