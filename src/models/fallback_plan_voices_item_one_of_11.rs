/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FallbackPlanVoicesItemOneOf11 {
    #[serde(rename = "voiceId")]
    pub voice_id: models::FallbackSmallestAiVoiceId,
    /// Smallest AI voice model to use. Defaults to 'lightning' when not specified.
    #[serde(rename = "model", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub model: Option<Option<Model>>,
    /// This is the speed multiplier that will be used.
    #[serde(rename = "speed", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub speed: Option<Option<f64>>,
    #[serde(rename = "chunkPlan", skip_serializing_if = "Option::is_none")]
    pub chunk_plan: Option<models::ChunkPlan>,
    #[serde(rename = "provider")]
    pub provider: Provider,
}

impl FallbackPlanVoicesItemOneOf11 {
    pub fn new(voice_id: models::FallbackSmallestAiVoiceId, provider: Provider) -> FallbackPlanVoicesItemOneOf11 {
        FallbackPlanVoicesItemOneOf11 {
            voice_id,
            model: None,
            speed: None,
            chunk_plan: None,
            provider,
        }
    }
}
/// Smallest AI voice model to use. Defaults to 'lightning' when not specified.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Model {
    #[serde(rename = "lightning")]
    Lightning,
}

impl Default for Model {
    fn default() -> Model {
        Self::Lightning
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Provider {
    #[serde(rename = "smallest-ai")]
    SmallestAi,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::SmallestAi
    }
}

