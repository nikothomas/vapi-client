/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GoogleVoicemailDetectionPlan {
    /// This is the provider to use for voicemail detection.
    #[serde(rename = "provider")]
    pub provider: Provider,
    /// This is how long should we listen in order to determine if we were sent to voicemail or not?  @default 15
    #[serde(rename = "voicemailExpectedDurationSeconds")]
    pub voicemail_expected_duration_seconds: f64,
}

impl GoogleVoicemailDetectionPlan {
    pub fn new(provider: Provider, voicemail_expected_duration_seconds: f64) -> GoogleVoicemailDetectionPlan {
        GoogleVoicemailDetectionPlan {
            provider,
            voicemail_expected_duration_seconds,
        }
    }
}
/// This is the provider to use for voicemail detection.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Provider {
    #[serde(rename = "google")]
    Google,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::Google
    }
}

