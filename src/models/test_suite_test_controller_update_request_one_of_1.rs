/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TestSuiteTestControllerUpdateRequestOneOf1 {
    /// These are the scorers used to evaluate the test.
    #[serde(rename = "scorers", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub scorers: Option<Option<Vec<models::TestSuiteTestScorerAi>>>,
    /// This is the name of the test.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// This is the script to be used for the chat test.
    #[serde(rename = "script", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub script: Option<Option<String>>,
    /// This is the number of attempts allowed for the test.
    #[serde(rename = "numAttempts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub num_attempts: Option<Option<f64>>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl TestSuiteTestControllerUpdateRequestOneOf1 {
    pub fn new(r#type: Type) -> TestSuiteTestControllerUpdateRequestOneOf1 {
        TestSuiteTestControllerUpdateRequestOneOf1 {
            scorers: None,
            name: None,
            script: None,
            num_attempts: None,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "chat")]
    Chat,
}

impl Default for Type {
    fn default() -> Type {
        Self::Chat
    }
}

