/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeepgramVoiceIdEnum {
    #[serde(rename = "asteria")]
    Asteria,
    #[serde(rename = "luna")]
    Luna,
    #[serde(rename = "stella")]
    Stella,
    #[serde(rename = "athena")]
    Athena,
    #[serde(rename = "hera")]
    Hera,
    #[serde(rename = "orion")]
    Orion,
    #[serde(rename = "arcas")]
    Arcas,
    #[serde(rename = "perseus")]
    Perseus,
    #[serde(rename = "angus")]
    Angus,
    #[serde(rename = "orpheus")]
    Orpheus,
    #[serde(rename = "helios")]
    Helios,
    #[serde(rename = "zeus")]
    Zeus,

}

impl std::fmt::Display for DeepgramVoiceIdEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Asteria => write!(f, "asteria"),
            Self::Luna => write!(f, "luna"),
            Self::Stella => write!(f, "stella"),
            Self::Athena => write!(f, "athena"),
            Self::Hera => write!(f, "hera"),
            Self::Orion => write!(f, "orion"),
            Self::Arcas => write!(f, "arcas"),
            Self::Perseus => write!(f, "perseus"),
            Self::Angus => write!(f, "angus"),
            Self::Orpheus => write!(f, "orpheus"),
            Self::Helios => write!(f, "helios"),
            Self::Zeus => write!(f, "zeus"),
        }
    }
}

impl Default for DeepgramVoiceIdEnum {
    fn default() -> DeepgramVoiceIdEnum {
        Self::Asteria
    }
}

