/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateLangfuseCredentialDto {
    /// The public key for Langfuse project. Eg: pk-lf-...
    #[serde(rename = "publicKey")]
    pub public_key: String,
    /// The secret key for Langfuse project. Eg: sk-lf-... .This is not returned in the API.
    #[serde(rename = "apiKey")]
    pub api_key: String,
    /// The host URL for Langfuse project. Eg: https://cloud.langfuse.com
    #[serde(rename = "apiUrl")]
    pub api_url: String,
    /// This is the name of credential. This is just for your reference.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
}

impl CreateLangfuseCredentialDto {
    pub fn new(public_key: String, api_key: String, api_url: String) -> CreateLangfuseCredentialDto {
        CreateLangfuseCredentialDto {
            public_key,
            api_key,
            api_url,
            name: None,
        }
    }
}

