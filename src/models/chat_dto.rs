/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatDto {
    #[serde(rename = "messages")]
    pub messages: Vec<models::OpenAiMessage>,
    #[serde(rename = "assistantId", skip_serializing_if = "Option::is_none")]
    pub assistant_id: Option<String>,
    #[serde(rename = "assistant", skip_serializing_if = "Option::is_none")]
    pub assistant: Option<models::CreateAssistantDto>,
    #[serde(rename = "assistantOverrides", skip_serializing_if = "Option::is_none")]
    pub assistant_overrides: Option<models::AssistantOverrides>,
}

impl ChatDto {
    pub fn new(messages: Vec<models::OpenAiMessage>) -> ChatDto {
        ChatDto {
            messages,
            assistant_id: None,
            assistant: None,
            assistant_overrides: None,
        }
    }
}
