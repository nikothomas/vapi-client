/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KeypadInputPlan {
    /// This keeps track of whether the user has enabled keypad input. By default, it is off.  @default false
    #[serde(rename = "enabled", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<Option<bool>>,
    /// This is the time in seconds to wait before processing the input. If the input is not received within this time, the input will be ignored. If set to \"off\", the input will be processed when the user enters a delimiter or immediately if no delimiter is used.  @default 2
    #[serde(rename = "timeoutSeconds", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub timeout_seconds: Option<Option<f64>>,
    #[serde(rename = "delimiters", skip_serializing_if = "Option::is_none")]
    pub delimiters: Option<models::KeypadInputPlanDelimiters>,
}

impl KeypadInputPlan {
    pub fn new() -> KeypadInputPlan {
        KeypadInputPlan {
            enabled: None,
            timeout_seconds: None,
            delimiters: None,
        }
    }
}

