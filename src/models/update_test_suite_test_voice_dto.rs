/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::ToSchema;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, ToSchema)]
pub struct UpdateTestSuiteTestVoiceDto {
    /// These are the scorers used to evaluate the test.
    #[serde(rename = "scorers", skip_serializing_if = "Option::is_none")]
    pub scorers: Option<Vec<models::TestSuiteTestVoiceScorersInner>>,
    /// This is the name of the test.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// This is the script to be used for the voice test.
    #[serde(rename = "script", skip_serializing_if = "Option::is_none")]
    pub script: Option<String>,
    /// This is the number of attempts allowed for the test.
    #[serde(rename = "numAttempts", skip_serializing_if = "Option::is_none")]
    pub num_attempts: Option<f64>,
}

impl UpdateTestSuiteTestVoiceDto {
    pub fn new() -> UpdateTestSuiteTestVoiceDto {
        UpdateTestSuiteTestVoiceDto {
            scorers: None,
            name: None,
            script: None,
            num_attempts: None,
        }
    }
}
