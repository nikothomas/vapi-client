/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PlayHtVoiceLanguage : The language to use for the speech.
/// The language to use for the speech.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PlayHtVoiceLanguage {
    #[serde(rename = "afrikaans")]
    Afrikaans,
    #[serde(rename = "albanian")]
    Albanian,
    #[serde(rename = "amharic")]
    Amharic,
    #[serde(rename = "arabic")]
    Arabic,
    #[serde(rename = "bengali")]
    Bengali,
    #[serde(rename = "bulgarian")]
    Bulgarian,
    #[serde(rename = "catalan")]
    Catalan,
    #[serde(rename = "croatian")]
    Croatian,
    #[serde(rename = "czech")]
    Czech,
    #[serde(rename = "danish")]
    Danish,
    #[serde(rename = "dutch")]
    Dutch,
    #[serde(rename = "english")]
    English,
    #[serde(rename = "french")]
    French,
    #[serde(rename = "galician")]
    Galician,
    #[serde(rename = "german")]
    German,
    #[serde(rename = "greek")]
    Greek,
    #[serde(rename = "hebrew")]
    Hebrew,
    #[serde(rename = "hindi")]
    Hindi,
    #[serde(rename = "hungarian")]
    Hungarian,
    #[serde(rename = "indonesian")]
    Indonesian,
    #[serde(rename = "italian")]
    Italian,
    #[serde(rename = "japanese")]
    Japanese,
    #[serde(rename = "korean")]
    Korean,
    #[serde(rename = "malay")]
    Malay,
    #[serde(rename = "mandarin")]
    Mandarin,
    #[serde(rename = "polish")]
    Polish,
    #[serde(rename = "portuguese")]
    Portuguese,
    #[serde(rename = "russian")]
    Russian,
    #[serde(rename = "serbian")]
    Serbian,
    #[serde(rename = "spanish")]
    Spanish,
    #[serde(rename = "swedish")]
    Swedish,
    #[serde(rename = "tagalog")]
    Tagalog,
    #[serde(rename = "thai")]
    Thai,
    #[serde(rename = "turkish")]
    Turkish,
    #[serde(rename = "ukrainian")]
    Ukrainian,
    #[serde(rename = "urdu")]
    Urdu,
    #[serde(rename = "xhosa")]
    Xhosa,

}

impl std::fmt::Display for PlayHtVoiceLanguage {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Afrikaans => write!(f, "afrikaans"),
            Self::Albanian => write!(f, "albanian"),
            Self::Amharic => write!(f, "amharic"),
            Self::Arabic => write!(f, "arabic"),
            Self::Bengali => write!(f, "bengali"),
            Self::Bulgarian => write!(f, "bulgarian"),
            Self::Catalan => write!(f, "catalan"),
            Self::Croatian => write!(f, "croatian"),
            Self::Czech => write!(f, "czech"),
            Self::Danish => write!(f, "danish"),
            Self::Dutch => write!(f, "dutch"),
            Self::English => write!(f, "english"),
            Self::French => write!(f, "french"),
            Self::Galician => write!(f, "galician"),
            Self::German => write!(f, "german"),
            Self::Greek => write!(f, "greek"),
            Self::Hebrew => write!(f, "hebrew"),
            Self::Hindi => write!(f, "hindi"),
            Self::Hungarian => write!(f, "hungarian"),
            Self::Indonesian => write!(f, "indonesian"),
            Self::Italian => write!(f, "italian"),
            Self::Japanese => write!(f, "japanese"),
            Self::Korean => write!(f, "korean"),
            Self::Malay => write!(f, "malay"),
            Self::Mandarin => write!(f, "mandarin"),
            Self::Polish => write!(f, "polish"),
            Self::Portuguese => write!(f, "portuguese"),
            Self::Russian => write!(f, "russian"),
            Self::Serbian => write!(f, "serbian"),
            Self::Spanish => write!(f, "spanish"),
            Self::Swedish => write!(f, "swedish"),
            Self::Tagalog => write!(f, "tagalog"),
            Self::Thai => write!(f, "thai"),
            Self::Turkish => write!(f, "turkish"),
            Self::Ukrainian => write!(f, "ukrainian"),
            Self::Urdu => write!(f, "urdu"),
            Self::Xhosa => write!(f, "xhosa"),
        }
    }
}

impl Default for PlayHtVoiceLanguage {
    fn default() -> PlayHtVoiceLanguage {
        Self::Afrikaans
    }
}

