/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GlobalNodePlan {
    /// This is the flag to determine if this node is a global node  @default false
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// This is the condition that will be checked to determine if the global node should be executed.  @default ''
    #[serde(rename = "enterCondition", skip_serializing_if = "Option::is_none")]
    pub enter_condition: Option<String>,
}

impl GlobalNodePlan {
    pub fn new() -> GlobalNodePlan {
        GlobalNodePlan {
            enabled: None,
            enter_condition: None,
        }
    }
}
