/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AssistantServerMessagesItem {
    #[serde(rename = "conversation-update")]
    ConversationUpdate,
    #[serde(rename = "end-of-call-report")]
    EndOfCallReport,
    #[serde(rename = "function-call")]
    FunctionCall,
    #[serde(rename = "hang")]
    Hang,
    #[serde(rename = "language-changed")]
    LanguageChanged,
    #[serde(rename = "language-change-detected")]
    LanguageChangeDetected,
    #[serde(rename = "model-output")]
    ModelOutput,
    #[serde(rename = "phone-call-control")]
    PhoneCallControl,
    #[serde(rename = "speech-update")]
    SpeechUpdate,
    #[serde(rename = "status-update")]
    StatusUpdate,
    #[serde(rename = "transcript")]
    Transcript,
    #[serde(rename = "transcript[transcriptType='final']")]
    TranscriptLeftSquareBracketTranscriptTypeEqualQuoteFinalQuoteRightSquareBracket,
    #[serde(rename = "tool-calls")]
    ToolCalls,
    #[serde(rename = "transfer-destination-request")]
    TransferDestinationRequest,
    #[serde(rename = "transfer-update")]
    TransferUpdate,
    #[serde(rename = "user-interrupted")]
    UserInterrupted,
    #[serde(rename = "voice-input")]
    VoiceInput,

}

impl std::fmt::Display for AssistantServerMessagesItem {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ConversationUpdate => write!(f, "conversation-update"),
            Self::EndOfCallReport => write!(f, "end-of-call-report"),
            Self::FunctionCall => write!(f, "function-call"),
            Self::Hang => write!(f, "hang"),
            Self::LanguageChanged => write!(f, "language-changed"),
            Self::LanguageChangeDetected => write!(f, "language-change-detected"),
            Self::ModelOutput => write!(f, "model-output"),
            Self::PhoneCallControl => write!(f, "phone-call-control"),
            Self::SpeechUpdate => write!(f, "speech-update"),
            Self::StatusUpdate => write!(f, "status-update"),
            Self::Transcript => write!(f, "transcript"),
            Self::TranscriptLeftSquareBracketTranscriptTypeEqualQuoteFinalQuoteRightSquareBracket => write!(f, "transcript[transcriptType='final']"),
            Self::ToolCalls => write!(f, "tool-calls"),
            Self::TransferDestinationRequest => write!(f, "transfer-destination-request"),
            Self::TransferUpdate => write!(f, "transfer-update"),
            Self::UserInterrupted => write!(f, "user-interrupted"),
            Self::VoiceInput => write!(f, "voice-input"),
        }
    }
}

impl Default for AssistantServerMessagesItem {
    fn default() -> AssistantServerMessagesItem {
        Self::ConversationUpdate
    }
}

