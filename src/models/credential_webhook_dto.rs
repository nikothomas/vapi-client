/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CredentialWebhookDto {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "operation")]
    pub operation: Operation,
    #[serde(rename = "from")]
    pub from: String,
    #[serde(rename = "connectionId")]
    pub connection_id: String,
    #[serde(rename = "authMode")]
    pub auth_mode: AuthMode,
    #[serde(rename = "providerConfigKey")]
    pub provider_config_key: String,
    #[serde(rename = "provider")]
    pub provider: String,
    #[serde(rename = "environment")]
    pub environment: String,
    #[serde(rename = "success")]
    pub success: bool,
    #[serde(rename = "endUser")]
    pub end_user: models::CredentialEndUser,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<models::CredentialSessionError>,
}

impl CredentialWebhookDto {
    pub fn new(r#type: Type, operation: Operation, from: String, connection_id: String, auth_mode: AuthMode, provider_config_key: String, provider: String, environment: String, success: bool, end_user: models::CredentialEndUser) -> CredentialWebhookDto {
        CredentialWebhookDto {
            r#type,
            operation,
            from,
            connection_id,
            auth_mode,
            provider_config_key,
            provider,
            environment,
            success,
            end_user,
            error: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "auth")]
    Auth,
    #[serde(rename = "sync")]
    Sync,
    #[serde(rename = "forward")]
    Forward,
}

impl Default for Type {
    fn default() -> Type {
        Self::Auth
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operation {
    #[serde(rename = "creation")]
    Creation,
    #[serde(rename = "override")]
    Override,
    #[serde(rename = "refresh")]
    Refresh,
}

impl Default for Operation {
    fn default() -> Operation {
        Self::Creation
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AuthMode {
    #[serde(rename = "OAUTH2")]
    Oauth2,
    #[serde(rename = "API_KEY")]
    ApiKey,
    #[serde(rename = "BASIC")]
    Basic,
}

impl Default for AuthMode {
    fn default() -> AuthMode {
        Self::Oauth2
    }
}

