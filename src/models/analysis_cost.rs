/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalysisCost {
    #[serde(rename = "analysisType")]
    pub analysis_type: models::AnalysisCostAnalysisType,
    /// This is the model that was used to perform the analysis.
    #[serde(rename = "model")]
    pub model: std::collections::HashMap<String, serde_json::Value>,
    /// This is the number of prompt tokens used in the analysis.
    #[serde(rename = "promptTokens")]
    pub prompt_tokens: f64,
    /// This is the number of completion tokens generated in the analysis.
    #[serde(rename = "completionTokens")]
    pub completion_tokens: f64,
    /// This is the cost of the component in USD.
    #[serde(rename = "cost")]
    pub cost: f64,
}

impl AnalysisCost {
    pub fn new(analysis_type: models::AnalysisCostAnalysisType, model: std::collections::HashMap<String, serde_json::Value>, prompt_tokens: f64, completion_tokens: f64, cost: f64) -> AnalysisCost {
        AnalysisCost {
            analysis_type,
            model,
            prompt_tokens,
            completion_tokens,
            cost,
        }
    }
}

