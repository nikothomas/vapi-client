/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CallCostsItemOneOf3 {
    /// This is the voice that was used during the call.  This matches one of the following: - `call.assistant.voice`, - `call.assistantId->voice`, - `call.squad[n].assistant.voice`, - `call.squad[n].assistantId->voice`, - `call.squadId->[n].assistant.voice`, - `call.squadId->[n].assistantId->voice`.
    #[serde(rename = "voice")]
    pub voice: std::collections::HashMap<String, serde_json::Value>,
    /// This is the number of characters that were generated during the call. These should be total characters used in the call for single assistant calls, while squad calls will have multiple voice costs one for each assistant that was used.
    #[serde(rename = "characters")]
    pub characters: f64,
    /// This is the cost of the component in USD.
    #[serde(rename = "cost")]
    pub cost: f64,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl CallCostsItemOneOf3 {
    pub fn new(voice: std::collections::HashMap<String, serde_json::Value>, characters: f64, cost: f64, r#type: Type) -> CallCostsItemOneOf3 {
        CallCostsItemOneOf3 {
            voice,
            characters,
            cost,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "voice")]
    Voice,
}

impl Default for Type {
    fn default() -> Type {
        Self::Voice
    }
}

