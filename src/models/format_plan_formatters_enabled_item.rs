/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FormatPlanFormattersEnabledItem {
    #[serde(rename = "markdown")]
    Markdown,
    #[serde(rename = "asterisk")]
    Asterisk,
    #[serde(rename = "quote")]
    Quote,
    #[serde(rename = "dash")]
    Dash,
    #[serde(rename = "newline")]
    Newline,
    #[serde(rename = "colon")]
    Colon,
    #[serde(rename = "acronym")]
    Acronym,
    #[serde(rename = "dollarAmount")]
    DollarAmount,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "date")]
    Date,
    #[serde(rename = "time")]
    Time,
    #[serde(rename = "distance")]
    Distance,
    #[serde(rename = "unit")]
    Unit,
    #[serde(rename = "percentage")]
    Percentage,
    #[serde(rename = "phoneNumber")]
    PhoneNumber,
    #[serde(rename = "number")]
    Number,

}

impl std::fmt::Display for FormatPlanFormattersEnabledItem {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Markdown => write!(f, "markdown"),
            Self::Asterisk => write!(f, "asterisk"),
            Self::Quote => write!(f, "quote"),
            Self::Dash => write!(f, "dash"),
            Self::Newline => write!(f, "newline"),
            Self::Colon => write!(f, "colon"),
            Self::Acronym => write!(f, "acronym"),
            Self::DollarAmount => write!(f, "dollarAmount"),
            Self::Email => write!(f, "email"),
            Self::Date => write!(f, "date"),
            Self::Time => write!(f, "time"),
            Self::Distance => write!(f, "distance"),
            Self::Unit => write!(f, "unit"),
            Self::Percentage => write!(f, "percentage"),
            Self::PhoneNumber => write!(f, "phoneNumber"),
            Self::Number => write!(f, "number"),
        }
    }
}

impl Default for FormatPlanFormattersEnabledItem {
    fn default() -> FormatPlanFormattersEnabledItem {
        Self::Markdown
    }
}

