/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateS3CredentialDto {
    /// AWS access key ID.
    #[serde(rename = "awsAccessKeyId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub aws_access_key_id: Option<Option<String>>,
    /// AWS access key secret. This is not returned in the API.
    #[serde(rename = "awsSecretAccessKey", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub aws_secret_access_key: Option<Option<String>>,
    /// AWS region in which the S3 bucket is located.
    #[serde(rename = "region", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub region: Option<Option<String>>,
    /// AWS S3 bucket name.
    #[serde(rename = "s3BucketName", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub s3_bucket_name: Option<Option<String>>,
    /// The path prefix for the uploaded recording. Ex. \"recordings/\"
    #[serde(rename = "s3PathPrefix", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub s3_path_prefix: Option<Option<String>>,
    /// This is the name of credential. This is just for your reference.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
}

impl UpdateS3CredentialDto {
    pub fn new() -> UpdateS3CredentialDto {
        UpdateS3CredentialDto {
            aws_access_key_id: None,
            aws_secret_access_key: None,
            region: None,
            s3_bucket_name: None,
            s3_path_prefix: None,
            name: None,
        }
    }
}

