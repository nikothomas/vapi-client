/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServerMessageLanguageChangeDetected {
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<models::ServerMessageLanguageChangeDetectedPhoneNumber>,
    /// This is the type of the message. \"language-change-detected\" is sent when the transcriber is automatically switched based on the detected language.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// This is the timestamp of when the message was sent in milliseconds since Unix Epoch.
    #[serde(rename = "timestamp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<Option<f64>>,
    #[serde(rename = "artifact", skip_serializing_if = "Option::is_none")]
    pub artifact: Option<models::Artifact>,
    #[serde(rename = "assistant", skip_serializing_if = "Option::is_none")]
    pub assistant: Option<models::CreateAssistantDto>,
    #[serde(rename = "customer", skip_serializing_if = "Option::is_none")]
    pub customer: Option<models::CreateCustomerDto>,
    #[serde(rename = "call", skip_serializing_if = "Option::is_none")]
    pub call: Option<models::Call>,
    /// This is the language the transcriber is switched to.
    #[serde(rename = "language")]
    pub language: String,
}

impl ServerMessageLanguageChangeDetected {
    pub fn new(r#type: Type, language: String) -> ServerMessageLanguageChangeDetected {
        ServerMessageLanguageChangeDetected {
            phone_number: None,
            r#type,
            timestamp: None,
            artifact: None,
            assistant: None,
            customer: None,
            call: None,
            language,
        }
    }
}
/// This is the type of the message. \"language-change-detected\" is sent when the transcriber is automatically switched based on the detected language.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "language-change-detected")]
    LanguageChangeDetected,
}

impl Default for Type {
    fn default() -> Type {
        Self::LanguageChangeDetected
    }
}

