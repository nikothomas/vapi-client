/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferPlan {
    #[serde(rename = "mode")]
    pub mode: models::TransferPlanMode,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<models::TransferPlanMessage>,
    /// This specifies the SIP verb to use while transferring the call. - 'refer': Uses SIP REFER to transfer the call (default) - 'bye': Ends current call with SIP BYE - 'dial': Uses SIP DIAL to transfer the call
    #[serde(rename = "sipVerb", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub sip_verb: Option<Option<std::collections::HashMap<String, serde_json::Value>>>,
    /// This is the TwiML instructions to execute on the destination call leg before connecting the customer.  Usage: - Used only when `mode` is `warm-transfer-twiml`. - Supports only `Play`, `Say`, `Gather`, `Hangup` and `Pause` verbs. - Maximum length is 4096 characters.  Example: ``` <Say voice=\"alice\" language=\"en-US\">Hello, transferring a customer to you.</Say> <Pause length=\"2\"/> <Say>They called about billing questions.</Say> ```
    #[serde(rename = "twiml", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub twiml: Option<Option<String>>,
    #[serde(rename = "summaryPlan", skip_serializing_if = "Option::is_none")]
    pub summary_plan: Option<models::SummaryPlan>,
}

impl TransferPlan {
    pub fn new(mode: models::TransferPlanMode) -> TransferPlan {
        TransferPlan {
            mode,
            message: None,
            sip_verb: None,
            twiml: None,
            summary_plan: None,
        }
    }
}

