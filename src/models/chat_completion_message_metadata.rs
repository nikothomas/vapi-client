/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatCompletionMessageMetadata {
    #[serde(rename = "taskName")]
    pub task_name: String,
    #[serde(rename = "taskType")]
    pub task_type: String,
    #[serde(rename = "taskOutput")]
    pub task_output: String,
    #[serde(rename = "taskState", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub task_state: Option<Option<std::collections::HashMap<String, serde_json::Value>>>,
    #[serde(rename = "nodeTrace", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub node_trace: Option<Option<Vec<String>>>,
}

impl ChatCompletionMessageMetadata {
    pub fn new(task_name: String, task_type: String, task_output: String) -> ChatCompletionMessageMetadata {
        ChatCompletionMessageMetadata {
            task_name,
            task_type,
            task_output,
            task_state: None,
            node_trace: None,
        }
    }
}

