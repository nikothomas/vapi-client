/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FallbackVapiVoiceLanguage : This is the language code (ISO 639-1) that will be used.  @default 'en-US'
/// This is the language code (ISO 639-1) that will be used.  @default 'en-US'
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FallbackVapiVoiceLanguage {
    #[serde(rename = "en-US")]
    EnUs,
    #[serde(rename = "en-GB")]
    EnGb,
    #[serde(rename = "en-AU")]
    EnAu,
    #[serde(rename = "en-CA")]
    EnCa,
    #[serde(rename = "ja")]
    Ja,
    #[serde(rename = "zh")]
    Zh,
    #[serde(rename = "de")]
    De,
    #[serde(rename = "hi")]
    Hi,
    #[serde(rename = "fr-FR")]
    FrFr,
    #[serde(rename = "fr-CA")]
    FrCa,
    #[serde(rename = "ko")]
    Ko,
    #[serde(rename = "pt-BR")]
    PtBr,
    #[serde(rename = "pt-PT")]
    PtPt,
    #[serde(rename = "it")]
    It,
    #[serde(rename = "es-ES")]
    EsEs,
    #[serde(rename = "es-MX")]
    EsMx,
    #[serde(rename = "id")]
    Id,
    #[serde(rename = "nl")]
    Nl,
    #[serde(rename = "tr")]
    Tr,
    #[serde(rename = "fil")]
    Fil,
    #[serde(rename = "pl")]
    Pl,
    #[serde(rename = "sv")]
    Sv,
    #[serde(rename = "bg")]
    Bg,
    #[serde(rename = "ro")]
    Ro,
    #[serde(rename = "ar-SA")]
    ArSa,
    #[serde(rename = "ar-AE")]
    ArAe,
    #[serde(rename = "cs")]
    Cs,
    #[serde(rename = "el")]
    El,
    #[serde(rename = "fi")]
    Fi,
    #[serde(rename = "hr")]
    Hr,
    #[serde(rename = "ms")]
    Ms,
    #[serde(rename = "sk")]
    Sk,
    #[serde(rename = "da")]
    Da,
    #[serde(rename = "ta")]
    Ta,
    #[serde(rename = "uk")]
    Uk,
    #[serde(rename = "ru")]
    Ru,
    #[serde(rename = "hu")]
    Hu,
    #[serde(rename = "no")]
    No,
    #[serde(rename = "vi")]
    Vi,

}

impl std::fmt::Display for FallbackVapiVoiceLanguage {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::EnUs => write!(f, "en-US"),
            Self::EnGb => write!(f, "en-GB"),
            Self::EnAu => write!(f, "en-AU"),
            Self::EnCa => write!(f, "en-CA"),
            Self::Ja => write!(f, "ja"),
            Self::Zh => write!(f, "zh"),
            Self::De => write!(f, "de"),
            Self::Hi => write!(f, "hi"),
            Self::FrFr => write!(f, "fr-FR"),
            Self::FrCa => write!(f, "fr-CA"),
            Self::Ko => write!(f, "ko"),
            Self::PtBr => write!(f, "pt-BR"),
            Self::PtPt => write!(f, "pt-PT"),
            Self::It => write!(f, "it"),
            Self::EsEs => write!(f, "es-ES"),
            Self::EsMx => write!(f, "es-MX"),
            Self::Id => write!(f, "id"),
            Self::Nl => write!(f, "nl"),
            Self::Tr => write!(f, "tr"),
            Self::Fil => write!(f, "fil"),
            Self::Pl => write!(f, "pl"),
            Self::Sv => write!(f, "sv"),
            Self::Bg => write!(f, "bg"),
            Self::Ro => write!(f, "ro"),
            Self::ArSa => write!(f, "ar-SA"),
            Self::ArAe => write!(f, "ar-AE"),
            Self::Cs => write!(f, "cs"),
            Self::El => write!(f, "el"),
            Self::Fi => write!(f, "fi"),
            Self::Hr => write!(f, "hr"),
            Self::Ms => write!(f, "ms"),
            Self::Sk => write!(f, "sk"),
            Self::Da => write!(f, "da"),
            Self::Ta => write!(f, "ta"),
            Self::Uk => write!(f, "uk"),
            Self::Ru => write!(f, "ru"),
            Self::Hu => write!(f, "hu"),
            Self::No => write!(f, "no"),
            Self::Vi => write!(f, "vi"),
        }
    }
}

impl Default for FallbackVapiVoiceLanguage {
    fn default() -> FallbackVapiVoiceLanguage {
        Self::EnUs
    }
}

