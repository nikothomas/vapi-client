/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SpeechmaticsTranscriberLanguage {
    #[serde(rename = "auto")]
    Auto,
    #[serde(rename = "ar")]
    Ar,
    #[serde(rename = "ba")]
    Ba,
    #[serde(rename = "eu")]
    Eu,
    #[serde(rename = "be")]
    Be,
    #[serde(rename = "bn")]
    Bn,
    #[serde(rename = "bg")]
    Bg,
    #[serde(rename = "yue")]
    Yue,
    #[serde(rename = "ca")]
    Ca,
    #[serde(rename = "hr")]
    Hr,
    #[serde(rename = "cs")]
    Cs,
    #[serde(rename = "da")]
    Da,
    #[serde(rename = "nl")]
    Nl,
    #[serde(rename = "en")]
    En,
    #[serde(rename = "eo")]
    Eo,
    #[serde(rename = "et")]
    Et,
    #[serde(rename = "fi")]
    Fi,
    #[serde(rename = "fr")]
    Fr,
    #[serde(rename = "gl")]
    Gl,
    #[serde(rename = "de")]
    De,
    #[serde(rename = "el")]
    El,
    #[serde(rename = "he")]
    He,
    #[serde(rename = "hi")]
    Hi,
    #[serde(rename = "hu")]
    Hu,
    #[serde(rename = "id")]
    Id,
    #[serde(rename = "ia")]
    Ia,
    #[serde(rename = "ga")]
    Ga,
    #[serde(rename = "it")]
    It,
    #[serde(rename = "ja")]
    Ja,
    #[serde(rename = "ko")]
    Ko,
    #[serde(rename = "lv")]
    Lv,
    #[serde(rename = "lt")]
    Lt,
    #[serde(rename = "ms")]
    Ms,
    #[serde(rename = "mt")]
    Mt,
    #[serde(rename = "cmn")]
    Cmn,
    #[serde(rename = "mr")]
    Mr,
    #[serde(rename = "mn")]
    Mn,
    #[serde(rename = "no")]
    No,
    #[serde(rename = "fa")]
    Fa,
    #[serde(rename = "pl")]
    Pl,
    #[serde(rename = "pt")]
    Pt,
    #[serde(rename = "ro")]
    Ro,
    #[serde(rename = "ru")]
    Ru,
    #[serde(rename = "sk")]
    Sk,
    #[serde(rename = "sl")]
    Sl,
    #[serde(rename = "es")]
    Es,
    #[serde(rename = "sw")]
    Sw,
    #[serde(rename = "sv")]
    Sv,
    #[serde(rename = "ta")]
    Ta,
    #[serde(rename = "th")]
    Th,
    #[serde(rename = "tr")]
    Tr,
    #[serde(rename = "uk")]
    Uk,
    #[serde(rename = "ur")]
    Ur,
    #[serde(rename = "ug")]
    Ug,
    #[serde(rename = "vi")]
    Vi,
    #[serde(rename = "cy")]
    Cy,

}

impl std::fmt::Display for SpeechmaticsTranscriberLanguage {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Auto => write!(f, "auto"),
            Self::Ar => write!(f, "ar"),
            Self::Ba => write!(f, "ba"),
            Self::Eu => write!(f, "eu"),
            Self::Be => write!(f, "be"),
            Self::Bn => write!(f, "bn"),
            Self::Bg => write!(f, "bg"),
            Self::Yue => write!(f, "yue"),
            Self::Ca => write!(f, "ca"),
            Self::Hr => write!(f, "hr"),
            Self::Cs => write!(f, "cs"),
            Self::Da => write!(f, "da"),
            Self::Nl => write!(f, "nl"),
            Self::En => write!(f, "en"),
            Self::Eo => write!(f, "eo"),
            Self::Et => write!(f, "et"),
            Self::Fi => write!(f, "fi"),
            Self::Fr => write!(f, "fr"),
            Self::Gl => write!(f, "gl"),
            Self::De => write!(f, "de"),
            Self::El => write!(f, "el"),
            Self::He => write!(f, "he"),
            Self::Hi => write!(f, "hi"),
            Self::Hu => write!(f, "hu"),
            Self::Id => write!(f, "id"),
            Self::Ia => write!(f, "ia"),
            Self::Ga => write!(f, "ga"),
            Self::It => write!(f, "it"),
            Self::Ja => write!(f, "ja"),
            Self::Ko => write!(f, "ko"),
            Self::Lv => write!(f, "lv"),
            Self::Lt => write!(f, "lt"),
            Self::Ms => write!(f, "ms"),
            Self::Mt => write!(f, "mt"),
            Self::Cmn => write!(f, "cmn"),
            Self::Mr => write!(f, "mr"),
            Self::Mn => write!(f, "mn"),
            Self::No => write!(f, "no"),
            Self::Fa => write!(f, "fa"),
            Self::Pl => write!(f, "pl"),
            Self::Pt => write!(f, "pt"),
            Self::Ro => write!(f, "ro"),
            Self::Ru => write!(f, "ru"),
            Self::Sk => write!(f, "sk"),
            Self::Sl => write!(f, "sl"),
            Self::Es => write!(f, "es"),
            Self::Sw => write!(f, "sw"),
            Self::Sv => write!(f, "sv"),
            Self::Ta => write!(f, "ta"),
            Self::Th => write!(f, "th"),
            Self::Tr => write!(f, "tr"),
            Self::Uk => write!(f, "uk"),
            Self::Ur => write!(f, "ur"),
            Self::Ug => write!(f, "ug"),
            Self::Vi => write!(f, "vi"),
            Self::Cy => write!(f, "cy"),
        }
    }
}

impl Default for SpeechmaticsTranscriberLanguage {
    fn default() -> SpeechmaticsTranscriberLanguage {
        Self::Auto
    }
}

