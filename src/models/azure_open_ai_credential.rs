/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::ToSchema;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, ToSchema)]
pub struct AzureOpenAiCredential {
    #[serde(rename = "provider")]
    pub provider: Provider,
    #[serde(rename = "region")]
    pub region: Region,
    #[serde(rename = "models")]
    pub models: Vec<Models>,
    /// This is not returned in the API.
    #[serde(rename = "openAIKey")]
    pub open_ai_key: String,
    /// This is not returned in the API.
    #[serde(
        rename = "ocpApimSubscriptionKey",
        skip_serializing_if = "Option::is_none"
    )]
    pub ocp_apim_subscription_key: Option<String>,
    /// This is the unique identifier for the credential.
    #[serde(rename = "id")]
    pub id: String,
    /// This is the unique identifier for the org that this credential belongs to.
    #[serde(rename = "orgId")]
    pub org_id: String,
    /// This is the ISO 8601 date-time string of when the credential was created.
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// This is the ISO 8601 date-time string of when the assistant was last updated.
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    /// This is the name of credential. This is just for your reference.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "openAIEndpoint")]
    pub open_ai_endpoint: String,
}

impl AzureOpenAiCredential {
    pub fn new(
        provider: Provider,
        region: Region,
        models: Vec<Models>,
        open_ai_key: String,
        id: String,
        org_id: String,
        created_at: String,
        updated_at: String,
        open_ai_endpoint: String,
    ) -> AzureOpenAiCredential {
        AzureOpenAiCredential {
            provider,
            region,
            models,
            open_ai_key,
            ocp_apim_subscription_key: None,
            id,
            org_id,
            created_at,
            updated_at,
            name: None,
            open_ai_endpoint,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, ToSchema)]
pub enum Provider {
    #[serde(rename = "azure-openai")]
    AzureOpenai,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::AzureOpenai
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, ToSchema)]
pub enum Region {
    #[serde(rename = "australia")]
    Australia,
    #[serde(rename = "canadaeast")]
    Canadaeast,
    #[serde(rename = "canadacentral")]
    Canadacentral,
    #[serde(rename = "eastus2")]
    Eastus2,
    #[serde(rename = "eastus")]
    Eastus,
    #[serde(rename = "france")]
    France,
    #[serde(rename = "india")]
    India,
    #[serde(rename = "japaneast")]
    Japaneast,
    #[serde(rename = "japanwest")]
    Japanwest,
    #[serde(rename = "uaenorth")]
    Uaenorth,
    #[serde(rename = "northcentralus")]
    Northcentralus,
    #[serde(rename = "norway")]
    Norway,
    #[serde(rename = "southcentralus")]
    Southcentralus,
    #[serde(rename = "swedencentral")]
    Swedencentral,
    #[serde(rename = "switzerland")]
    Switzerland,
    #[serde(rename = "uk")]
    Uk,
    #[serde(rename = "westus")]
    Westus,
    #[serde(rename = "westus3")]
    Westus3,
}

impl Default for Region {
    fn default() -> Region {
        Self::Australia
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, ToSchema)]
pub enum Models {
    #[serde(rename = "gpt-4o-2024-08-06")]
    Gpt4o20240806,
    #[serde(rename = "gpt-4o-mini-2024-07-18")]
    Gpt4oMini20240718,
    #[serde(rename = "gpt-4o-2024-05-13")]
    Gpt4o20240513,
    #[serde(rename = "gpt-4-turbo-2024-04-09")]
    Gpt4Turbo20240409,
    #[serde(rename = "gpt-4-0125-preview")]
    Gpt40125Preview,
    #[serde(rename = "gpt-4-1106-preview")]
    Gpt41106Preview,
    #[serde(rename = "gpt-4-0613")]
    Gpt40613,
    #[serde(rename = "gpt-35-turbo-0125")]
    Gpt35Turbo0125,
    #[serde(rename = "gpt-35-turbo-1106")]
    Gpt35Turbo1106,
}

impl Default for Models {
    fn default() -> Models {
        Self::Gpt4o20240806
    }
}
