/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ToolsCreateResponse {
    ToolsListResponseItemOneOf(Box<models::ToolsListResponseItemOneOf>),
    ToolsListResponseItemOneOf1(Box<models::ToolsListResponseItemOneOf1>),
    ToolsListResponseItemOneOf2(Box<models::ToolsListResponseItemOneOf2>),
    ToolsListResponseItemOneOf3(Box<models::ToolsListResponseItemOneOf3>),
    ToolsListResponseItemOneOf4(Box<models::ToolsListResponseItemOneOf4>),
    ToolsListResponseItemOneOf5(Box<models::ToolsListResponseItemOneOf5>),
    ToolsListResponseItemOneOf6(Box<models::ToolsListResponseItemOneOf6>),
    ToolsListResponseItemOneOf7(Box<models::ToolsListResponseItemOneOf7>),
    ToolsListResponseItemOneOf8(Box<models::ToolsListResponseItemOneOf8>),
    ToolsListResponseItemOneOf9(Box<models::ToolsListResponseItemOneOf9>),
    ToolsListResponseItemOneOf10(Box<models::ToolsListResponseItemOneOf10>),
    ToolsListResponseItemOneOf11(Box<models::ToolsListResponseItemOneOf11>),
    ToolsListResponseItemOneOf12(Box<models::ToolsListResponseItemOneOf12>),
    ToolsListResponseItemOneOf13(Box<models::ToolsListResponseItemOneOf13>),
    ToolsListResponseItemOneOf14(Box<models::ToolsListResponseItemOneOf14>),
    ToolsListResponseItemOneOf15(Box<models::ToolsListResponseItemOneOf15>),
}

impl Default for ToolsCreateResponse {
    fn default() -> Self {
        Self::ToolsListResponseItemOneOf(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "dtmf")]
    Dtmf,
    #[serde(rename = "endCall")]
    EndCall,
    #[serde(rename = "function")]
    Function,
    #[serde(rename = "ghl")]
    Ghl,
    #[serde(rename = "make")]
    Make,
    #[serde(rename = "transferCall")]
    TransferCall,
    #[serde(rename = "output")]
    Output,
    #[serde(rename = "bash")]
    Bash,
    #[serde(rename = "computer")]
    Computer,
    #[serde(rename = "textEditor")]
    TextEditor,
    #[serde(rename = "query")]
    Query,
    #[serde(rename = "google.calendar.event.create")]
    GooglePeriodCalendarPeriodEventPeriodCreate,
    #[serde(rename = "google.sheets.row.append")]
    GooglePeriodSheetsPeriodRowPeriodAppend,
    #[serde(rename = "google.calendar.availability.check")]
    GooglePeriodCalendarPeriodAvailabilityPeriodCheck,
    #[serde(rename = "slack.message.send")]
    SlackPeriodMessagePeriodSend,
    #[serde(rename = "mcp")]
    Mcp,
}

impl Default for Type {
    fn default() -> Type {
        Self::Dtmf
    }
}
/// The sub type of tool.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubType {
    #[serde(rename = "text_editor_20241022")]
    TextEditor20241022,
}

impl Default for SubType {
    fn default() -> SubType {
        Self::TextEditor20241022
    }
}
/// The name of the tool, fixed to 'str_replace_editor'
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Name {
    #[serde(rename = "str_replace_editor")]
    StrReplaceEditor,
}

impl Default for Name {
    fn default() -> Name {
        Self::StrReplaceEditor
    }
}

