/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateGcpCredentialDto {
    #[serde(rename = "provider")]
    pub provider: Provider,
    /// This is the GCP key. This is the JSON that can be generated in the Google Cloud Console at https://console.cloud.google.com/iam-admin/serviceaccounts/details/<service-account-id>/keys.  The schema is identical to the JSON that GCP outputs.
    #[serde(rename = "gcpKey")]
    pub gcp_key: Box<models::GcpKey>,
    /// This is the bucket plan that can be provided to store call artifacts in GCP.
    #[serde(rename = "bucketPlan", skip_serializing_if = "Option::is_none")]
    pub bucket_plan: Option<Box<models::BucketPlan>>,
    /// This is the name of credential. This is just for your reference.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl CreateGcpCredentialDto {
    pub fn new(provider: Provider, gcp_key: models::GcpKey) -> CreateGcpCredentialDto {
        CreateGcpCredentialDto {
            provider,
            gcp_key: Box::new(gcp_key),
            bucket_plan: None,
            name: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Provider {
    #[serde(rename = "gcp")]
    Gcp,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::Gcp
    }
}

