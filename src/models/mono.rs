/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Mono {
    /// This is the combined recording url for the call. To enable, set `assistant.artifactPlan.recordingEnabled`.
    #[serde(rename = "combinedUrl", skip_serializing_if = "Option::is_none")]
    pub combined_url: Option<String>,
    /// This is the mono recording url for the assistant. To enable, set `assistant.artifactPlan.recordingEnabled`.
    #[serde(rename = "assistantUrl", skip_serializing_if = "Option::is_none")]
    pub assistant_url: Option<String>,
    /// This is the mono recording url for the customer. To enable, set `assistant.artifactPlan.recordingEnabled`.
    #[serde(rename = "customerUrl", skip_serializing_if = "Option::is_none")]
    pub customer_url: Option<String>,
}

impl Mono {
    pub fn new() -> Mono {
        Mono {
            combined_url: None,
            assistant_url: None,
            customer_url: None,
        }
    }
}

