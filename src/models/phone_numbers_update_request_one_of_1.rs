/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PhoneNumbersUpdateRequestOneOf1 {
    #[serde(rename = "fallbackDestination", skip_serializing_if = "Option::is_none")]
    pub fallback_destination: Option<models::UpdateTwilioPhoneNumberDtoFallbackDestination>,
    /// This is the name of the phone number. This is just for your own reference.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// This is the assistant that will be used for incoming calls to this phone number.  If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
    #[serde(rename = "assistantId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub assistant_id: Option<Option<String>>,
    /// This is the squad that will be used for incoming calls to this phone number.  If neither `assistantId` nor `squadId` is set, `assistant-request` will be sent to your Server URL. Check `ServerMessage` and `ServerMessageResponse` for the shape of the message and response that is expected.
    #[serde(rename = "squadId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub squad_id: Option<Option<String>>,
    #[serde(rename = "server", skip_serializing_if = "Option::is_none")]
    pub server: Option<models::Server>,
    /// These are the digits of the phone number you own on your Twilio.
    #[serde(rename = "number", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub number: Option<Option<String>>,
    /// This is the Twilio Account SID for the phone number.
    #[serde(rename = "twilioAccountSid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub twilio_account_sid: Option<Option<String>>,
    /// This is the Twilio Auth Token for the phone number.
    #[serde(rename = "twilioAuthToken", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub twilio_auth_token: Option<Option<String>>,
    #[serde(rename = "provider")]
    pub provider: Provider,
}

impl PhoneNumbersUpdateRequestOneOf1 {
    pub fn new(provider: Provider) -> PhoneNumbersUpdateRequestOneOf1 {
        PhoneNumbersUpdateRequestOneOf1 {
            fallback_destination: None,
            name: None,
            assistant_id: None,
            squad_id: None,
            server: None,
            number: None,
            twilio_account_sid: None,
            twilio_auth_token: None,
            provider,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Provider {
    #[serde(rename = "twilio")]
    Twilio,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::Twilio
    }
}

