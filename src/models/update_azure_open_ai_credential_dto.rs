/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateAzureOpenAiCredentialDto {
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<models::UpdateAzureOpenAiCredentialDtoRegion>,
    #[serde(rename = "models", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub models: Option<Option<Vec<models::UpdateAzureOpenAiCredentialDtoModelsItem>>>,
    /// This is not returned in the API.
    #[serde(rename = "openAIKey", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub open_ai_key: Option<Option<String>>,
    /// This is not returned in the API.
    #[serde(rename = "ocpApimSubscriptionKey", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ocp_apim_subscription_key: Option<Option<String>>,
    /// This is the name of credential. This is just for your reference.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "openAIEndpoint", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub open_ai_endpoint: Option<Option<String>>,
}

impl UpdateAzureOpenAiCredentialDto {
    pub fn new() -> UpdateAzureOpenAiCredentialDto {
        UpdateAzureOpenAiCredentialDto {
            region: None,
            models: None,
            open_ai_key: None,
            ocp_apim_subscription_key: None,
            name: None,
            open_ai_endpoint: None,
        }
    }
}

