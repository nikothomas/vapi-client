/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogicEdgeCondition {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "liquid")]
    pub liquid: String,
}

impl LogicEdgeCondition {
    pub fn new(r#type: Type, liquid: String) -> LogicEdgeCondition {
        LogicEdgeCondition { r#type, liquid }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "logic")]
    Logic,
}

impl Default for Type {
    fn default() -> Type {
        Self::Logic
    }
}
