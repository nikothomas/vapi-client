/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResponseOutputText {
    /// Annotations in the text output
    #[serde(rename = "annotations")]
    pub annotations: Vec<serde_json::Value>,
    /// The text output from the model
    #[serde(rename = "text")]
    pub text: String,
    /// The type of the output text
    #[serde(rename = "type")]
    pub r#type: TypeTrue,
}

impl ResponseOutputText {
    pub fn new(
        annotations: Vec<serde_json::Value>,
        text: String,
        r#type: TypeTrue,
    ) -> ResponseOutputText {
        ResponseOutputText {
            annotations,
            text,
            r#type,
        }
    }
}
/// The type of the output text
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeTrue {
    #[serde(rename = "output_text")]
    OutputText,
}

impl Default for TypeTrue {
    fn default() -> TypeTrue {
        Self::OutputText
    }
}
