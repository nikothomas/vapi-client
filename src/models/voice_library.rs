/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VoiceLibrary {
    /// This is the voice provider that will be used.
    #[serde(rename = "provider", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub provider: Option<Option<std::collections::HashMap<String, serde_json::Value>>>,
    /// The ID of the voice provided by the provider.
    #[serde(rename = "providerId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub provider_id: Option<Option<String>>,
    /// The unique slug of the voice.
    #[serde(rename = "slug", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub slug: Option<Option<String>>,
    /// The name of the voice.
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    /// The language of the voice.
    #[serde(rename = "language", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub language: Option<Option<String>>,
    /// The language code of the voice.
    #[serde(rename = "languageCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub language_code: Option<Option<String>>,
    /// The model of the voice.
    #[serde(rename = "model", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub model: Option<Option<String>>,
    /// The supported models of the voice.
    #[serde(rename = "supportedModels", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub supported_models: Option<Option<String>>,
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<models::VoiceLibraryGender>,
    /// The accent of the voice.
    #[serde(rename = "accent", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub accent: Option<Option<String>>,
    /// The preview URL of the voice.
    #[serde(rename = "previewUrl", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub preview_url: Option<Option<String>>,
    /// The description of the voice.
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    /// The credential ID of the voice.
    #[serde(rename = "credentialId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub credential_id: Option<Option<String>>,
    /// The unique identifier for the voice library.
    #[serde(rename = "id")]
    pub id: String,
    /// The unique identifier for the organization that this voice library belongs to.
    #[serde(rename = "orgId")]
    pub org_id: String,
    /// The Public voice is shared accross all the organizations.
    #[serde(rename = "isPublic")]
    pub is_public: bool,
    /// The deletion status of the voice.
    #[serde(rename = "isDeleted")]
    pub is_deleted: bool,
    /// The ISO 8601 date-time string of when the voice library was created.
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// The ISO 8601 date-time string of when the voice library was last updated.
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
}

impl VoiceLibrary {
    pub fn new(id: String, org_id: String, is_public: bool, is_deleted: bool, created_at: String, updated_at: String) -> VoiceLibrary {
        VoiceLibrary {
            provider: None,
            provider_id: None,
            slug: None,
            name: None,
            language: None,
            language_code: None,
            model: None,
            supported_models: None,
            gender: None,
            accent: None,
            preview_url: None,
            description: None,
            credential_id: None,
            id,
            org_id,
            is_public,
            is_deleted,
            created_at,
            updated_at,
        }
    }
}

