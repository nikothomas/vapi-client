/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VapiSmartEndpointingPlan {
    /// This is the provider for the smart endpointing plan.
    #[serde(rename = "provider")]
    pub provider: ProviderTrue,
}

impl VapiSmartEndpointingPlan {
    pub fn new(provider: ProviderTrue) -> VapiSmartEndpointingPlan {
        VapiSmartEndpointingPlan {
            provider,
        }
    }
}
/// This is the provider for the smart endpointing plan.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProviderTrue {
    #[serde(rename = "vapi")]
    Vapi,
    #[serde(rename = "livekit")]
    Livekit,
}

impl Default for ProviderTrue {
    fn default() -> ProviderTrue {
        Self::Vapi
    }
}

