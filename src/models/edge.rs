/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::OpenApi;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, OpenApi)]
pub struct Edge {
    #[serde(rename = "condition", skip_serializing_if = "Option::is_none")]
    pub condition: Option<models::EdgeCondition>,
    #[serde(rename = "from")]
    pub from: String,
    #[serde(rename = "to")]
    pub to: String,
    /// This is for metadata you want to store on the edge.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<serde_json::Value>,
}

impl Edge {
    pub fn new(from: String, to: String) -> Edge {
        Edge {
            condition: None,
            from,
            to,
            metadata: None,
        }
    }
}
