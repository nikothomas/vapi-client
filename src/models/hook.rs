/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::OpenApi;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, OpenApi)]
pub struct Hook {
    #[serde(rename = "on")]
    pub on: On,
    #[serde(rename = "do")]
    pub r#do: Vec<models::SayHook>,
}

impl Hook {
    pub fn new(on: On, r#do: Vec<models::SayHook>) -> Hook {
        Hook { on, r#do }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, OpenApi)]
pub enum On {
    #[serde(rename = "task.start")]
    TaskPeriodStart,
    #[serde(rename = "task.output.confirmation")]
    TaskPeriodOutputPeriodConfirmation,
    #[serde(rename = "task.delayed")]
    TaskPeriodDelayed,
}

impl Default for On {
    fn default() -> On {
        Self::TaskPeriodStart
    }
}
