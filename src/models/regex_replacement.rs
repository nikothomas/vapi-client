/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RegexReplacement {
    /// This is the regex pattern to replace.  Note: - This works by using the `string.replace` method in Node.JS. Eg. `\"hello there\".replace(/hello/g, \"hi\")` will return `\"hi there\"`.  Hot tip: - In JavaScript, escape `\\` when sending the regex pattern. Eg. `\"hello\\sthere\"` will be sent over the wire as `\"hellosthere\"`. Send `\"hello\\\\sthere\"` instead.
    #[serde(rename = "regex")]
    pub regex: String,
    /// These are the options for the regex replacement. Defaults to all disabled.  @default []
    #[serde(rename = "options", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub options: Option<Option<Vec<models::RegexOption>>>,
    /// This is the value that will replace the match.
    #[serde(rename = "value")]
    pub value: String,
}

impl RegexReplacement {
    pub fn new(regex: String, value: String) -> RegexReplacement {
        RegexReplacement {
            regex,
            options: None,
            value,
        }
    }
}

