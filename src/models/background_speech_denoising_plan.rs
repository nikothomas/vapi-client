/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BackgroundSpeechDenoisingPlan {
    /// Whether smart denoising using Krisp is enabled.
    #[serde(rename = "smartDenoisingPlan", skip_serializing_if = "Option::is_none")]
    pub smart_denoising_plan: Option<models::SmartDenoisingPlan>,
    /// Whether Fourier denoising is enabled. Note that this is experimental and may not work as expected.  This can be combined with smart denoising, and will be run afterwards.
    #[serde(rename = "fourierDenoisingPlan", skip_serializing_if = "Option::is_none")]
    pub fourier_denoising_plan: Option<models::FourierDenoisingPlan>,
}

impl BackgroundSpeechDenoisingPlan {
    pub fn new() -> BackgroundSpeechDenoisingPlan {
        BackgroundSpeechDenoisingPlan {
            smart_denoising_plan: None,
            fourier_denoising_plan: None,
        }
    }
}

