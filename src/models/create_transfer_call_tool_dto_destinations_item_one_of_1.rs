/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateTransferCallToolDtoDestinationsItemOneOf1 {
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<models::TransferDestinationStepMessage>,
    /// This is the step to transfer to.
    #[serde(rename = "stepName")]
    pub step_name: String,
    /// This is the description of the destination, used by the AI to choose when and how to transfer the call.
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl CreateTransferCallToolDtoDestinationsItemOneOf1 {
    pub fn new(step_name: String, r#type: Type) -> CreateTransferCallToolDtoDestinationsItemOneOf1 {
        CreateTransferCallToolDtoDestinationsItemOneOf1 {
            message: None,
            step_name,
            description: None,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "step")]
    Step,
}

impl Default for Type {
    fn default() -> Type {
        Self::Step
    }
}

