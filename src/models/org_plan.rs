/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrgPlan {
    #[serde(rename = "includedProviders", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub included_providers: Option<Option<Vec<std::collections::HashMap<String, serde_json::Value>>>>,
    #[serde(rename = "includedMinutes", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub included_minutes: Option<Option<f64>>,
    #[serde(rename = "costPerOverageMinute", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub cost_per_overage_minute: Option<Option<f64>>,
}

impl OrgPlan {
    pub fn new() -> OrgPlan {
        OrgPlan {
            included_providers: None,
            included_minutes: None,
            cost_per_overage_minute: None,
        }
    }
}

