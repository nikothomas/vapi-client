/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(tag = "type")]
pub enum ToolControllerFindAll200ResponseInner {
    #[serde(rename = "apiRequest")]
    ApiRequest(models::ApiRequestTool),
    #[serde(rename = "dtmf")]
    Dtmf(models::DtmfTool),
    #[serde(rename = "endCall")]
    EndCall(models::EndCallTool),
    #[serde(rename = "function")]
    Function(models::FunctionTool),
    #[serde(rename = "ghl")]
    Ghl(models::GhlTool),
    #[serde(rename = "make")]
    Make(models::MakeTool),
    #[serde(rename = "transferCall")]
    TransferCall(models::TransferCallTool),
    #[serde(rename = "output")]
    Output(models::OutputTool),
    #[serde(rename = "bash")]
    Bash(models::BashTool),
    #[serde(rename = "computer")]
    Computer(models::ComputerTool),
    #[serde(rename = "textEditor")]
    TextEditor(models::TextEditorTool),
    #[serde(rename = "query")]
    Query(models::QueryTool),
    #[serde(rename = "google.calendar.event.create")]
    GooglePeriodCalendarPeriodEventPeriodCreate(models::GoogleCalendarCreateEventTool),
    #[serde(rename = "google.sheets.row.append")]
    GooglePeriodSheetsPeriodRowPeriodAppend(models::GoogleSheetsRowAppendTool),
    #[serde(rename = "google.calendar.availability.check")]
    GooglePeriodCalendarPeriodAvailabilityPeriodCheck(models::GoogleCalendarCheckAvailabilityTool),
    #[serde(rename = "slack.message.send")]
    SlackPeriodMessagePeriodSend(models::SlackSendMessageTool),
    #[serde(rename = "sms")]
    Sms(models::SmsTool),
    #[serde(rename = "mcp")]
    Mcp(models::McpTool),
    #[serde(rename = "gohighlevel.calendar.availability.check")]
    GohighlevelPeriodCalendarPeriodAvailabilityPeriodCheck(
        models::GoHighLevelCalendarAvailabilityTool,
    ),
    #[serde(rename = "gohighlevel.calendar.event.create")]
    GohighlevelPeriodCalendarPeriodEventPeriodCreate(models::GoHighLevelCalendarEventCreateTool),
    #[serde(rename = "gohighlevel.contact.create")]
    GohighlevelPeriodContactPeriodCreate(models::GoHighLevelContactCreateTool),
    #[serde(rename = "gohighlevel.contact.get")]
    GohighlevelPeriodContactPeriodGet(models::GoHighLevelContactGetTool),
}

impl Default for ToolControllerFindAll200ResponseInner {
    fn default() -> Self {
        Self::ApiRequest(Default::default())
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MethodTrue {
    #[serde(rename = "POST")]
    Post,
    #[serde(rename = "GET")]
    Get,
}

impl Default for MethodTrue {
    fn default() -> MethodTrue {
        Self::Post
    }
}
/// The name of the tool, fixed to 'str_replace_editor'
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NameTrue {
    #[serde(rename = "str_replace_editor")]
    StrReplaceEditor,
}

impl Default for NameTrue {
    fn default() -> NameTrue {
        Self::StrReplaceEditor
    }
}
/// The sub type of tool.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubTypeTrue {
    #[serde(rename = "text_editor_20241022")]
    TextEditor20241022,
}

impl Default for SubTypeTrue {
    fn default() -> SubTypeTrue {
        Self::TextEditor20241022
    }
}
