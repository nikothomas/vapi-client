/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FallbackVapiVoiceVoiceId : The voices provided by Vapi
/// The voices provided by Vapi
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FallbackVapiVoiceVoiceId {
    #[serde(rename = "Elliot")]
    Elliot,
    #[serde(rename = "Rohan")]
    Rohan,
    #[serde(rename = "Lily")]
    Lily,
    #[serde(rename = "Savannah")]
    Savannah,
    #[serde(rename = "Hana")]
    Hana,
    #[serde(rename = "Neha")]
    Neha,
    #[serde(rename = "Cole")]
    Cole,
    #[serde(rename = "Harry")]
    Harry,
    #[serde(rename = "Paige")]
    Paige,
    #[serde(rename = "Spencer")]
    Spencer,

}

impl std::fmt::Display for FallbackVapiVoiceVoiceId {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Elliot => write!(f, "Elliot"),
            Self::Rohan => write!(f, "Rohan"),
            Self::Lily => write!(f, "Lily"),
            Self::Savannah => write!(f, "Savannah"),
            Self::Hana => write!(f, "Hana"),
            Self::Neha => write!(f, "Neha"),
            Self::Cole => write!(f, "Cole"),
            Self::Harry => write!(f, "Harry"),
            Self::Paige => write!(f, "Paige"),
            Self::Spencer => write!(f, "Spencer"),
        }
    }
}

impl Default for FallbackVapiVoiceVoiceId {
    fn default() -> FallbackVapiVoiceVoiceId {
        Self::Elliot
    }
}

