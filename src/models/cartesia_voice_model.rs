/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CartesiaVoiceModel : This is the model that will be used. This is optional and will default to the correct model for the voiceId.
/// This is the model that will be used. This is optional and will default to the correct model for the voiceId.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CartesiaVoiceModel {
    #[serde(rename = "sonic-2")]
    Sonic2,
    #[serde(rename = "sonic-english")]
    SonicEnglish,
    #[serde(rename = "sonic-multilingual")]
    SonicMultilingual,
    #[serde(rename = "sonic-preview")]
    SonicPreview,
    #[serde(rename = "sonic")]
    Sonic,

}

impl std::fmt::Display for CartesiaVoiceModel {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Sonic2 => write!(f, "sonic-2"),
            Self::SonicEnglish => write!(f, "sonic-english"),
            Self::SonicMultilingual => write!(f, "sonic-multilingual"),
            Self::SonicPreview => write!(f, "sonic-preview"),
            Self::Sonic => write!(f, "sonic"),
        }
    }
}

impl Default for CartesiaVoiceModel {
    fn default() -> CartesiaVoiceModel {
        Self::Sonic2
    }
}

