/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UpdateAssistantDtoFirstMessageMode : This is the mode for the first message. Default is 'assistant-speaks-first'.  Use: - 'assistant-speaks-first' to have the assistant speak first. - 'assistant-waits-for-user' to have the assistant wait for the user to speak first. - 'assistant-speaks-first-with-model-generated-message' to have the assistant speak first with a message generated by the model based on the conversation state. (`assistant.model.messages` at call start, `call.messages` at squad transfer points).  @default 'assistant-speaks-first'
/// This is the mode for the first message. Default is 'assistant-speaks-first'.  Use: - 'assistant-speaks-first' to have the assistant speak first. - 'assistant-waits-for-user' to have the assistant wait for the user to speak first. - 'assistant-speaks-first-with-model-generated-message' to have the assistant speak first with a message generated by the model based on the conversation state. (`assistant.model.messages` at call start, `call.messages` at squad transfer points).  @default 'assistant-speaks-first'
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UpdateAssistantDtoFirstMessageMode {
    #[serde(rename = "assistant-speaks-first")]
    AssistantSpeaksFirst,
    #[serde(rename = "assistant-speaks-first-with-model-generated-message")]
    AssistantSpeaksFirstWithModelGeneratedMessage,
    #[serde(rename = "assistant-waits-for-user")]
    AssistantWaitsForUser,

}

impl std::fmt::Display for UpdateAssistantDtoFirstMessageMode {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::AssistantSpeaksFirst => write!(f, "assistant-speaks-first"),
            Self::AssistantSpeaksFirstWithModelGeneratedMessage => write!(f, "assistant-speaks-first-with-model-generated-message"),
            Self::AssistantWaitsForUser => write!(f, "assistant-waits-for-user"),
        }
    }
}

impl Default for UpdateAssistantDtoFirstMessageMode {
    fn default() -> UpdateAssistantDtoFirstMessageMode {
        Self::AssistantSpeaksFirst
    }
}

