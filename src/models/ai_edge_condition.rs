/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::OpenApi;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, OpenApi)]
pub struct AiEdgeCondition {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "matches")]
    pub matches: Vec<String>,
}

impl AiEdgeCondition {
    pub fn new(r#type: Type, matches: Vec<String>) -> AiEdgeCondition {
        AiEdgeCondition { r#type, matches }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, OpenApi)]
pub enum Type {
    #[serde(rename = "ai")]
    Ai,
}

impl Default for Type {
    fn default() -> Type {
        Self::Ai
    }
}
