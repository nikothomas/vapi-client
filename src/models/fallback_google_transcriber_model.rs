/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FallbackGoogleTranscriberModel : This is the model that will be used for the transcription.
/// This is the model that will be used for the transcription.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FallbackGoogleTranscriberModel {
    #[serde(rename = "gemini-2.0-flash-thinking-exp")]
    Gemini2Period0FlashThinkingExp,
    #[serde(rename = "gemini-2.0-pro-exp-02-05")]
    Gemini2Period0ProExp0205,
    #[serde(rename = "gemini-2.0-flash")]
    Gemini2Period0Flash,
    #[serde(rename = "gemini-2.0-flash-lite")]
    Gemini2Period0FlashLite,
    #[serde(rename = "gemini-2.0-flash-lite-preview-02-05")]
    Gemini2Period0FlashLitePreview0205,
    #[serde(rename = "gemini-2.0-flash-exp")]
    Gemini2Period0FlashExp,
    #[serde(rename = "gemini-2.0-flash-realtime-exp")]
    Gemini2Period0FlashRealtimeExp,
    #[serde(rename = "gemini-1.5-flash")]
    Gemini1Period5Flash,
    #[serde(rename = "gemini-1.5-flash-002")]
    Gemini1Period5Flash002,
    #[serde(rename = "gemini-1.5-pro")]
    Gemini1Period5Pro,
    #[serde(rename = "gemini-1.5-pro-002")]
    Gemini1Period5Pro002,
    #[serde(rename = "gemini-1.0-pro")]
    Gemini1Period0Pro,

}

impl std::fmt::Display for FallbackGoogleTranscriberModel {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Gemini2Period0FlashThinkingExp => write!(f, "gemini-2.0-flash-thinking-exp"),
            Self::Gemini2Period0ProExp0205 => write!(f, "gemini-2.0-pro-exp-02-05"),
            Self::Gemini2Period0Flash => write!(f, "gemini-2.0-flash"),
            Self::Gemini2Period0FlashLite => write!(f, "gemini-2.0-flash-lite"),
            Self::Gemini2Period0FlashLitePreview0205 => write!(f, "gemini-2.0-flash-lite-preview-02-05"),
            Self::Gemini2Period0FlashExp => write!(f, "gemini-2.0-flash-exp"),
            Self::Gemini2Period0FlashRealtimeExp => write!(f, "gemini-2.0-flash-realtime-exp"),
            Self::Gemini1Period5Flash => write!(f, "gemini-1.5-flash"),
            Self::Gemini1Period5Flash002 => write!(f, "gemini-1.5-flash-002"),
            Self::Gemini1Period5Pro => write!(f, "gemini-1.5-pro"),
            Self::Gemini1Period5Pro002 => write!(f, "gemini-1.5-pro-002"),
            Self::Gemini1Period0Pro => write!(f, "gemini-1.0-pro"),
        }
    }
}

impl Default for FallbackGoogleTranscriberModel {
    fn default() -> FallbackGoogleTranscriberModel {
        Self::Gemini2Period0FlashThinkingExp
    }
}

