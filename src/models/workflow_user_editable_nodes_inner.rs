/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum WorkflowUserEditableNodesInner {
    ConversationNode(models::ConversationNode),
    ToolNode(models::ToolNode),
}

impl Default for WorkflowUserEditableNodesInner {
    fn default() -> Self {
        Self::ConversationNode(Default::default())
    }
}
/// This is the Conversation node. This can be used to start a conversation with the customer.  The flow is: - Workflow starts the conversation node - Model is active with the `prompt` and global context. - Model will call a tool to exit this node. - Workflow will extract variables from the conversation. - Workflow continues.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeTrue {
    #[serde(rename = "conversation")]
    Conversation,
    #[serde(rename = "tool")]
    Tool,
}

impl Default for TypeTrue {
    fn default() -> TypeTrue {
        Self::Conversation
    }
}
