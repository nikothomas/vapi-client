/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ClientMessageToolCallsToolWithToolCallListInner {
    FunctionToolWithToolCall(models::FunctionToolWithToolCall),
    GhlToolWithToolCall(models::GhlToolWithToolCall),
    MakeToolWithToolCall(models::MakeToolWithToolCall),
    BashToolWithToolCall(models::BashToolWithToolCall),
    ComputerToolWithToolCall(models::ComputerToolWithToolCall),
    TextEditorToolWithToolCall(models::TextEditorToolWithToolCall),
    GoogleCalendarCreateEventToolWithToolCall(models::GoogleCalendarCreateEventToolWithToolCall),
}

impl Default for ClientMessageToolCallsToolWithToolCallListInner {
    fn default() -> Self {
        Self::FunctionToolWithToolCall(Default::default())
    }
}
/// The type of tool. \"function\" for Function tool.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeTrue {
    #[serde(rename = "function")]
    Function,
    #[serde(rename = "ghl")]
    Ghl,
    #[serde(rename = "make")]
    Make,
    #[serde(rename = "bash")]
    Bash,
    #[serde(rename = "computer")]
    Computer,
    #[serde(rename = "textEditor")]
    TextEditor,
    #[serde(rename = "google.calendar.event.create")]
    GooglePeriodCalendarPeriodEventPeriodCreate,
}

impl Default for TypeTrue {
    fn default() -> TypeTrue {
        Self::Function
    }
}
/// The sub type of tool.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubTypeTrue {
    #[serde(rename = "text_editor_20241022")]
    TextEditor20241022,
}

impl Default for SubTypeTrue {
    fn default() -> SubTypeTrue {
        Self::TextEditor20241022
    }
}
/// The name of the tool, fixed to 'str_replace_editor'
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NameTrue {
    #[serde(rename = "str_replace_editor")]
    StrReplaceEditor,
}

impl Default for NameTrue {
    fn default() -> NameTrue {
        Self::StrReplaceEditor
    }
}

