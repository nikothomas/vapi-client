/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateChatStreamResponse {
    /// This is the unique identifier for the streaming response.
    #[serde(rename = "id")]
    pub id: String,
    /// This is the path to the content being updated. Format: `chat.output[{contentIndex}].content` where contentIndex identifies the specific content item.
    #[serde(rename = "path")]
    pub path: String,
    /// This is the incremental content chunk being streamed.
    #[serde(rename = "delta")]
    pub delta: String,
}

impl CreateChatStreamResponse {
    pub fn new(id: String, path: String, delta: String) -> CreateChatStreamResponse {
        CreateChatStreamResponse { id, path, delta }
    }
}
