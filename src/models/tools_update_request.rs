/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum ToolsUpdateRequest {
    ToolsUpdateRequestOneOf(models::ToolsUpdateRequestOneOf),
    ToolsUpdateRequestOneOf1(models::ToolsUpdateRequestOneOf1),
    ToolsUpdateRequestOneOf2(models::ToolsUpdateRequestOneOf2),
    ToolsUpdateRequestOneOf3(models::ToolsUpdateRequestOneOf3),
    ToolsUpdateRequestOneOf4(models::ToolsUpdateRequestOneOf4),
    ToolsUpdateRequestOneOf5(models::ToolsUpdateRequestOneOf5),
    ToolsUpdateRequestOneOf6(models::ToolsUpdateRequestOneOf6),
    ToolsUpdateRequestOneOf7(models::ToolsUpdateRequestOneOf7),
    ToolsUpdateRequestOneOf8(models::ToolsUpdateRequestOneOf8),
    ToolsUpdateRequestOneOf9(models::ToolsUpdateRequestOneOf9),
    ToolsUpdateRequestOneOf10(models::ToolsUpdateRequestOneOf10),
    ToolsUpdateRequestOneOf11(models::ToolsUpdateRequestOneOf11),
    ToolsUpdateRequestOneOf12(models::ToolsUpdateRequestOneOf12),
    ToolsUpdateRequestOneOf13(models::ToolsUpdateRequestOneOf13),
    ToolsUpdateRequestOneOf14(models::ToolsUpdateRequestOneOf14),
    ToolsUpdateRequestOneOf15(models::ToolsUpdateRequestOneOf15),
}

impl Default for ToolsUpdateRequest {
    fn default() -> Self {
        Self::ToolsUpdateRequestOneOf(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "dtmf")]
    Dtmf,
    #[serde(rename = "endCall")]
    EndCall,
    #[serde(rename = "function")]
    Function,
    #[serde(rename = "ghl")]
    Ghl,
    #[serde(rename = "make")]
    Make,
    #[serde(rename = "transferCall")]
    TransferCall,
    #[serde(rename = "output")]
    Output,
    #[serde(rename = "bash")]
    Bash,
    #[serde(rename = "computer")]
    Computer,
    #[serde(rename = "textEditor")]
    TextEditor,
    #[serde(rename = "query")]
    Query,
    #[serde(rename = "google.calendar.event.create")]
    GooglePeriodCalendarPeriodEventPeriodCreate,
    #[serde(rename = "google.sheets.row.append")]
    GooglePeriodSheetsPeriodRowPeriodAppend,
    #[serde(rename = "google.calendar.availability.check")]
    GooglePeriodCalendarPeriodAvailabilityPeriodCheck,
    #[serde(rename = "slack.message.send")]
    SlackPeriodMessagePeriodSend,
    #[serde(rename = "mcp")]
    Mcp,
}

impl Default for Type {
    fn default() -> Type {
        Self::Dtmf
    }
}
/// The sub type of tool.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubType {
    #[serde(rename = "text_editor_20241022")]
    TextEditor20241022,
}

impl Default for SubType {
    fn default() -> SubType {
        Self::TextEditor20241022
    }
}
/// The name of the tool, fixed to 'str_replace_editor'
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Name {
    #[serde(rename = "str_replace_editor")]
    StrReplaceEditor,
}

impl Default for Name {
    fn default() -> Name {
        Self::StrReplaceEditor
    }
}

