/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Workflow {
    #[serde(rename = "nodes")]
    pub nodes: Vec<models::WorkflowNodesInner>,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "orgId")]
    pub org_id: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "edges")]
    pub edges: Vec<models::Edge>,
}

impl Workflow {
    pub fn new(
        nodes: Vec<models::WorkflowNodesInner>,
        id: String,
        org_id: String,
        created_at: String,
        updated_at: String,
        name: String,
        edges: Vec<models::Edge>,
    ) -> Workflow {
        Workflow {
            nodes,
            id,
            org_id,
            created_at,
            updated_at,
            name,
            edges,
        }
    }
}
