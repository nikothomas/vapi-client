/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResponseTextDoneEvent {
    /// Index of the content part
    #[serde(rename = "content_index")]
    pub content_index: f64,
    /// ID of the output item
    #[serde(rename = "item_id")]
    pub item_id: String,
    /// Index of the output item
    #[serde(rename = "output_index")]
    pub output_index: f64,
    /// Complete text content
    #[serde(rename = "text")]
    pub text: String,
    /// Event type
    #[serde(rename = "type")]
    pub r#type: TypeTrue,
}

impl ResponseTextDoneEvent {
    pub fn new(content_index: f64, item_id: String, output_index: f64, text: String, r#type: TypeTrue) -> ResponseTextDoneEvent {
        ResponseTextDoneEvent {
            content_index,
            item_id,
            output_index,
            text,
            r#type,
        }
    }
}
/// Event type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeTrue {
    #[serde(rename = "response.output_text.done")]
    ResponsePeriodOutputTextPeriodDone,
}

impl Default for TypeTrue {
    fn default() -> TypeTrue {
        Self::ResponsePeriodOutputTextPeriodDone
    }
}

