/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateMakeCredentialDto {
    #[serde(rename = "provider")]
    pub provider: ProviderTrue,
    /// Team ID
    #[serde(rename = "teamId")]
    pub team_id: String,
    /// Region of your application. For example: eu1, eu2, us1, us2
    #[serde(rename = "region")]
    pub region: String,
    /// This is not returned in the API.
    #[serde(rename = "apiKey")]
    pub api_key: String,
    /// This is the name of credential. This is just for your reference.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl CreateMakeCredentialDto {
    pub fn new(provider: ProviderTrue, team_id: String, region: String, api_key: String) -> CreateMakeCredentialDto {
        CreateMakeCredentialDto {
            provider,
            team_id,
            region,
            api_key,
            name: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProviderTrue {
    #[serde(rename = "make")]
    Make,
}

impl Default for ProviderTrue {
    fn default() -> ProviderTrue {
        Self::Make
    }
}

