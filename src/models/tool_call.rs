/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ToolCall {
    /// This is the ID of the tool call
    #[serde(rename = "id")]
    pub id: String,
    /// This is the type of tool
    #[serde(rename = "type")]
    pub r#type: String,
    /// This is the function that was called
    #[serde(rename = "function")]
    pub function: models::ToolCallFunction,
}

impl ToolCall {
    pub fn new(id: String, r#type: String, function: models::ToolCallFunction) -> ToolCall {
        ToolCall {
            id,
            r#type,
            function,
        }
    }
}
