/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::OpenApi;


use crate::models;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, OpenApi)]
#[serde(untagged)]
pub enum EdgeCondition {
    AiEdgeCondition(models::AiEdgeCondition),
    LogicEdgeCondition(models::LogicEdgeCondition),
    FailedEdgeCondition(models::FailedEdgeCondition),
}

impl Default for EdgeCondition {
    fn default() -> Self {
        Self::AiEdgeCondition(Default::default())
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, OpenApi)]
pub enum Type {
    #[serde(rename = "ai")]
    Ai,
    #[serde(rename = "logic")]
    Logic,
    #[serde(rename = "failed")]
    Failed,
}

impl Default for Type {
    fn default() -> Type {
        Self::Ai
    }
}
