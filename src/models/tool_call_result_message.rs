/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::OpenApi;


use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, OpenApi)]
pub struct ToolCallResultMessage {
    /// The role of the tool call result in the conversation.
    #[serde(rename = "role")]
    pub role: String,
    /// The ID of the tool call.
    #[serde(rename = "toolCallId")]
    pub tool_call_id: String,
    /// The name of the tool that returned the result.
    #[serde(rename = "name")]
    pub name: String,
    /// The result of the tool call in JSON format.
    #[serde(rename = "result")]
    pub result: String,
    /// The timestamp when the message was sent.
    #[serde(rename = "time")]
    pub time: f64,
    /// The number of seconds from the start of the conversation.
    #[serde(rename = "secondsFromStart")]
    pub seconds_from_start: f64,
}

impl ToolCallResultMessage {
    pub fn new(
        role: String,
        tool_call_id: String,
        name: String,
        result: String,
        time: f64,
        seconds_from_start: f64,
    ) -> ToolCallResultMessage {
        ToolCallResultMessage {
            role,
            tool_call_id,
            name,
            result,
            time,
            seconds_from_start,
        }
    }
}
