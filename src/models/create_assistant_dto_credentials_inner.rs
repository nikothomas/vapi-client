/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum CreateAssistantDtoCredentialsInner {
    CreateAnthropicCredentialDto(Box<models::CreateAnthropicCredentialDto>),
    CreateAnyscaleCredentialDto(Box<models::CreateAnyscaleCredentialDto>),
    CreateAssemblyAiCredentialDto(Box<models::CreateAssemblyAiCredentialDto>),
    CreateAzureCredentialDto(Box<models::CreateAzureCredentialDto>),
    CreateAzureOpenAiCredentialDto(Box<models::CreateAzureOpenAiCredentialDto>),
    CreateByoSipTrunkCredentialDto(Box<models::CreateByoSipTrunkCredentialDto>),
    CreateCartesiaCredentialDto(Box<models::CreateCartesiaCredentialDto>),
    CreateCerebrasCredentialDto(Box<models::CreateCerebrasCredentialDto>),
    CreateCloudflareCredentialDto(Box<models::CreateCloudflareCredentialDto>),
    CreateCustomLlmCredentialDto(Box<models::CreateCustomLlmCredentialDto>),
    CreateDeepgramCredentialDto(Box<models::CreateDeepgramCredentialDto>),
    CreateDeepInfraCredentialDto(Box<models::CreateDeepInfraCredentialDto>),
    CreateDeepSeekCredentialDto(Box<models::CreateDeepSeekCredentialDto>),
    CreateElevenLabsCredentialDto(Box<models::CreateElevenLabsCredentialDto>),
    CreateGcpCredentialDto(Box<models::CreateGcpCredentialDto>),
    CreateGladiaCredentialDto(Box<models::CreateGladiaCredentialDto>),
    CreateGoHighLevelCredentialDto(Box<models::CreateGoHighLevelCredentialDto>),
    CreateGoogleCredentialDto(Box<models::CreateGoogleCredentialDto>),
    CreateGroqCredentialDto(Box<models::CreateGroqCredentialDto>),
    CreateHumeCredentialDto(Box<models::CreateHumeCredentialDto>),
    CreateInflectionAiCredentialDto(Box<models::CreateInflectionAiCredentialDto>),
    CreateLangfuseCredentialDto(Box<models::CreateLangfuseCredentialDto>),
    CreateLmntCredentialDto(Box<models::CreateLmntCredentialDto>),
    CreateMakeCredentialDto(Box<models::CreateMakeCredentialDto>),
    CreateMistralCredentialDto(Box<models::CreateMistralCredentialDto>),
    CreateNeuphonicCredentialDto(Box<models::CreateNeuphonicCredentialDto>),
    CreateOpenAiCredentialDto(Box<models::CreateOpenAiCredentialDto>),
    CreateOpenRouterCredentialDto(Box<models::CreateOpenRouterCredentialDto>),
    CreatePerplexityAiCredentialDto(Box<models::CreatePerplexityAiCredentialDto>),
    CreatePlayHtCredentialDto(Box<models::CreatePlayHtCredentialDto>),
    CreateRimeAiCredentialDto(Box<models::CreateRimeAiCredentialDto>),
    CreateRunpodCredentialDto(Box<models::CreateRunpodCredentialDto>),
    CreateS3CredentialDto(Box<models::CreateS3CredentialDto>),
    CreateSmallestAiCredentialDto(Box<models::CreateSmallestAiCredentialDto>),
    CreateSpeechmaticsCredentialDto(Box<models::CreateSpeechmaticsCredentialDto>),
    CreateSupabaseCredentialDto(Box<models::CreateSupabaseCredentialDto>),
    CreateTavusCredentialDto(Box<models::CreateTavusCredentialDto>),
    CreateTogetherAiCredentialDto(Box<models::CreateTogetherAiCredentialDto>),
    CreateTrieveCredentialDto(Box<models::CreateTrieveCredentialDto>),
    CreateTwilioCredentialDto(Box<models::CreateTwilioCredentialDto>),
    CreateVonageCredentialDto(Box<models::CreateVonageCredentialDto>),
    CreateWebhookCredentialDto(Box<models::CreateWebhookCredentialDto>),
    CreateXaiCredentialDto(Box<models::CreateXaiCredentialDto>),
}

impl Default for CreateAssistantDtoCredentialsInner {
    fn default() -> Self {
        Self::CreateAnthropicCredentialDto(Default::default())
    }
}
/// This is the api key for Grok in XAi's console. Get it from here: https://console.x.ai
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Provider {
    #[serde(rename = "xai")]
    Xai,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::Xai
    }
}
/// This is the service being used in Azure.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Service {
    #[serde(rename = "speech")]
    Speech,
    #[serde(rename = "blob_storage")]
    BlobStorage,
}

impl Default for Service {
    fn default() -> Service {
        Self::Speech
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Models {
    #[serde(rename = "gpt-4o-2024-08-06")]
    Gpt4o20240806,
    #[serde(rename = "gpt-4o-mini-2024-07-18")]
    Gpt4oMini20240718,
    #[serde(rename = "gpt-4o-2024-05-13")]
    Gpt4o20240513,
    #[serde(rename = "gpt-4-turbo-2024-04-09")]
    Gpt4Turbo20240409,
    #[serde(rename = "gpt-4-0125-preview")]
    Gpt40125Preview,
    #[serde(rename = "gpt-4-1106-preview")]
    Gpt41106Preview,
    #[serde(rename = "gpt-4-0613")]
    Gpt40613,
    #[serde(rename = "gpt-35-turbo-0125")]
    Gpt35Turbo0125,
    #[serde(rename = "gpt-35-turbo-1106")]
    Gpt35Turbo1106,
}

impl Default for Models {
    fn default() -> Models {
        Self::Gpt4o20240806
    }
}

