/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};
use utoipa::OpenApi;


use crate::models;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize, OpenApi)]
#[serde(untagged)]
pub enum CreateAssistantDtoCredentialsInner {
    CreateAnthropicCredentialDto(models::CreateAnthropicCredentialDto),
    CreateAnyscaleCredentialDto(models::CreateAnyscaleCredentialDto),
    CreateAssemblyAiCredentialDto(models::CreateAssemblyAiCredentialDto),
    CreateAzureOpenAiCredentialDto(models::CreateAzureOpenAiCredentialDto),
    CreateAzureCredentialDto(models::CreateAzureCredentialDto),
    CreateByoSipTrunkCredentialDto(models::CreateByoSipTrunkCredentialDto),
    CreateCartesiaCredentialDto(models::CreateCartesiaCredentialDto),
    CreateCloudflareCredentialDto(models::CreateCloudflareCredentialDto),
    CreateCustomLlmCredentialDto(models::CreateCustomLlmCredentialDto),
    CreateDeepgramCredentialDto(models::CreateDeepgramCredentialDto),
    CreateDeepInfraCredentialDto(models::CreateDeepInfraCredentialDto),
    CreateDeepSeekCredentialDto(models::CreateDeepSeekCredentialDto),
    CreateElevenLabsCredentialDto(models::CreateElevenLabsCredentialDto),
    CreateGcpCredentialDto(models::CreateGcpCredentialDto),
    CreateGladiaCredentialDto(models::CreateGladiaCredentialDto),
    CreateGoHighLevelCredentialDto(models::CreateGoHighLevelCredentialDto),
    CreateGroqCredentialDto(models::CreateGroqCredentialDto),
    CreateLangfuseCredentialDto(models::CreateLangfuseCredentialDto),
    CreateLmntCredentialDto(models::CreateLmntCredentialDto),
    CreateMakeCredentialDto(models::CreateMakeCredentialDto),
    CreateOpenAiCredentialDto(models::CreateOpenAiCredentialDto),
    CreateOpenRouterCredentialDto(models::CreateOpenRouterCredentialDto),
    CreatePerplexityAiCredentialDto(models::CreatePerplexityAiCredentialDto),
    CreatePlayHtCredentialDto(models::CreatePlayHtCredentialDto),
    CreateRimeAiCredentialDto(models::CreateRimeAiCredentialDto),
    CreateRunpodCredentialDto(models::CreateRunpodCredentialDto),
    CreateS3CredentialDto(models::CreateS3CredentialDto),
    CreateSupabaseCredentialDto(models::CreateSupabaseCredentialDto),
    CreateSmallestAiCredentialDto(models::CreateSmallestAiCredentialDto),
    CreateTavusCredentialDto(models::CreateTavusCredentialDto),
    CreateTogetherAiCredentialDto(models::CreateTogetherAiCredentialDto),
    CreateTwilioCredentialDto(models::CreateTwilioCredentialDto),
    CreateVonageCredentialDto(models::CreateVonageCredentialDto),
    CreateWebhookCredentialDto(models::CreateWebhookCredentialDto),
    CreateXaiCredentialDto(models::CreateXaiCredentialDto),
}

impl Default for CreateAssistantDtoCredentialsInner {
    fn default() -> Self {
        Self::CreateAnthropicCredentialDto(Default::default())
    }
}
/// This is the api key for Grok in XAi's console. Get it from here: https://console.x.ai
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, OpenApi)]
pub enum Provider {
    #[serde(rename = "xai")]
    Xai,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::Xai
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, OpenApi)]
pub enum Models {
    #[serde(rename = "gpt-4o-2024-08-06")]
    Gpt4o20240806,
    #[serde(rename = "gpt-4o-mini-2024-07-18")]
    Gpt4oMini20240718,
    #[serde(rename = "gpt-4o-2024-05-13")]
    Gpt4o20240513,
    #[serde(rename = "gpt-4-turbo-2024-04-09")]
    Gpt4Turbo20240409,
    #[serde(rename = "gpt-4-0125-preview")]
    Gpt40125Preview,
    #[serde(rename = "gpt-4-1106-preview")]
    Gpt41106Preview,
    #[serde(rename = "gpt-4-0613")]
    Gpt40613,
    #[serde(rename = "gpt-35-turbo-0125")]
    Gpt35Turbo0125,
    #[serde(rename = "gpt-35-turbo-1106")]
    Gpt35Turbo1106,
}

impl Default for Models {
    fn default() -> Models {
        Self::Gpt4o20240806
    }
}
/// This is the service being used in Azure.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize, OpenApi)]
pub enum Service {
    #[serde(rename = "speech")]
    Speech,
    #[serde(rename = "blob_storage")]
    BlobStorage,
}

impl Default for Service {
    fn default() -> Service {
        Self::Speech
    }
}
