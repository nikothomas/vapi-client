/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResponseCompletedEvent {
    /// The completed response
    #[serde(rename = "response")]
    pub response: models::ResponseObject,
    /// Event type
    #[serde(rename = "type")]
    pub r#type: TypeTrue,
}

impl ResponseCompletedEvent {
    pub fn new(response: models::ResponseObject, r#type: TypeTrue) -> ResponseCompletedEvent {
        ResponseCompletedEvent { response, r#type }
    }
}
/// Event type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeTrue {
    #[serde(rename = "response.completed")]
    ResponsePeriodCompleted,
}

impl Default for TypeTrue {
    fn default() -> TypeTrue {
        Self::ResponsePeriodCompleted
    }
}
