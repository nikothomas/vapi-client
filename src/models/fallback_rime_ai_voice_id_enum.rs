/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FallbackRimeAiVoiceIdEnum {
    #[serde(rename = "abbie")]
    Abbie,
    #[serde(rename = "allison")]
    Allison,
    #[serde(rename = "ally")]
    Ally,
    #[serde(rename = "alona")]
    Alona,
    #[serde(rename = "amber")]
    Amber,
    #[serde(rename = "ana")]
    Ana,
    #[serde(rename = "antoine")]
    Antoine,
    #[serde(rename = "armon")]
    Armon,
    #[serde(rename = "brenda")]
    Brenda,
    #[serde(rename = "brittany")]
    Brittany,
    #[serde(rename = "carol")]
    Carol,
    #[serde(rename = "colin")]
    Colin,
    #[serde(rename = "courtney")]
    Courtney,
    #[serde(rename = "elena")]
    Elena,
    #[serde(rename = "elliot")]
    Elliot,
    #[serde(rename = "eva")]
    Eva,
    #[serde(rename = "geoff")]
    Geoff,
    #[serde(rename = "gerald")]
    Gerald,
    #[serde(rename = "hank")]
    Hank,
    #[serde(rename = "helen")]
    Helen,
    #[serde(rename = "hera")]
    Hera,
    #[serde(rename = "jen")]
    Jen,
    #[serde(rename = "joe")]
    Joe,
    #[serde(rename = "joy")]
    Joy,
    #[serde(rename = "juan")]
    Juan,
    #[serde(rename = "kendra")]
    Kendra,
    #[serde(rename = "kendrick")]
    Kendrick,
    #[serde(rename = "kenneth")]
    Kenneth,
    #[serde(rename = "kevin")]
    Kevin,
    #[serde(rename = "kris")]
    Kris,
    #[serde(rename = "linda")]
    Linda,
    #[serde(rename = "madison")]
    Madison,
    #[serde(rename = "marge")]
    Marge,
    #[serde(rename = "marina")]
    Marina,
    #[serde(rename = "marissa")]
    Marissa,
    #[serde(rename = "marta")]
    Marta,
    #[serde(rename = "maya")]
    Maya,
    #[serde(rename = "nicholas")]
    Nicholas,
    #[serde(rename = "nyles")]
    Nyles,
    #[serde(rename = "phil")]
    Phil,
    #[serde(rename = "reba")]
    Reba,
    #[serde(rename = "rex")]
    Rex,
    #[serde(rename = "rick")]
    Rick,
    #[serde(rename = "ritu")]
    Ritu,
    #[serde(rename = "rob")]
    Rob,
    #[serde(rename = "rodney")]
    Rodney,
    #[serde(rename = "rohan")]
    Rohan,
    #[serde(rename = "rosco")]
    Rosco,
    #[serde(rename = "samantha")]
    Samantha,
    #[serde(rename = "sandy")]
    Sandy,
    #[serde(rename = "selena")]
    Selena,
    #[serde(rename = "seth")]
    Seth,
    #[serde(rename = "sharon")]
    Sharon,
    #[serde(rename = "stan")]
    Stan,
    #[serde(rename = "tamra")]
    Tamra,
    #[serde(rename = "tanya")]
    Tanya,
    #[serde(rename = "tibur")]
    Tibur,
    #[serde(rename = "tj")]
    Tj,
    #[serde(rename = "tyler")]
    Tyler,
    #[serde(rename = "viv")]
    Viv,
    #[serde(rename = "yadira")]
    Yadira,
    #[serde(rename = "marsh")]
    Marsh,
    #[serde(rename = "bayou")]
    Bayou,
    #[serde(rename = "creek")]
    Creek,
    #[serde(rename = "brook")]
    Brook,
    #[serde(rename = "flower")]
    Flower,
    #[serde(rename = "spore")]
    Spore,
    #[serde(rename = "glacier")]
    Glacier,
    #[serde(rename = "gulch")]
    Gulch,
    #[serde(rename = "alpine")]
    Alpine,
    #[serde(rename = "cove")]
    Cove,
    #[serde(rename = "lagoon")]
    Lagoon,
    #[serde(rename = "tundra")]
    Tundra,
    #[serde(rename = "steppe")]
    Steppe,
    #[serde(rename = "mesa")]
    Mesa,
    #[serde(rename = "grove")]
    Grove,
    #[serde(rename = "rainforest")]
    Rainforest,
    #[serde(rename = "moraine")]
    Moraine,
    #[serde(rename = "wildflower")]
    Wildflower,
    #[serde(rename = "peak")]
    Peak,
    #[serde(rename = "boulder")]
    Boulder,
    #[serde(rename = "gypsum")]
    Gypsum,
    #[serde(rename = "zest")]
    Zest,

}

impl std::fmt::Display for FallbackRimeAiVoiceIdEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Abbie => write!(f, "abbie"),
            Self::Allison => write!(f, "allison"),
            Self::Ally => write!(f, "ally"),
            Self::Alona => write!(f, "alona"),
            Self::Amber => write!(f, "amber"),
            Self::Ana => write!(f, "ana"),
            Self::Antoine => write!(f, "antoine"),
            Self::Armon => write!(f, "armon"),
            Self::Brenda => write!(f, "brenda"),
            Self::Brittany => write!(f, "brittany"),
            Self::Carol => write!(f, "carol"),
            Self::Colin => write!(f, "colin"),
            Self::Courtney => write!(f, "courtney"),
            Self::Elena => write!(f, "elena"),
            Self::Elliot => write!(f, "elliot"),
            Self::Eva => write!(f, "eva"),
            Self::Geoff => write!(f, "geoff"),
            Self::Gerald => write!(f, "gerald"),
            Self::Hank => write!(f, "hank"),
            Self::Helen => write!(f, "helen"),
            Self::Hera => write!(f, "hera"),
            Self::Jen => write!(f, "jen"),
            Self::Joe => write!(f, "joe"),
            Self::Joy => write!(f, "joy"),
            Self::Juan => write!(f, "juan"),
            Self::Kendra => write!(f, "kendra"),
            Self::Kendrick => write!(f, "kendrick"),
            Self::Kenneth => write!(f, "kenneth"),
            Self::Kevin => write!(f, "kevin"),
            Self::Kris => write!(f, "kris"),
            Self::Linda => write!(f, "linda"),
            Self::Madison => write!(f, "madison"),
            Self::Marge => write!(f, "marge"),
            Self::Marina => write!(f, "marina"),
            Self::Marissa => write!(f, "marissa"),
            Self::Marta => write!(f, "marta"),
            Self::Maya => write!(f, "maya"),
            Self::Nicholas => write!(f, "nicholas"),
            Self::Nyles => write!(f, "nyles"),
            Self::Phil => write!(f, "phil"),
            Self::Reba => write!(f, "reba"),
            Self::Rex => write!(f, "rex"),
            Self::Rick => write!(f, "rick"),
            Self::Ritu => write!(f, "ritu"),
            Self::Rob => write!(f, "rob"),
            Self::Rodney => write!(f, "rodney"),
            Self::Rohan => write!(f, "rohan"),
            Self::Rosco => write!(f, "rosco"),
            Self::Samantha => write!(f, "samantha"),
            Self::Sandy => write!(f, "sandy"),
            Self::Selena => write!(f, "selena"),
            Self::Seth => write!(f, "seth"),
            Self::Sharon => write!(f, "sharon"),
            Self::Stan => write!(f, "stan"),
            Self::Tamra => write!(f, "tamra"),
            Self::Tanya => write!(f, "tanya"),
            Self::Tibur => write!(f, "tibur"),
            Self::Tj => write!(f, "tj"),
            Self::Tyler => write!(f, "tyler"),
            Self::Viv => write!(f, "viv"),
            Self::Yadira => write!(f, "yadira"),
            Self::Marsh => write!(f, "marsh"),
            Self::Bayou => write!(f, "bayou"),
            Self::Creek => write!(f, "creek"),
            Self::Brook => write!(f, "brook"),
            Self::Flower => write!(f, "flower"),
            Self::Spore => write!(f, "spore"),
            Self::Glacier => write!(f, "glacier"),
            Self::Gulch => write!(f, "gulch"),
            Self::Alpine => write!(f, "alpine"),
            Self::Cove => write!(f, "cove"),
            Self::Lagoon => write!(f, "lagoon"),
            Self::Tundra => write!(f, "tundra"),
            Self::Steppe => write!(f, "steppe"),
            Self::Mesa => write!(f, "mesa"),
            Self::Grove => write!(f, "grove"),
            Self::Rainforest => write!(f, "rainforest"),
            Self::Moraine => write!(f, "moraine"),
            Self::Wildflower => write!(f, "wildflower"),
            Self::Peak => write!(f, "peak"),
            Self::Boulder => write!(f, "boulder"),
            Self::Gypsum => write!(f, "gypsum"),
            Self::Zest => write!(f, "zest"),
        }
    }
}

impl Default for FallbackRimeAiVoiceIdEnum {
    fn default() -> FallbackRimeAiVoiceIdEnum {
        Self::Abbie
    }
}

