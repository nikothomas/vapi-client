/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateLangfuseCredentialDto {
    /// The public key for Langfuse project. Eg: pk-lf-...
    #[serde(rename = "publicKey", skip_serializing_if = "Option::is_none")]
    pub public_key: Option<String>,
    /// The secret key for Langfuse project. Eg: sk-lf-... .This is not returned in the API.
    #[serde(rename = "apiKey", skip_serializing_if = "Option::is_none")]
    pub api_key: Option<String>,
    /// The host URL for Langfuse project. Eg: https://cloud.langfuse.com
    #[serde(rename = "apiUrl", skip_serializing_if = "Option::is_none")]
    pub api_url: Option<String>,
    /// This is the name of credential. This is just for your reference.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl UpdateLangfuseCredentialDto {
    pub fn new() -> UpdateLangfuseCredentialDto {
        UpdateLangfuseCredentialDto {
            public_key: None,
            api_key: None,
            api_url: None,
            name: None,
        }
    }
}
