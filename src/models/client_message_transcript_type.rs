/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ClientMessageTranscriptType : This is the type of the message. \"transcript\" is sent as transcriber outputs partial or final transcript.
/// This is the type of the message. \"transcript\" is sent as transcriber outputs partial or final transcript.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ClientMessageTranscriptType {
    #[serde(rename = "transcript")]
    Transcript,
    #[serde(rename = "transcript[transcriptType='final']")]
    TranscriptLeftSquareBracketTranscriptTypeEqualQuoteFinalQuoteRightSquareBracket,

}

impl std::fmt::Display for ClientMessageTranscriptType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Transcript => write!(f, "transcript"),
            Self::TranscriptLeftSquareBracketTranscriptTypeEqualQuoteFinalQuoteRightSquareBracket => write!(f, "transcript[transcriptType='final']"),
        }
    }
}

impl Default for ClientMessageTranscriptType {
    fn default() -> ClientMessageTranscriptType {
        Self::Transcript
    }
}

