/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VoicemailDetectionBackoffPlan {
    /// This is the number of seconds to wait before starting the first retry attempt.
    #[serde(rename = "startAtSeconds", skip_serializing_if = "Option::is_none")]
    pub start_at_seconds: Option<f64>,
    /// This is the interval in seconds between retry attempts.
    #[serde(rename = "frequencySeconds", skip_serializing_if = "Option::is_none")]
    pub frequency_seconds: Option<f64>,
    /// This is the maximum number of retry attempts before giving up.
    #[serde(rename = "maxRetries", skip_serializing_if = "Option::is_none")]
    pub max_retries: Option<f64>,
}

impl VoicemailDetectionBackoffPlan {
    pub fn new() -> VoicemailDetectionBackoffPlan {
        VoicemailDetectionBackoffPlan {
            start_at_seconds: None,
            frequency_seconds: None,
            max_retries: None,
        }
    }
}
