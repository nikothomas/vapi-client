/*
 * Vapi API
 *
 * Voice AI for developers.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LangfuseObservabilityPlan {
    #[serde(rename = "provider")]
    pub provider: Provider,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
}

impl LangfuseObservabilityPlan {
    pub fn new(provider: Provider, tags: Vec<String>) -> LangfuseObservabilityPlan {
        LangfuseObservabilityPlan {
            provider,
            tags,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Provider {
    #[serde(rename = "langfuse")]
    Langfuse,
}

impl Default for Provider {
    fn default() -> Provider {
        Self::Langfuse
    }
}

