/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientMessageWorkflowNodeStarted {
    /// This is the type of the message. \"workflow.node.started\" is sent when the active node changes.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// This is the active node.
    #[serde(rename = "node")]
    pub node: std::collections::HashMap<String, serde_json::Value>,
}

impl ClientMessageWorkflowNodeStarted {
    pub fn new(r#type: Type, node: std::collections::HashMap<String, serde_json::Value>) -> ClientMessageWorkflowNodeStarted {
        ClientMessageWorkflowNodeStarted {
            r#type,
            node,
        }
    }
}
/// This is the type of the message. \"workflow.node.started\" is sent when the active node changes.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "workflow.node.started")]
    WorkflowPeriodNodePeriodStarted,
}

impl Default for Type {
    fn default() -> Type {
        Self::WorkflowPeriodNodePeriodStarted
    }
}

