/*
 * Vapi API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferDestinationAssistant {
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<models::TransferDestinationAssistantMessage>,
    #[serde(rename = "transferMode", skip_serializing_if = "Option::is_none")]
    pub transfer_mode: Option<models::TransferMode>,
    /// This is the assistant to transfer the call to.
    #[serde(rename = "assistantName")]
    pub assistant_name: String,
    /// This is the description of the destination, used by the AI to choose when and how to transfer the call.
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
}

impl TransferDestinationAssistant {
    pub fn new(assistant_name: String) -> TransferDestinationAssistant {
        TransferDestinationAssistant {
            message: None,
            transfer_mode: None,
            assistant_name,
            description: None,
        }
    }
}

