/*
 * Vapi API
 *
 * API for building voice assistants
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum VapiModelStepsInner {
    HandoffStep(models::HandoffStep),
    CallbackStep(models::CallbackStep),
}

impl Default for VapiModelStepsInner {
    fn default() -> Self {
        Self::HandoffStep(Default::default())
    }
}
/// This is a step that takes a handoff from the previous step. This means it won't return to the calling step. The workflow execution will continue linearly.  Use case: - You want to collect information linearly (e.g. a form, provide information, etc).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "handoff")]
    Handoff,
    #[serde(rename = "callback")]
    Callback,
}

impl Default for Type {
    fn default() -> Type {
        Self::Handoff
    }
}
