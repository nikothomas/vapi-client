openapi: 3.0.1
info:
  title: Vapi API
  version: ''
paths:
  /call:
    get:
      operationId: calls_list
      tags:
        - Calls
      parameters:
        - name: id
          in: query
          description: This is the unique identifier for the call.
          required: false
          schema:
            type: string
            nullable: true
        - name: assistantId
          in: query
          description: This will return calls with the specified assistantId.
          required: false
          schema:
            type: string
            nullable: true
        - name: phoneNumberId
          in: query
          description: >-
            This is the phone number that will be used for the call. To use a
            transient number, use `phoneNumber` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
          required: false
          schema:
            type: string
            nullable: true
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                    - type: inboundPhoneCall
                      costs:
                        - minutes: 1.1
                          cost: 1.1
                          type: transport
                      messages:
                        - role: role
                          message: message
                          time: 1.1
                          endTime: 1.1
                          secondsFromStart: 1.1
                      phoneCallProvider: twilio
                      phoneCallTransport: sip
                      status: scheduled
                      endedReason: call-start-error-neither-assistant-nor-server-set
                      destination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      id: id
                      orgId: orgId
                      createdAt: '2024-01-15T09:30:00Z'
                      updatedAt: '2024-01-15T09:30:00Z'
                      startedAt: '2024-01-15T09:30:00Z'
                      endedAt: '2024-01-15T09:30:00Z'
                      cost: 1.1
                      costBreakdown:
                        transport: 1.1
                        stt: 1.1
                        llm: 1.1
                        tts: 1.1
                        vapi: 1.1
                        total: 1.1
                        llmPromptTokens: 1.1
                        llmCompletionTokens: 1.1
                        ttsCharacters: 1.1
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      analysis:
                        summary: summary
                        structuredData:
                          key: value
                        structuredDataMulti:
                          - key: value
                        successEvaluation: successEvaluation
                      monitor:
                        listenUrl: listenUrl
                        controlUrl: controlUrl
                      artifact:
                        messages:
                          - role: role
                            message: message
                            time: 1.1
                            endTime: 1.1
                            secondsFromStart: 1.1
                        messagesOpenAIFormatted:
                          - role: assistant
                        recordingUrl: recordingUrl
                        stereoRecordingUrl: stereoRecordingUrl
                        videoRecordingUrl: videoRecordingUrl
                        videoRecordingStartDelaySeconds: 1.1
                        transcript: transcript
                        pcapUrl: pcapUrl
                      transport:
                        provider: twilio
                        assistantVideoEnabled: true
                      phoneCallProviderId: phoneCallProviderId
                      assistantId: assistantId
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                      squadId: squadId
                      squad:
                        name: name
                        members:
                          - {}
                        membersOverrides:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        fallbackDestination:
                          number: number
                          type: number
                        twilioPhoneNumber: twilioPhoneNumber
                        twilioAccountSid: twilioAccountSid
                        twilioAuthToken: twilioAuthToken
                        name: name
                        assistantId: assistantId
                        squadId: squadId
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      customerId: customerId
                      customer:
                        numberE164CheckEnabled: true
                        extension: extension
                        number: number
                        sipUri: sipUri
                        name: name
                      name: name
                      schedulePlan:
                        earliestAt: '2024-01-15T09:30:00Z'
                        latestAt: '2024-01-15T09:30:00Z'
      summary: List Calls
      security:
        - BearerAuth: []
    post:
      operationId: calls_create
      tags:
        - Calls
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallsCreateResponse'
      summary: Create Call
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customers:
                  type: array
                  items:
                    $ref: '#/components/schemas/CreateCustomerDto'
                  nullable: true
                  description: >-
                    This is used to issue batch calls to multiple customers.


                    Only relevant for `outboundPhoneCall`. To call a single
                    customer, use `customer` instead.
                name:
                  type: string
                  nullable: true
                  description: >-
                    This is the name of the call. This is just for your own
                    reference.
                schedulePlan:
                  $ref: '#/components/schemas/SchedulePlan'
                  nullable: true
                  description: This is the schedule plan of the call.
                assistantId:
                  type: string
                  nullable: true
                  description: >-
                    This is the assistant that will be used for the call. To use
                    a transient assistant, use `assistant` instead.
                assistant:
                  $ref: '#/components/schemas/CreateAssistantDto'
                  nullable: true
                  description: >-
                    This is the assistant that will be used for the call. To use
                    an existing assistant, use `assistantId` instead.
                assistantOverrides:
                  $ref: '#/components/schemas/AssistantOverrides'
                  nullable: true
                  description: >-
                    These are the overrides for the `assistant` or
                    `assistantId`'s settings and template variables.
                squadId:
                  type: string
                  nullable: true
                  description: >-
                    This is the squad that will be used for the call. To use a
                    transient squad, use `squad` instead.
                squad:
                  $ref: '#/components/schemas/CreateSquadDto'
                  nullable: true
                  description: >-
                    This is a squad that will be used for the call. To use an
                    existing squad, use `squadId` instead.
                phoneNumberId:
                  type: string
                  nullable: true
                  description: >-
                    This is the phone number that will be used for the call. To
                    use a transient number, use `phoneNumber` instead.


                    Only relevant for `outboundPhoneCall` and `inboundPhoneCall`
                    type.
                phoneNumber:
                  $ref: '#/components/schemas/ImportTwilioPhoneNumberDto'
                  nullable: true
                  description: >-
                    This is the phone number that will be used for the call. To
                    use an existing number, use `phoneNumberId` instead.


                    Only relevant for `outboundPhoneCall` and `inboundPhoneCall`
                    type.
                customerId:
                  type: string
                  nullable: true
                  description: >-
                    This is the customer that will be called. To call a
                    transient customer , use `customer` instead.


                    Only relevant for `outboundPhoneCall` and `inboundPhoneCall`
                    type.
                customer:
                  $ref: '#/components/schemas/CreateCustomerDto'
                  nullable: true
                  description: >-
                    This is the customer that will be called. To call an
                    existing customer, use `customerId` instead.


                    Only relevant for `outboundPhoneCall` and `inboundPhoneCall`
                    type.
  /call/{id}:
    get:
      operationId: calls_get
      tags:
        - Calls
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                    type: inboundPhoneCall
                    costs:
                      - provider: twilio
                        minutes: 1.1
                        cost: 1.1
                        type: transport
                    messages:
                      - role: role
                        message: message
                        time: 1.1
                        endTime: 1.1
                        secondsFromStart: 1.1
                        duration: 1.1
                    phoneCallProvider: twilio
                    phoneCallTransport: sip
                    status: scheduled
                    endedReason: call-start-error-neither-assistant-nor-server-set
                    destination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    startedAt: '2024-01-15T09:30:00Z'
                    endedAt: '2024-01-15T09:30:00Z'
                    cost: 1.1
                    costBreakdown:
                      transport: 1.1
                      stt: 1.1
                      llm: 1.1
                      tts: 1.1
                      vapi: 1.1
                      total: 1.1
                      llmPromptTokens: 1.1
                      llmCompletionTokens: 1.1
                      ttsCharacters: 1.1
                      analysisCostBreakdown:
                        summary: 1.1
                        summaryPromptTokens: 1.1
                        summaryCompletionTokens: 1.1
                        structuredData: 1.1
                        structuredDataPromptTokens: 1.1
                        structuredDataCompletionTokens: 1.1
                        successEvaluation: 1.1
                        successEvaluationPromptTokens: 1.1
                        successEvaluationCompletionTokens: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    analysis:
                      summary: summary
                      structuredData:
                        key: value
                      structuredDataMulti:
                        - key: value
                      successEvaluation: successEvaluation
                    monitor:
                      listenUrl: listenUrl
                      controlUrl: controlUrl
                    artifact:
                      messages:
                        - role: role
                          message: message
                          time: 1.1
                          endTime: 1.1
                          secondsFromStart: 1.1
                      messagesOpenAIFormatted:
                        - role: assistant
                      recordingUrl: recordingUrl
                      stereoRecordingUrl: stereoRecordingUrl
                      videoRecordingUrl: videoRecordingUrl
                      videoRecordingStartDelaySeconds: 1.1
                      transcript: transcript
                      pcapUrl: pcapUrl
                    transport:
                      provider: twilio
                      assistantVideoEnabled: true
                    phoneCallProviderId: phoneCallProviderId
                    assistantId: assistantId
                    assistant:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    assistantOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    squadId: squadId
                    squad:
                      name: name
                      members:
                        - {}
                      membersOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                    phoneNumberId: phoneNumberId
                    phoneNumber:
                      fallbackDestination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      twilioPhoneNumber: twilioPhoneNumber
                      twilioAccountSid: twilioAccountSid
                      twilioAuthToken: twilioAuthToken
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                    customerId: customerId
                    customer:
                      numberE164CheckEnabled: true
                      extension: extension
                      number: number
                      sipUri: sipUri
                      name: name
                    name: name
                    schedulePlan:
                      earliestAt: '2024-01-15T09:30:00Z'
                      latestAt: '2024-01-15T09:30:00Z'
      summary: Get Call
      security:
        - BearerAuth: []
    delete:
      operationId: calls_delete
      tags:
        - Calls
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                    type: inboundPhoneCall
                    costs:
                      - provider: twilio
                        minutes: 1.1
                        cost: 1.1
                        type: transport
                    messages:
                      - role: role
                        message: message
                        time: 1.1
                        endTime: 1.1
                        secondsFromStart: 1.1
                        duration: 1.1
                    phoneCallProvider: twilio
                    phoneCallTransport: sip
                    status: scheduled
                    endedReason: call-start-error-neither-assistant-nor-server-set
                    destination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    startedAt: '2024-01-15T09:30:00Z'
                    endedAt: '2024-01-15T09:30:00Z'
                    cost: 1.1
                    costBreakdown:
                      transport: 1.1
                      stt: 1.1
                      llm: 1.1
                      tts: 1.1
                      vapi: 1.1
                      total: 1.1
                      llmPromptTokens: 1.1
                      llmCompletionTokens: 1.1
                      ttsCharacters: 1.1
                      analysisCostBreakdown:
                        summary: 1.1
                        summaryPromptTokens: 1.1
                        summaryCompletionTokens: 1.1
                        structuredData: 1.1
                        structuredDataPromptTokens: 1.1
                        structuredDataCompletionTokens: 1.1
                        successEvaluation: 1.1
                        successEvaluationPromptTokens: 1.1
                        successEvaluationCompletionTokens: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    analysis:
                      summary: summary
                      structuredData:
                        key: value
                      structuredDataMulti:
                        - key: value
                      successEvaluation: successEvaluation
                    monitor:
                      listenUrl: listenUrl
                      controlUrl: controlUrl
                    artifact:
                      messages:
                        - role: role
                          message: message
                          time: 1.1
                          endTime: 1.1
                          secondsFromStart: 1.1
                      messagesOpenAIFormatted:
                        - role: assistant
                      recordingUrl: recordingUrl
                      stereoRecordingUrl: stereoRecordingUrl
                      videoRecordingUrl: videoRecordingUrl
                      videoRecordingStartDelaySeconds: 1.1
                      transcript: transcript
                      pcapUrl: pcapUrl
                    transport:
                      provider: twilio
                      assistantVideoEnabled: true
                    phoneCallProviderId: phoneCallProviderId
                    assistantId: assistantId
                    assistant:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    assistantOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    squadId: squadId
                    squad:
                      name: name
                      members:
                        - {}
                      membersOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                    phoneNumberId: phoneNumberId
                    phoneNumber:
                      fallbackDestination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      twilioPhoneNumber: twilioPhoneNumber
                      twilioAccountSid: twilioAccountSid
                      twilioAuthToken: twilioAuthToken
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                    customerId: customerId
                    customer:
                      numberE164CheckEnabled: true
                      extension: extension
                      number: number
                      sipUri: sipUri
                      name: name
                    name: name
                    schedulePlan:
                      earliestAt: '2024-01-15T09:30:00Z'
                      latestAt: '2024-01-15T09:30:00Z'
      summary: Delete Call Data
      security:
        - BearerAuth: []
    patch:
      operationId: calls_update
      tags:
        - Calls
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Call'
              examples:
                Example1:
                  value:
                    type: inboundPhoneCall
                    costs:
                      - provider: twilio
                        minutes: 1.1
                        cost: 1.1
                        type: transport
                    messages:
                      - role: role
                        message: message
                        time: 1.1
                        endTime: 1.1
                        secondsFromStart: 1.1
                        duration: 1.1
                    phoneCallProvider: twilio
                    phoneCallTransport: sip
                    status: scheduled
                    endedReason: call-start-error-neither-assistant-nor-server-set
                    destination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    startedAt: '2024-01-15T09:30:00Z'
                    endedAt: '2024-01-15T09:30:00Z'
                    cost: 1.1
                    costBreakdown:
                      transport: 1.1
                      stt: 1.1
                      llm: 1.1
                      tts: 1.1
                      vapi: 1.1
                      total: 1.1
                      llmPromptTokens: 1.1
                      llmCompletionTokens: 1.1
                      ttsCharacters: 1.1
                      analysisCostBreakdown:
                        summary: 1.1
                        summaryPromptTokens: 1.1
                        summaryCompletionTokens: 1.1
                        structuredData: 1.1
                        structuredDataPromptTokens: 1.1
                        structuredDataCompletionTokens: 1.1
                        successEvaluation: 1.1
                        successEvaluationPromptTokens: 1.1
                        successEvaluationCompletionTokens: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    analysis:
                      summary: summary
                      structuredData:
                        key: value
                      structuredDataMulti:
                        - key: value
                      successEvaluation: successEvaluation
                    monitor:
                      listenUrl: listenUrl
                      controlUrl: controlUrl
                    artifact:
                      messages:
                        - role: role
                          message: message
                          time: 1.1
                          endTime: 1.1
                          secondsFromStart: 1.1
                      messagesOpenAIFormatted:
                        - role: assistant
                      recordingUrl: recordingUrl
                      stereoRecordingUrl: stereoRecordingUrl
                      videoRecordingUrl: videoRecordingUrl
                      videoRecordingStartDelaySeconds: 1.1
                      transcript: transcript
                      pcapUrl: pcapUrl
                    transport:
                      provider: twilio
                      assistantVideoEnabled: true
                    phoneCallProviderId: phoneCallProviderId
                    assistantId: assistantId
                    assistant:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    assistantOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    squadId: squadId
                    squad:
                      name: name
                      members:
                        - {}
                      membersOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                    phoneNumberId: phoneNumberId
                    phoneNumber:
                      fallbackDestination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      twilioPhoneNumber: twilioPhoneNumber
                      twilioAccountSid: twilioAccountSid
                      twilioAuthToken: twilioAuthToken
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                    customerId: customerId
                    customer:
                      numberE164CheckEnabled: true
                      extension: extension
                      number: number
                      sipUri: sipUri
                      name: name
                    name: name
                    schedulePlan:
                      earliestAt: '2024-01-15T09:30:00Z'
                      latestAt: '2024-01-15T09:30:00Z'
      summary: Update Call
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  description: >-
                    This is the name of the call. This is just for your own
                    reference.
            examples:
              Example1:
                value: {}
  /assistant:
    get:
      operationId: assistants_list
      tags:
        - Assistants
      parameters:
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    - transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                      id: id
                      orgId: orgId
                      createdAt: '2024-01-15T09:30:00Z'
                      updatedAt: '2024-01-15T09:30:00Z'
      summary: List Assistants
      security:
        - BearerAuth: []
    post:
      operationId: assistants_create
      tags:
        - Assistants
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                        - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                          - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                          - 。
                          - ，
                          - .
                          - '!'
                          - '?'
                          - ;
                          - ،
                          - ۔
                          - ।
                          - ॥
                          - '|'
                          - '||'
                          - ','
                          - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                          - voiceId: andrew
                            provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                    serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: 'off'
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                        recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                        - tags
                      metadata:
                        key: value
                    credentials:
                      - apiKey: apiKey
                        name: name
                        provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                      - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                          - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                        - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - 'yes'
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                      interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - 'no'
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                      - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                      - 'on': call.ending
                        filters:
                          - type: oneOf
                            key: key
                            oneOf:
                              - oneOf
                        do:
                          - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Create Assistant
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssistantDto'
            examples:
              Example1:
                value: {}
  /assistant/{id}:
    get:
      operationId: assistants_get
      tags:
        - Assistants
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                        - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                          - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                          - 。
                          - ，
                          - .
                          - '!'
                          - '?'
                          - ;
                          - ،
                          - ۔
                          - ।
                          - ॥
                          - '|'
                          - '||'
                          - ','
                          - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                          - voiceId: andrew
                            provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                    serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: 'off'
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                        recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                        - tags
                      metadata:
                        key: value
                    credentials:
                      - apiKey: apiKey
                        name: name
                        provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                      - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                          - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                        - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - 'yes'
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                      interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - 'no'
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                      - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                      - 'on': call.ending
                        filters:
                          - type: oneOf
                            key: key
                            oneOf:
                              - oneOf
                        do:
                          - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Get Assistant
      security:
        - BearerAuth: []
    delete:
      operationId: assistants_delete
      tags:
        - Assistants
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                        - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                          - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                          - 。
                          - ，
                          - .
                          - '!'
                          - '?'
                          - ;
                          - ،
                          - ۔
                          - ।
                          - ॥
                          - '|'
                          - '||'
                          - ','
                          - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                          - voiceId: andrew
                            provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                    serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: 'off'
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                        recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                        - tags
                      metadata:
                        key: value
                    credentials:
                      - apiKey: apiKey
                        name: name
                        provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                      - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                          - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                        - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - 'yes'
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                      interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - 'no'
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                      - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                      - 'on': call.ending
                        filters:
                          - type: oneOf
                            key: key
                            oneOf:
                              - oneOf
                        do:
                          - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Delete Assistant
      security:
        - BearerAuth: []
    patch:
      operationId: assistants_update
      tags:
        - Assistants
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assistant'
              examples:
                Example1:
                  value:
                    transcriber:
                      language: en
                      realtimeUrl: realtimeUrl
                      wordBoost:
                        - wordBoost
                      endUtteranceSilenceThreshold: 1.1
                      disablePartialTranscripts: true
                      fallbackPlan:
                        transcribers:
                          - provider: assembly-ai
                      provider: assembly-ai
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: model
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anyscale
                    voice:
                      voiceId: andrew
                      chunkPlan:
                        enabled: true
                        minCharacters: 30
                        punctuationBoundaries:
                          - 。
                          - ，
                          - .
                          - '!'
                          - '?'
                          - ;
                          - ،
                          - ۔
                          - ।
                          - ॥
                          - '|'
                          - '||'
                          - ','
                          - ':'
                        formatPlan:
                          enabled: true
                          numberToDigitsCutoff: 2025
                      speed: 1.1
                      fallbackPlan:
                        voices:
                          - voiceId: andrew
                            provider: azure
                      provider: azure
                    firstMessage: Hello! How can I help you today?
                    firstMessageInterruptionsEnabled: true
                    firstMessageMode: assistant-speaks-first
                    voicemailDetection:
                      voicemailExpectedDurationSeconds: 1.1
                      provider: google
                    clientMessages:
                      - conversation-update
                      - function-call
                      - hang
                      - model-output
                      - speech-update
                      - status-update
                      - transfer-update
                      - transcript
                      - tool-calls
                      - user-interrupted
                      - voice-input
                      - workflow.node.started
                    serverMessages:
                      - conversation-update
                      - end-of-call-report
                      - function-call
                      - hang
                      - speech-update
                      - status-update
                      - tool-calls
                      - transfer-destination-request
                      - user-interrupted
                    silenceTimeoutSeconds: 30
                    maxDurationSeconds: 600
                    backgroundSound: 'off'
                    backgroundDenoisingEnabled: false
                    modelOutputInMessagesEnabled: false
                    transportConfigurations:
                      - provider: twilio
                        timeout: 60
                        record: false
                        recordingChannels: mono
                    observabilityPlan:
                      provider: langfuse
                      tags:
                        - tags
                      metadata:
                        key: value
                    credentials:
                      - apiKey: apiKey
                        name: name
                        provider: 11labs
                    name: name
                    voicemailMessage: voicemailMessage
                    endCallMessage: endCallMessage
                    endCallPhrases:
                      - endCallPhrases
                    compliancePlan:
                      hipaaEnabled: true
                      pciEnabled: true
                    metadata:
                      key: value
                    analysisPlan:
                      summaryPlan:
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                      structuredDataPlan:
                        messages:
                          - key: value
                        enabled: true
                        schema:
                          type: string
                        timeoutSeconds: 1.1
                      structuredDataMultiPlan:
                        - key: key
                          plan: {}
                      successEvaluationPlan:
                        rubric: NumericScale
                        messages:
                          - key: value
                        enabled: true
                        timeoutSeconds: 1.1
                    artifactPlan:
                      recordingEnabled: true
                      recordingFormat: wav;l16
                      videoRecordingEnabled: false
                      pcapEnabled: true
                      pcapS3PathPrefix: /pcaps
                      transcriptPlan:
                        enabled: true
                        assistantName: assistantName
                        userName: userName
                      recordingPath: recordingPath
                    messagePlan:
                      idleMessages:
                        - idleMessages
                      idleMessageMaxSpokenCount: 1.1
                      idleTimeoutSeconds: 1.1
                      silenceTimeoutMessage: silenceTimeoutMessage
                    startSpeakingPlan:
                      waitSeconds: 0.4
                      smartEndpointingEnabled:
                        key: value
                      smartEndpointingPlan:
                        provider: vapi
                      customEndpointingRules:
                        - regex: regex
                          timeoutSeconds: 1.1
                          type: assistant
                      transcriptionEndpointingPlan:
                        onPunctuationSeconds: 0.1
                        onNoPunctuationSeconds: 1.5
                        onNumberSeconds: 0.5
                    stopSpeakingPlan:
                      numWords: 0
                      voiceSeconds: 0.2
                      backoffSeconds: 1
                      acknowledgementPhrases:
                        - i understand
                        - i see
                        - i got it
                        - i hear you
                        - im listening
                        - im with you
                        - right
                        - okay
                        - ok
                        - sure
                        - alright
                        - got it
                        - understood
                        - yeah
                        - 'yes'
                        - uh-huh
                        - mm-hmm
                        - gotcha
                        - mhmm
                        - ah
                        - yeah okay
                        - yeah sure
                      interruptionPhrases:
                        - stop
                        - shut
                        - up
                        - enough
                        - quiet
                        - silence
                        - but
                        - dont
                        - not
                        - 'no'
                        - hold
                        - wait
                        - cut
                        - pause
                        - nope
                        - nah
                        - nevermind
                        - never
                        - bad
                        - actually
                    monitorPlan:
                      listenEnabled: false
                      controlEnabled: false
                    credentialIds:
                      - credentialIds
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    hooks:
                      - 'on': call.ending
                        filters:
                          - type: oneOf
                            key: key
                            oneOf:
                              - oneOf
                        do:
                          - {}
                    keypadInputPlan:
                      enabled: true
                      timeoutSeconds: 1.1
                      delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Update Assistant
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transcriber:
                  $ref: '#/components/schemas/UpdateAssistantDtoTranscriber'
                  nullable: true
                  description: These are the options for the assistant's transcriber.
                model:
                  $ref: '#/components/schemas/UpdateAssistantDtoModel'
                  nullable: true
                  description: These are the options for the assistant's LLM.
                voice:
                  $ref: '#/components/schemas/UpdateAssistantDtoVoice'
                  nullable: true
                  description: These are the options for the assistant's voice.
                firstMessage:
                  type: string
                  nullable: true
                  description: >-
                    This is the first message that the assistant will say. This
                    can also be a URL to a containerized audio file (mp3, wav,
                    etc.).


                    If unspecified, assistant will wait for user to speak and
                    use the model to respond once they speak.
                firstMessageInterruptionsEnabled:
                  type: boolean
                  nullable: true
                firstMessageMode:
                  $ref: '#/components/schemas/UpdateAssistantDtoFirstMessageMode'
                  nullable: true
                  description: >-
                    This is the mode for the first message. Default is
                    'assistant-speaks-first'.


                    Use:

                    - 'assistant-speaks-first' to have the assistant speak
                    first.

                    - 'assistant-waits-for-user' to have the assistant wait for
                    the user to speak first.

                    - 'assistant-speaks-first-with-model-generated-message' to
                    have the assistant speak first with a message generated by
                    the model based on the conversation state.
                    (`assistant.model.messages` at call start, `call.messages`
                    at squad transfer points).


                    @default 'assistant-speaks-first'
                voicemailDetection:
                  $ref: '#/components/schemas/UpdateAssistantDtoVoicemailDetection'
                  nullable: true
                  description: >-
                    These are the settings to configure or disable voicemail
                    detection. Alternatively, voicemail detection can be
                    configured using the model.tools=[VoicemailTool].

                    This uses Twilio's built-in detection while the
                    VoicemailTool relies on the model to detect if a voicemail
                    was reached.

                    You can use neither of them, one of them, or both of them.
                    By default, Twilio built-in detection is enabled while
                    VoicemailTool is not.
                clientMessages:
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateAssistantDtoClientMessagesItem'
                  nullable: true
                  description: >-
                    These are the messages that will be sent to your Client
                    SDKs. Default is
                    conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started.
                    You can check the shape of the messages in ClientMessage
                    schema.
                serverMessages:
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateAssistantDtoServerMessagesItem'
                  nullable: true
                  description: >-
                    These are the messages that will be sent to your Server URL.
                    Default is
                    conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted.
                    You can check the shape of the messages in ServerMessage
                    schema.
                silenceTimeoutSeconds:
                  type: number
                  format: double
                  nullable: true
                  description: >-
                    How many seconds of silence to wait before ending the call.
                    Defaults to 30.


                    @default 30
                maxDurationSeconds:
                  type: number
                  format: double
                  nullable: true
                  description: >-
                    This is the maximum number of seconds that the call will
                    last. When the call reaches this duration, it will be ended.


                    @default 600 (10 minutes)
                backgroundSound:
                  $ref: '#/components/schemas/UpdateAssistantDtoBackgroundSound'
                  nullable: true
                  description: >-
                    This is the background sound in the call. Default for phone
                    calls is 'office' and default for web calls is 'off'.

                    You can also provide a custom sound by providing a URL to an
                    audio file.
                backgroundDenoisingEnabled:
                  type: boolean
                  nullable: true
                  description: >-
                    This enables filtering of noise and background speech while
                    the user is talking.


                    Default `false` while in beta.


                    @default false
                modelOutputInMessagesEnabled:
                  type: boolean
                  nullable: true
                  description: >-
                    This determines whether the model's output is used in
                    conversation history rather than the transcription of
                    assistant's speech.


                    Default `false` while in beta.


                    @default false
                transportConfigurations:
                  type: array
                  items:
                    $ref: '#/components/schemas/TransportConfigurationTwilio'
                  nullable: true
                  description: >-
                    These are the configurations to be passed to the transport
                    providers of assistant's calls, like Twilio. You can store
                    multiple configurations for different transport providers.
                    For a call, only the configuration matching the call
                    transport provider is used.
                observabilityPlan:
                  $ref: '#/components/schemas/LangfuseObservabilityPlan'
                  nullable: true
                  description: >-
                    This is the plan for observability configuration of
                    assistant's calls.

                    Currently supports Langfuse for tracing and monitoring.
                credentials:
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateAssistantDtoCredentialsItem'
                  nullable: true
                  description: >-
                    These are dynamic credentials that will be used for the
                    assistant calls. By default, all the credentials are
                    available for use in the call but you can supplement an
                    additional credentials using this. Dynamic credentials
                    override existing credentials.
                name:
                  type: string
                  nullable: true
                  description: >-
                    This is the name of the assistant.


                    This is required when you want to transfer between
                    assistants in a call.
                voicemailMessage:
                  type: string
                  nullable: true
                  description: >-
                    This is the message that the assistant will say if the call
                    is forwarded to voicemail.


                    If unspecified, it will hang up.
                endCallMessage:
                  type: string
                  nullable: true
                  description: >-
                    This is the message that the assistant will say if it ends
                    the call.


                    If unspecified, it will hang up without saying anything.
                endCallPhrases:
                  type: array
                  items:
                    type: string
                  nullable: true
                  description: >-
                    This list contains phrases that, if spoken by the assistant,
                    will trigger the call to be hung up. Case insensitive.
                compliancePlan:
                  $ref: '#/components/schemas/CompliancePlan'
                  nullable: true
                metadata:
                  type: object
                  additionalProperties: true
                  nullable: true
                  description: This is for metadata you want to store on the assistant.
                analysisPlan:
                  $ref: '#/components/schemas/AnalysisPlan'
                  nullable: true
                  description: >-
                    This is the plan for analysis of assistant's calls. Stored
                    in `call.analysis`.
                artifactPlan:
                  $ref: '#/components/schemas/ArtifactPlan'
                  nullable: true
                  description: >-
                    This is the plan for artifacts generated during assistant's
                    calls. Stored in `call.artifact`.


                    Note: `recordingEnabled` is currently at the root level. It
                    will be moved to `artifactPlan` in the future, but will
                    remain backwards compatible.
                messagePlan:
                  $ref: '#/components/schemas/MessagePlan'
                  nullable: true
                  description: >-
                    This is the plan for static predefined messages that can be
                    spoken by the assistant during the call, like
                    `idleMessages`.


                    Note: `firstMessage`, `voicemailMessage`, and
                    `endCallMessage` are currently at the root level. They will
                    be moved to `messagePlan` in the future, but will remain
                    backwards compatible.
                startSpeakingPlan:
                  $ref: '#/components/schemas/StartSpeakingPlan'
                  nullable: true
                  description: >-
                    This is the plan for when the assistant should start
                    talking.


                    You should configure this if you're running into these
                    issues:

                    - The assistant is too slow to start talking after the
                    customer is done speaking.

                    - The assistant is too fast to start talking after the
                    customer is done speaking.

                    - The assistant is so fast that it's actually interrupting
                    the customer.
                stopSpeakingPlan:
                  $ref: '#/components/schemas/StopSpeakingPlan'
                  nullable: true
                  description: >-
                    This is the plan for when assistant should stop talking on
                    customer interruption.


                    You should configure this if you're running into these
                    issues:

                    - The assistant is too slow to recognize customer's
                    interruption.

                    - The assistant is too fast to recognize customer's
                    interruption.

                    - The assistant is getting interrupted by phrases that are
                    just acknowledgments.

                    - The assistant is getting interrupted by background noises.

                    - The assistant is not properly stopping -- it starts
                    talking right after getting interrupted.
                monitorPlan:
                  $ref: '#/components/schemas/MonitorPlan'
                  nullable: true
                  description: >-
                    This is the plan for real-time monitoring of the assistant's
                    calls.


                    Usage:

                    - To enable live listening of the assistant's calls, set
                    `monitorPlan.listenEnabled` to `true`.

                    - To enable live control of the assistant's calls, set
                    `monitorPlan.controlEnabled` to `true`.


                    Note, `serverMessages`, `clientMessages`, `serverUrl` and
                    `serverUrlSecret` are currently at the root level but will
                    be moved to `monitorPlan` in the future. Will remain
                    backwards compatible
                credentialIds:
                  type: array
                  items:
                    type: string
                  nullable: true
                  description: >-
                    These are the credentials that will be used for the
                    assistant calls. By default, all the credentials are
                    available for use in the call but you can provide a subset
                    using this.
                server:
                  $ref: '#/components/schemas/Server'
                  nullable: true
                  description: >-
                    This is where Vapi will send webhooks. You can find all
                    webhooks available along with their shape in ServerMessage
                    schema.


                    The order of precedence is:


                    1. assistant.server.url

                    2. phoneNumber.serverUrl

                    3. org.serverUrl
                hooks:
                  type: array
                  items:
                    $ref: '#/components/schemas/AssistantHooks'
                  nullable: true
                  description: >-
                    This is a set of actions that will be performed on certain
                    events.
                keypadInputPlan:
                  $ref: '#/components/schemas/KeypadInputPlan'
                  nullable: true
            examples:
              Example1:
                value: {}
  /phone-number:
    get:
      operationId: phoneNumbers_list
      tags:
        - PhoneNumbers
      parameters:
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PhoneNumbersListResponseItem'
              examples:
                Example1:
                  value:
                    - fallbackDestination:
                        message: message
                        numberE164CheckEnabled: true
                        number: number
                        extension: extension
                        callerId: callerId
                        transferPlan:
                          mode: blind-transfer
                        description: description
                        type: number
                      numberE164CheckEnabled: true
                      id: id
                      orgId: orgId
                      createdAt: '2024-01-15T09:30:00Z'
                      updatedAt: '2024-01-15T09:30:00Z'
                      status: active
                      name: name
                      assistantId: assistantId
                      squadId: squadId
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      number: number
                      credentialId: credentialId
                      provider: byo-phone-number
      summary: List Phone Numbers
      security:
        - BearerAuth: []
    post:
      operationId: phoneNumbers_create
      tags:
        - PhoneNumbers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersCreateResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      summary: Create Phone Number
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumbersCreateRequest'
            examples:
              Example1:
                value:
                  credentialId: credentialId
                  provider: byo-phone-number
  /phone-number/{id}:
    get:
      operationId: phoneNumbers_get
      tags:
        - PhoneNumbers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersGetResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      summary: Get Phone Number
      security:
        - BearerAuth: []
    delete:
      operationId: phoneNumbers_delete
      tags:
        - PhoneNumbers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersDeleteResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      summary: Delete Phone Number
      security:
        - BearerAuth: []
    patch:
      operationId: phoneNumbers_update
      tags:
        - PhoneNumbers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneNumbersUpdateResponse'
              examples:
                Example1:
                  value:
                    fallbackDestination:
                      message: message
                      numberE164CheckEnabled: true
                      number: number
                      extension: extension
                      callerId: callerId
                      transferPlan:
                        mode: blind-transfer
                        message: message
                        sipVerb:
                          key: value
                        twiml: twiml
                      description: description
                      type: number
                    numberE164CheckEnabled: true
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    status: active
                    name: name
                    assistantId: assistantId
                    squadId: squadId
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    number: number
                    credentialId: credentialId
                    provider: byo-phone-number
      summary: Update Phone Number
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneNumbersUpdateRequest'
            examples:
              Example1:
                value:
                  provider: byo-phone-number
  /tool:
    get:
      operationId: tools_list
      tags:
        - Tools
      parameters:
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolsListResponseItem'
              examples:
                Example1:
                  value:
                    - async: false
                      messages:
                        - blocking: false
                          type: request-start
                      id: id
                      orgId: orgId
                      createdAt: '2024-01-15T09:30:00Z'
                      updatedAt: '2024-01-15T09:30:00Z'
                      function:
                        strict: true
                        name: name
                        description: description
                        parameters:
                          type: object
                          properties:
                            key:
                              type: string
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      type: dtmf
      summary: List Tools
      security:
        - BearerAuth: []
    post:
      operationId: tools_create
      tags:
        - Tools
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsCreateResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                      - contents:
                          - type: text
                            text: text
                            language: aa
                        blocking: false
                        content: content
                        conditions:
                          - operator: eq
                            param: param
                            value:
                              key: value
                        type: request-start
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                          - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      summary: Create Tool
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolsCreateRequest'
            examples:
              Example1:
                value:
                  type: dtmf
  /tool/{id}:
    get:
      operationId: tools_get
      tags:
        - Tools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsGetResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                      - contents:
                          - type: text
                            text: text
                            language: aa
                        blocking: false
                        content: content
                        conditions:
                          - operator: eq
                            param: param
                            value:
                              key: value
                        type: request-start
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                          - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      summary: Get Tool
      security:
        - BearerAuth: []
    delete:
      operationId: tools_delete
      tags:
        - Tools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsDeleteResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                      - contents:
                          - type: text
                            text: text
                            language: aa
                        blocking: false
                        content: content
                        conditions:
                          - operator: eq
                            param: param
                            value:
                              key: value
                        type: request-start
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                          - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      summary: Delete Tool
      security:
        - BearerAuth: []
    patch:
      operationId: tools_update
      tags:
        - Tools
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolsUpdateResponse'
              examples:
                Example1:
                  value:
                    async: false
                    messages:
                      - contents:
                          - type: text
                            text: text
                            language: aa
                        blocking: false
                        content: content
                        conditions:
                          - operator: eq
                            param: param
                            value:
                              key: value
                        type: request-start
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    function:
                      strict: true
                      name: name
                      description: description
                      parameters:
                        type: object
                        properties:
                          key:
                            type: string
                        required:
                          - required
                    server:
                      timeoutSeconds: 20
                      url: url
                      secret: secret
                      headers:
                        key: value
                      backoffPlan:
                        maxRetries: 0
                        type:
                          key: value
                        baseDelaySeconds: 1
                    type: dtmf
      summary: Update Tool
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolsUpdateRequest'
            examples:
              Example1:
                value:
                  type: dtmf
  /file:
    get:
      operationId: files_list
      tags:
        - Files
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    - object: file
                      status: processing
                      name: name
                      originalName: originalName
                      bytes: 1.1
                      purpose: purpose
                      mimetype: mimetype
                      key: key
                      path: path
                      bucket: bucket
                      url: url
                      parsedTextUrl: parsedTextUrl
                      parsedTextBytes: 1.1
                      metadata:
                        key: value
                      id: id
                      orgId: orgId
                      createdAt: '2024-01-15T09:30:00Z'
                      updatedAt: '2024-01-15T09:30:00Z'
      summary: List Files
      security:
        - BearerAuth: []
    post:
      operationId: files_create
      tags:
        - Files
      parameters: []
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
        '400':
          description: ''
          content:
            application/json:
              schema: {}
      summary: Upload File
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
  /file/{id}:
    get:
      operationId: files_get
      tags:
        - Files
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Get File
      security:
        - BearerAuth: []
    delete:
      operationId: files_delete
      tags:
        - Files
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Delete File
      security:
        - BearerAuth: []
    patch:
      operationId: files_update
      tags:
        - Files
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                Example1:
                  value:
                    object: file
                    status: processing
                    name: name
                    originalName: originalName
                    bytes: 1.1
                    purpose: purpose
                    mimetype: mimetype
                    key: key
                    path: path
                    bucket: bucket
                    url: url
                    parsedTextUrl: parsedTextUrl
                    parsedTextBytes: 1.1
                    metadata:
                      key: value
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Update File
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  description: >-
                    This is the name of the file. This is just for your own
                    reference.
            examples:
              Example1:
                value: {}
  /knowledge-base:
    get:
      operationId: knowledgeBases_list
      tags:
        - KnowledgeBases
      parameters:
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KnowledgeBasesListResponseItem'
              examples:
                Example1:
                  value:
                    - name: name
                      searchPlan:
                        topK: 1.1
                        removeStopWords: true
                        scoreThreshold: 1.1
                        searchType: fulltext
                      createPlan:
                        type: import
                        providerId: providerId
                      id: id
                      orgId: orgId
                      provider: trieve
      summary: List Knowledge Bases
      security:
        - BearerAuth: []
    post:
      operationId: knowledgeBases_create
      tags:
        - KnowledgeBases
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesCreateResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      summary: Create Knowledge Base
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBasesCreateRequest'
            examples:
              Example1:
                value:
                  provider: trieve
  /knowledge-base/{id}:
    get:
      operationId: knowledgeBases_get
      tags:
        - KnowledgeBases
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesGetResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      summary: Get Knowledge Base
      security:
        - BearerAuth: []
    delete:
      operationId: knowledgeBases_delete
      tags:
        - KnowledgeBases
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesDeleteResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      summary: Delete Knowledge Base
      security:
        - BearerAuth: []
    patch:
      operationId: knowledgeBases_update
      tags:
        - KnowledgeBases
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBasesUpdateResponse'
              examples:
                Example1:
                  value:
                    name: name
                    searchPlan:
                      topK: 1.1
                      removeStopWords: true
                      scoreThreshold: 1.1
                      searchType: fulltext
                    createPlan:
                      type: import
                      providerId: providerId
                    id: id
                    orgId: orgId
                    provider: trieve
      summary: Update Knowledge Base
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBasesUpdateRequest'
            examples:
              Example1:
                value:
                  provider: trieve
  /workflow:
    get:
      operationId: workflow_WorkflowController_findAll
      tags:
        - Workflow
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    - nodes:
                        - name: name
                          type: say
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: claude-3-opus-20240229
                        thinking:
                          type: enabled
                          budgetTokens: 1.1
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anthropic
                      id: id
                      orgId: orgId
                      createdAt: '2024-01-15T09:30:00Z'
                      updatedAt: '2024-01-15T09:30:00Z'
                      name: name
                      edges:
                        - from: from
                          to: to
      summary: Get Workflows
      security:
        - BearerAuth: []
    post:
      operationId: workflow_WorkflowController_create
      tags:
        - Workflow
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                      - exact: exact
                        prompt: prompt
                        name: name
                        metadata:
                          key: value
                        type: say
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    edges:
                      - condition:
                          matches:
                            - matches
                          type: ai
                        from: from
                        to: to
                        metadata:
                          key: value
      summary: Create Workflow
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowDto'
            examples:
              Example1:
                value:
                  nodes:
                    - name: name
                      type: say
                  name: name
                  edges:
                    - from: from
                      to: to
  /workflow/{id}:
    get:
      operationId: workflow_WorkflowController_findOne
      tags:
        - Workflow
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                      - exact: exact
                        prompt: prompt
                        name: name
                        metadata:
                          key: value
                        type: say
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    edges:
                      - condition:
                          matches:
                            - matches
                          type: ai
                        from: from
                        to: to
                        metadata:
                          key: value
      summary: Get Workflow
      security:
        - BearerAuth: []
    delete:
      operationId: workflow_WorkflowController_delete
      tags:
        - Workflow
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                      - exact: exact
                        prompt: prompt
                        name: name
                        metadata:
                          key: value
                        type: say
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    edges:
                      - condition:
                          matches:
                            - matches
                          type: ai
                        from: from
                        to: to
                        metadata:
                          key: value
      summary: Delete Workflow
      security:
        - BearerAuth: []
    patch:
      operationId: workflow_WorkflowController_update
      tags:
        - Workflow
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
              examples:
                Example1:
                  value:
                    nodes:
                      - exact: exact
                        prompt: prompt
                        name: name
                        metadata:
                          key: value
                        type: say
                    model:
                      messages:
                        - role: assistant
                      tools:
                        - async: false
                          type: dtmf
                      toolIds:
                        - toolIds
                      knowledgeBase:
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                      knowledgeBaseId: knowledgeBaseId
                      model: claude-3-opus-20240229
                      thinking:
                        type: enabled
                        budgetTokens: 1.1
                      temperature: 1.1
                      maxTokens: 1.1
                      emotionRecognitionEnabled: true
                      numFastTurns: 1.1
                      provider: anthropic
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    edges:
                      - condition:
                          matches:
                            - matches
                          type: ai
                        from: from
                        to: to
                        metadata:
                          key: value
      summary: Update Workflow
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nodes:
                  type: array
                  items:
                    $ref: '#/components/schemas/UpdateWorkflowDtoNodesItem'
                  nullable: true
                model:
                  $ref: '#/components/schemas/UpdateWorkflowDtoModel'
                  nullable: true
                  description: These are the options for the workflow's LLM.
                name:
                  type: string
                  nullable: true
                edges:
                  type: array
                  items:
                    $ref: '#/components/schemas/Edge'
                  nullable: true
            examples:
              Example1:
                value: {}
  /squad:
    get:
      operationId: squads_list
      tags:
        - Squads
      parameters:
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    - name: name
                      members:
                        - {}
                      membersOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                      id: id
                      orgId: orgId
                      createdAt: '2024-01-15T09:30:00Z'
                      updatedAt: '2024-01-15T09:30:00Z'
      summary: List Squads
      security:
        - BearerAuth: []
    post:
      operationId: squads_create
      tags:
        - Squads
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                      - assistantId: assistantId
                        assistant:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantOverrides:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantDestinations:
                          - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Create Squad
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSquadDto'
            examples:
              Example1:
                value:
                  members:
                    - {}
  /squad/{id}:
    get:
      operationId: squads_get
      tags:
        - Squads
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                      - assistantId: assistantId
                        assistant:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantOverrides:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantDestinations:
                          - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Get Squad
      security:
        - BearerAuth: []
    delete:
      operationId: squads_delete
      tags:
        - Squads
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                      - assistantId: assistantId
                        assistant:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantOverrides:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantDestinations:
                          - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Delete Squad
      security:
        - BearerAuth: []
    patch:
      operationId: squads_update
      tags:
        - Squads
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Squad'
              examples:
                Example1:
                  value:
                    name: name
                    members:
                      - assistantId: assistantId
                        assistant:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantOverrides:
                          voice:
                            voiceId: andrew
                            provider: azure
                          firstMessage: Hello! How can I help you today?
                          silenceTimeoutSeconds: 30
                          maxDurationSeconds: 600
                          backgroundSound: 'off'
                          backgroundDenoisingEnabled: false
                          modelOutputInMessagesEnabled: false
                        assistantDestinations:
                          - assistantName: assistantName
                    membersOverrides:
                      transcriber:
                        language: en
                        realtimeUrl: realtimeUrl
                        wordBoost:
                          - wordBoost
                        endUtteranceSilenceThreshold: 1.1
                        disablePartialTranscripts: true
                        fallbackPlan:
                          transcribers:
                            - provider: assembly-ai
                        provider: assembly-ai
                      model:
                        messages:
                          - role: assistant
                        tools:
                          - async: false
                            type: dtmf
                        toolIds:
                          - toolIds
                        knowledgeBase:
                          server:
                            timeoutSeconds: 20
                            url: url
                            backoffPlan:
                              maxRetries: 0
                              type:
                                key: value
                              baseDelaySeconds: 1
                        knowledgeBaseId: knowledgeBaseId
                        model: model
                        temperature: 1.1
                        maxTokens: 1.1
                        emotionRecognitionEnabled: true
                        numFastTurns: 1.1
                        provider: anyscale
                      voice:
                        voiceId: andrew
                        chunkPlan:
                          enabled: true
                          minCharacters: 30
                        speed: 1.1
                        fallbackPlan:
                          voices:
                            - voiceId: andrew
                              provider: azure
                        provider: azure
                      firstMessage: Hello! How can I help you today?
                      firstMessageInterruptionsEnabled: true
                      firstMessageMode: assistant-speaks-first
                      voicemailDetection:
                        voicemailExpectedDurationSeconds: 1.1
                        provider: google
                      clientMessages:
                        - conversation-update
                        - function-call
                        - hang
                        - model-output
                        - speech-update
                        - status-update
                        - transfer-update
                        - transcript
                        - tool-calls
                        - user-interrupted
                        - voice-input
                        - workflow.node.started
                      serverMessages:
                        - conversation-update
                        - end-of-call-report
                        - function-call
                        - hang
                        - speech-update
                        - status-update
                        - tool-calls
                        - transfer-destination-request
                        - user-interrupted
                      silenceTimeoutSeconds: 30
                      maxDurationSeconds: 600
                      backgroundSound: 'off'
                      backgroundDenoisingEnabled: false
                      modelOutputInMessagesEnabled: false
                      transportConfigurations:
                        - provider: twilio
                          timeout: 60
                          record: false
                      observabilityPlan:
                        provider: langfuse
                        tags:
                          - tags
                        metadata:
                          key: value
                      credentials:
                        - apiKey: apiKey
                          provider: 11labs
                      variableValues:
                        key: value
                      name: name
                      voicemailMessage: voicemailMessage
                      endCallMessage: endCallMessage
                      endCallPhrases:
                        - endCallPhrases
                      compliancePlan:
                        hipaaEnabled: true
                        pciEnabled: true
                      metadata:
                        key: value
                      analysisPlan:
                        structuredDataMultiPlan:
                          - key: key
                            plan: {}
                      artifactPlan:
                        recordingEnabled: true
                        recordingFormat: wav;l16
                        videoRecordingEnabled: false
                        pcapEnabled: true
                        pcapS3PathPrefix: /pcaps
                        transcriptPlan:
                          enabled: true
                        recordingPath: recordingPath
                      messagePlan:
                        idleMessages:
                          - idleMessages
                        idleMessageMaxSpokenCount: 1.1
                        idleTimeoutSeconds: 1.1
                        silenceTimeoutMessage: silenceTimeoutMessage
                      startSpeakingPlan:
                        waitSeconds: 0.4
                        smartEndpointingEnabled:
                          key: value
                        smartEndpointingPlan:
                          provider: vapi
                        customEndpointingRules:
                          - regex: regex
                            timeoutSeconds: 1.1
                            type: assistant
                        transcriptionEndpointingPlan:
                          onPunctuationSeconds: 0.1
                          onNoPunctuationSeconds: 1.5
                          onNumberSeconds: 0.5
                      stopSpeakingPlan:
                        numWords: 0
                        voiceSeconds: 0.2
                        backoffSeconds: 1
                        acknowledgementPhrases:
                          - i understand
                          - i see
                          - i got it
                          - i hear you
                          - im listening
                          - im with you
                          - right
                          - okay
                          - ok
                          - sure
                          - alright
                          - got it
                          - understood
                          - yeah
                          - 'yes'
                          - uh-huh
                          - mm-hmm
                          - gotcha
                          - mhmm
                          - ah
                          - yeah okay
                          - yeah sure
                        interruptionPhrases:
                          - stop
                          - shut
                          - up
                          - enough
                          - quiet
                          - silence
                          - but
                          - dont
                          - not
                          - 'no'
                          - hold
                          - wait
                          - cut
                          - pause
                          - nope
                          - nah
                          - nevermind
                          - never
                          - bad
                          - actually
                      monitorPlan:
                        listenEnabled: false
                        controlEnabled: false
                      credentialIds:
                        - credentialIds
                      server:
                        timeoutSeconds: 20
                        url: url
                        secret: secret
                        headers:
                          key: value
                        backoffPlan:
                          maxRetries: 0
                          type:
                            key: value
                          baseDelaySeconds: 1
                      hooks:
                        - 'on': call.ending
                          do:
                            - {}
                      keypadInputPlan:
                        enabled: true
                        timeoutSeconds: 1.1
                        delimiters: '#'
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
      summary: Update Squad
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  description: This is the name of the squad.
                members:
                  type: array
                  items:
                    $ref: '#/components/schemas/SquadMemberDto'
                  description: |-
                    This is the list of assistants that make up the squad.

                    The call will start with the first assistant in the list.
                membersOverrides:
                  $ref: '#/components/schemas/AssistantOverrides'
                  nullable: true
                  description: >-
                    This can be used to override all the assistants' settings
                    and provide values for their template variables.


                    Both `membersOverrides` and `members[n].assistantOverrides`
                    can be used together. First, `members[n].assistantOverrides`
                    is applied. Then, `membersOverrides` is applied as a global
                    override.
              required:
                - members
            examples:
              Example1:
                value:
                  members:
                    - {}
  /test-suite:
    get:
      operationId: testSuites_TestSuiteController_findAllPaginated
      tags:
        - TestSuites
      parameters:
        - name: page
          in: query
          description: This is the page number to return. Defaults to 1.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: sortOrder
          in: query
          description: This is the sort order for pagination. Defaults to 'DESC'.
          required: false
          schema:
            $ref: >-
              #/components/schemas/TestSuiteControllerFindAllPaginatedRequestSortOrder
            nullable: true
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuitesPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                      - id: id
                        orgId: orgId
                        createdAt: '2024-01-15T09:30:00Z'
                        updatedAt: '2024-01-15T09:30:00Z'
                        name: name
                        phoneNumberId: phoneNumberId
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      summary: List Test Suites
      security:
        - BearerAuth: []
    post:
      operationId: testSuites_TestSuiteController_create
      tags:
        - TestSuites
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      summary: Create Test Suite
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  description: This is the name of the test suite.
                phoneNumberId:
                  type: string
                  nullable: true
                  description: This is the phone number ID associated with this test suite.
                testerPlan:
                  $ref: '#/components/schemas/TesterPlan'
                  nullable: true
                  description: >-
                    Override the default tester plan by providing custom
                    assistant configuration for the test agent.


                    We recommend only using this if you are confident, as we
                    have already set sensible defaults on the tester plan.
                targetPlan:
                  $ref: '#/components/schemas/TargetPlan'
                  nullable: true
                  description: >-
                    These are the configuration for the assistant / phone number
                    that is being tested.
            examples:
              Example1:
                value: {}
  /test-suite/{id}:
    get:
      operationId: testSuites_TestSuiteController_findOne
      tags:
        - TestSuites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      summary: Get Test Suite
      security:
        - BearerAuth: []
    delete:
      operationId: testSuites_TestSuiteController_remove
      tags:
        - TestSuites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      summary: Delete Test Suite
      security:
        - BearerAuth: []
    patch:
      operationId: testSuites_TestSuiteController_update
      tags:
        - TestSuites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuite'
              examples:
                Example1:
                  value:
                    id: id
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    phoneNumberId: phoneNumberId
                    testerPlan:
                      assistant:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                      assistantId: assistantId
                      assistantOverrides:
                        transcriber:
                          provider: assembly-ai
                        model:
                          model: model
                          provider: anyscale
                        voice:
                          voiceId: andrew
                          provider: azure
                        firstMessage: Hello! How can I help you today?
                        firstMessageInterruptionsEnabled: true
                        firstMessageMode: assistant-speaks-first
                        voicemailDetection:
                          voicemailExpectedDurationSeconds: 1.1
                          provider: google
                        clientMessages:
                          - conversation-update
                          - function-call
                          - hang
                          - model-output
                          - speech-update
                          - status-update
                          - transfer-update
                          - transcript
                          - tool-calls
                          - user-interrupted
                          - voice-input
                          - workflow.node.started
                        serverMessages:
                          - conversation-update
                          - end-of-call-report
                          - function-call
                          - hang
                          - speech-update
                          - status-update
                          - tool-calls
                          - transfer-destination-request
                          - user-interrupted
                        silenceTimeoutSeconds: 30
                        maxDurationSeconds: 600
                        backgroundSound: 'off'
                        backgroundDenoisingEnabled: false
                        modelOutputInMessagesEnabled: false
                        transportConfigurations:
                          - provider: twilio
                            timeout: 60
                            record: false
                        observabilityPlan:
                          provider: langfuse
                          tags:
                            - tags
                        credentials:
                          - apiKey: apiKey
                            provider: 11labs
                        variableValues:
                          key: value
                        name: name
                        voicemailMessage: voicemailMessage
                        endCallMessage: endCallMessage
                        endCallPhrases:
                          - endCallPhrases
                        metadata:
                          key: value
                        artifactPlan:
                          recordingEnabled: true
                          videoRecordingEnabled: false
                          pcapEnabled: true
                          pcapS3PathPrefix: /pcaps
                        startSpeakingPlan:
                          waitSeconds: 0.4
                          smartEndpointingEnabled:
                            key: value
                        stopSpeakingPlan:
                          numWords: 0
                          voiceSeconds: 0.2
                          backoffSeconds: 1
                        monitorPlan:
                          listenEnabled: false
                          controlEnabled: false
                        credentialIds:
                          - credentialIds
                        server:
                          timeoutSeconds: 20
                          url: url
                          backoffPlan:
                            maxRetries: 0
                            type:
                              key: value
                            baseDelaySeconds: 1
                        hooks:
                          - 'on': call.ending
                            do:
                              - {}
                    targetPlan:
                      phoneNumberId: phoneNumberId
                      phoneNumber:
                        provider: test-suite
                        number: number
      summary: Update Test Suite
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  description: This is the name of the test suite.
                phoneNumberId:
                  type: string
                  nullable: true
                  description: This is the phone number ID associated with this test suite.
                testerPlan:
                  $ref: '#/components/schemas/TesterPlan'
                  nullable: true
                  description: >-
                    Override the default tester plan by providing custom
                    assistant configuration for the test agent.


                    We recommend only using this if you are confident, as we
                    have already set sensible defaults on the tester plan.
                targetPlan:
                  $ref: '#/components/schemas/TargetPlan'
                  nullable: true
                  description: >-
                    These are the configuration for the assistant / phone number
                    that is being tested.
            examples:
              Example1:
                value: {}
  /test-suite/{testSuiteId}/test:
    get:
      operationId: testSuiteTests_TestSuiteTestController_findAllPaginated
      tags:
        - TestSuiteTests
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: page
          in: query
          description: This is the page number to return. Defaults to 1.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: sortOrder
          in: query
          description: This is the sort order for pagination. Defaults to 'DESC'.
          required: false
          schema:
            $ref: >-
              #/components/schemas/TestSuiteTestControllerFindAllPaginatedRequestSortOrder
            nullable: true
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestsPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                      - scorers:
                          - type: ai
                            rubric: rubric
                        id: id
                        testSuiteId: testSuiteId
                        orgId: orgId
                        createdAt: '2024-01-15T09:30:00Z'
                        updatedAt: '2024-01-15T09:30:00Z'
                        name: name
                        script: script
                        numAttempts: 1.1
                        type: voice
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      summary: List Tests
      security:
        - BearerAuth: []
    post:
      operationId: testSuiteTests_TestSuiteTestController_create
      tags:
        - TestSuiteTests
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerCreateResponse'
              examples:
                Example1:
                  value:
                    scorers:
                      - type: ai
                        rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      summary: Create Test
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuiteTestControllerCreateRequest'
            examples:
              Example1:
                value:
                  scorers:
                    - type: ai
                      rubric: rubric
                  script: script
                  type: voice
  /test-suite/{testSuiteId}/test/{id}:
    get:
      operationId: testSuiteTests_TestSuiteTestController_findOne
      tags:
        - TestSuiteTests
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerFindOneResponse'
              examples:
                Example1:
                  value:
                    scorers:
                      - type: ai
                        rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      summary: Get Test
      security:
        - BearerAuth: []
    delete:
      operationId: testSuiteTests_TestSuiteTestController_remove
      tags:
        - TestSuiteTests
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerRemoveResponse'
              examples:
                Example1:
                  value:
                    scorers:
                      - type: ai
                        rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      summary: Delete Test
      security:
        - BearerAuth: []
    patch:
      operationId: testSuiteTests_TestSuiteTestController_update
      tags:
        - TestSuiteTests
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteTestControllerUpdateResponse'
              examples:
                Example1:
                  value:
                    scorers:
                      - type: ai
                        rubric: rubric
                    id: id
                    testSuiteId: testSuiteId
                    orgId: orgId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    name: name
                    script: script
                    numAttempts: 1.1
                    type: voice
      summary: Update Test
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestSuiteTestControllerUpdateRequest'
            examples:
              Example1:
                value:
                  type: voice
  /test-suite/{testSuiteId}/run:
    get:
      operationId: testSuiteRuns_TestSuiteRunController_findAllPaginated
      tags:
        - TestSuiteRuns
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: page
          in: query
          description: This is the page number to return. Defaults to 1.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: sortOrder
          in: query
          description: This is the sort order for pagination. Defaults to 'DESC'.
          required: false
          schema:
            $ref: >-
              #/components/schemas/TestSuiteRunControllerFindAllPaginatedRequestSortOrder
            nullable: true
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRunsPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                      - status: queued
                        id: id
                        orgId: orgId
                        testSuiteId: testSuiteId
                        createdAt: '2024-01-15T09:30:00Z'
                        updatedAt: '2024-01-15T09:30:00Z'
                        testResults:
                          - test:
                              scorers:
                                - type: ai
                                  rubric: rubric
                              id: id
                              testSuiteId: testSuiteId
                              orgId: orgId
                              createdAt: '2024-01-15T09:30:00Z'
                              updatedAt: '2024-01-15T09:30:00Z'
                              script: script
                            attempts:
                              - scorerResults:
                                  - type: ai
                                    result: pass
                                    reasoning: reasoning
                                    rubric: rubric
                        name: name
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      summary: List Test Suite Runs
      security:
        - BearerAuth: []
    post:
      operationId: testSuiteRuns_TestSuiteRunController_create
      tags:
        - TestSuiteRuns
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    testResults:
                      - test:
                          scorers:
                            - type: ai
                              rubric: rubric
                          id: id
                          testSuiteId: testSuiteId
                          orgId: orgId
                          createdAt: '2024-01-15T09:30:00Z'
                          updatedAt: '2024-01-15T09:30:00Z'
                          script: script
                        attempts:
                          - scorerResults:
                              - type: ai
                                result: pass
                                reasoning: reasoning
                                rubric: rubric
                    name: name
      summary: Create Test Suite Run
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  description: This is the name of the test suite run.
            examples:
              Example1:
                value: {}
  /test-suite/{testSuiteId}/run/{id}:
    get:
      operationId: testSuiteRuns_TestSuiteRunController_findOne
      tags:
        - TestSuiteRuns
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    testResults:
                      - test:
                          scorers:
                            - type: ai
                              rubric: rubric
                          id: id
                          testSuiteId: testSuiteId
                          orgId: orgId
                          createdAt: '2024-01-15T09:30:00Z'
                          updatedAt: '2024-01-15T09:30:00Z'
                          script: script
                        attempts:
                          - scorerResults:
                              - type: ai
                                result: pass
                                reasoning: reasoning
                                rubric: rubric
                    name: name
      summary: Get Test Suite Run
      security:
        - BearerAuth: []
    delete:
      operationId: testSuiteRuns_TestSuiteRunController_remove
      tags:
        - TestSuiteRuns
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    testResults:
                      - test:
                          scorers:
                            - type: ai
                              rubric: rubric
                          id: id
                          testSuiteId: testSuiteId
                          orgId: orgId
                          createdAt: '2024-01-15T09:30:00Z'
                          updatedAt: '2024-01-15T09:30:00Z'
                          script: script
                        attempts:
                          - scorerResults:
                              - type: ai
                                result: pass
                                reasoning: reasoning
                                rubric: rubric
                    name: name
      summary: Delete Test Suite Run
      security:
        - BearerAuth: []
    patch:
      operationId: testSuiteRuns_TestSuiteRunController_update
      tags:
        - TestSuiteRuns
      parameters:
        - name: testSuiteId
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: testSuiteId
        - name: id
          in: path
          required: true
          schema:
            type: string
          examples:
            Example1:
              value: id
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSuiteRun'
              examples:
                Example1:
                  value:
                    status: queued
                    id: id
                    orgId: orgId
                    testSuiteId: testSuiteId
                    createdAt: '2024-01-15T09:30:00Z'
                    updatedAt: '2024-01-15T09:30:00Z'
                    testResults:
                      - test:
                          scorers:
                            - type: ai
                              rubric: rubric
                          id: id
                          testSuiteId: testSuiteId
                          orgId: orgId
                          createdAt: '2024-01-15T09:30:00Z'
                          updatedAt: '2024-01-15T09:30:00Z'
                          script: script
                        attempts:
                          - scorerResults:
                              - type: ai
                                result: pass
                                reasoning: reasoning
                                rubric: rubric
                    name: name
      summary: Update Test Suite Run
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  description: This is the name of the test suite run.
            examples:
              Example1:
                value: {}
  /analytics:
    post:
      operationId: analytics_get
      tags:
        - Analytics
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyticsQueryResult'
              examples:
                Example1:
                  value:
                    - name: name
                      timeRange:
                        step: second
                        start: '2024-01-15T09:30:00Z'
                        end: '2024-01-15T09:30:00Z'
                        timezone: timezone
                      result:
                        - key: value
      summary: Create Analytics Queries
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queries:
                  type: array
                  items:
                    $ref: '#/components/schemas/AnalyticsQuery'
                  description: This is the list of metric queries you want to perform.
              required:
                - queries
            examples:
              Example1:
                value:
                  queries:
                    - table: call
                      name: name
                      operations:
                        - operation: sum
                          column: id
  /logs:
    get:
      operationId: logs_get
      tags:
        - Logs
      parameters:
        - name: type
          in: query
          description: This is the type of the log.
          required: false
          schema:
            $ref: '#/components/schemas/LogsGetRequestType'
            nullable: true
        - name: webhookType
          in: query
          description: This is the type of the webhook, given the log is from a webhook.
          required: false
          schema:
            type: string
            nullable: true
        - name: assistantId
          in: query
          description: This is the ID of the assistant.
          required: false
          schema:
            type: string
            nullable: true
        - name: phoneNumberId
          in: query
          description: This is the ID of the phone number.
          required: false
          schema:
            type: string
            nullable: true
        - name: customerId
          in: query
          description: This is the ID of the customer.
          required: false
          schema:
            type: string
            nullable: true
        - name: squadId
          in: query
          description: This is the ID of the squad.
          required: false
          schema:
            type: string
            nullable: true
        - name: callId
          in: query
          description: This is the ID of the call.
          required: false
          schema:
            type: string
            nullable: true
        - name: page
          in: query
          description: This is the page number to return. Defaults to 1.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: sortOrder
          in: query
          description: This is the sort order for pagination. Defaults to 'DESC'.
          required: false
          schema:
            $ref: '#/components/schemas/LogsGetRequestSortOrder'
            nullable: true
        - name: limit
          in: query
          description: This is the maximum number of items to return. Defaults to 100.
          required: false
          schema:
            type: number
            format: double
            nullable: true
        - name: createdAtGt
          in: query
          description: >-
            This will return items where the createdAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLt
          in: query
          description: >-
            This will return items where the createdAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtGe
          in: query
          description: >-
            This will return items where the createdAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: createdAtLe
          in: query
          description: >-
            This will return items where the createdAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGt
          in: query
          description: >-
            This will return items where the updatedAt is greater than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLt
          in: query
          description: >-
            This will return items where the updatedAt is less than the
            specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtGe
          in: query
          description: >-
            This will return items where the updatedAt is greater than or equal
            to the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
        - name: updatedAtLe
          in: query
          description: >-
            This will return items where the updatedAt is less than or equal to
            the specified value.
          required: false
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPaginatedResponse'
              examples:
                Example1:
                  value:
                    results:
                      - time: time
                        orgId: orgId
                        type: API
                        webhookType: webhookType
                        resource: org
                        requestDurationSeconds: 1.1
                        requestStartedAt: requestStartedAt
                        requestFinishedAt: requestFinishedAt
                        requestBody:
                          key: value
                        requestHttpMethod: POST
                        requestUrl: requestUrl
                        requestPath: requestPath
                        requestQuery: requestQuery
                        responseHttpCode: 1.1
                        requestIpAddress: requestIpAddress
                        requestOrigin: requestOrigin
                        responseBody:
                          key: value
                        requestHeaders:
                          key: value
                        error:
                          message: message
                        assistantId: assistantId
                        phoneNumberId: phoneNumberId
                        customerId: customerId
                        squadId: squadId
                        callId: callId
                    metadata:
                      itemsPerPage: 1.1
                      totalItems: 1.1
                      currentPage: 1.1
      summary: Get Logs
      security:
        - BearerAuth: []
    delete:
      operationId: logs_LoggingController_logsDeleteQuery
      tags:
        - Logs
      parameters:
        - name: type
          in: query
          description: This is the type of the log.
          required: false
          schema:
            $ref: '#/components/schemas/LoggingControllerLogsDeleteQueryRequestType'
            nullable: true
        - name: assistantId
          in: query
          required: false
          schema:
            type: string
            nullable: true
        - name: phoneNumberId
          in: query
          description: This is the ID of the phone number.
          required: false
          schema:
            type: string
            nullable: true
        - name: customerId
          in: query
          description: This is the ID of the customer.
          required: false
          schema:
            type: string
            nullable: true
        - name: squadId
          in: query
          description: This is the ID of the squad.
          required: false
          schema:
            type: string
            nullable: true
        - name: callId
          in: query
          description: This is the ID of the call.
          required: false
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: ''
      summary: Delete Logs
      security:
        - BearerAuth: []
components:
  schemas:
    CallsCreateResponse:
      title: CallsCreateResponse
      oneOf:
        - $ref: '#/components/schemas/Call'
        - $ref: '#/components/schemas/CallBatchResponse'
    UpdateAssistantDtoTranscriber:
      title: UpdateAssistantDtoTranscriber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/AssemblyAiTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureSpeechTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-transcriber
            - $ref: '#/components/schemas/CustomTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/GladiaTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/SpeechmaticsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - talkscriber
            - $ref: '#/components/schemas/TalkscriberTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiTranscriber'
          required:
            - provider
      description: These are the options for the assistant's transcriber.
    UpdateAssistantDtoModel:
      title: UpdateAssistantDtoModel
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/AnyscaleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/AnthropicModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CerebrasModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CustomLlmModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/DeepInfraModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/DeepSeekModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/GroqModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/InflectionAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/OpenRouterModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/PerplexityAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/TogetherAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/XaiModel'
          required:
            - provider
      description: These are the options for the assistant's LLM.
    UpdateAssistantDtoVoice:
      title: UpdateAssistantDtoVoice
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CartesiaVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-voice
            - $ref: '#/components/schemas/CustomVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/HumeVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/LmntVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/NeuphonicVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/PlayHtVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/RimeAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/SmallestAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/TavusVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiVoice'
          required:
            - provider
      description: These are the options for the assistant's voice.
    UpdateAssistantDtoFirstMessageMode:
      title: UpdateAssistantDtoFirstMessageMode
      type: string
      enum:
        - assistant-speaks-first
        - assistant-speaks-first-with-model-generated-message
        - assistant-waits-for-user
      description: >-
        This is the mode for the first message. Default is
        'assistant-speaks-first'.


        Use:

        - 'assistant-speaks-first' to have the assistant speak first.

        - 'assistant-waits-for-user' to have the assistant wait for the user to
        speak first.

        - 'assistant-speaks-first-with-model-generated-message' to have the
        assistant speak first with a message generated by the model based on the
        conversation state. (`assistant.model.messages` at call start,
        `call.messages` at squad transfer points).


        @default 'assistant-speaks-first'
    UpdateAssistantDtoVoicemailDetection:
      title: UpdateAssistantDtoVoicemailDetection
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
          required:
            - provider
      description: >-
        These are the settings to configure or disable voicemail detection.
        Alternatively, voicemail detection can be configured using the
        model.tools=[VoicemailTool].

        This uses Twilio's built-in detection while the VoicemailTool relies on
        the model to detect if a voicemail was reached.

        You can use neither of them, one of them, or both of them. By default,
        Twilio built-in detection is enabled while VoicemailTool is not.
    UpdateAssistantDtoClientMessagesItem:
      title: UpdateAssistantDtoClientMessagesItem
      type: string
      enum:
        - conversation-update
        - function-call
        - function-call-result
        - hang
        - language-changed
        - metadata
        - model-output
        - speech-update
        - status-update
        - transcript
        - tool-calls
        - tool-calls-result
        - transfer-update
        - user-interrupted
        - voice-input
        - workflow.node.started
    UpdateAssistantDtoServerMessagesItem:
      title: UpdateAssistantDtoServerMessagesItem
      type: string
      enum:
        - conversation-update
        - end-of-call-report
        - function-call
        - hang
        - language-changed
        - language-change-detected
        - model-output
        - phone-call-control
        - speech-update
        - status-update
        - transcript
        - transcript[transcriptType='final']
        - tool-calls
        - transfer-destination-request
        - transfer-update
        - user-interrupted
        - voice-input
    UpdateAssistantDtoBackgroundSoundZero:
      title: UpdateAssistantDtoBackgroundSoundZero
      type: string
      enum:
        - 'off'
        - office
    UpdateAssistantDtoBackgroundSound:
      title: UpdateAssistantDtoBackgroundSound
      oneOf:
        - $ref: '#/components/schemas/UpdateAssistantDtoBackgroundSoundZero'
        - type: string
      description: >-
        This is the background sound in the call. Default for phone calls is
        'office' and default for web calls is 'off'.

        You can also provide a custom sound by providing a URL to an audio file.
    UpdateAssistantDtoCredentialsItem:
      title: UpdateAssistantDtoCredentialsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure-openai
            - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/CreateAzureCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-sip-trunk
            - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cloudflare
            - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gcp
            - $ref: '#/components/schemas/CreateGcpCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/CreateGladiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gohighlevel
            - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/CreateGoogleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/CreateGroqCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - langfuse
            - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/CreateLmntCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - runpod
            - $ref: '#/components/schemas/CreateRunpodCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - s3
            - $ref: '#/components/schemas/CreateS3CredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - supabase
            - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/CreateTavusCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonageCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - webhook
            - $ref: '#/components/schemas/CreateWebhookCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/CreateXAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/CreateHumeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - mistral
            - $ref: '#/components/schemas/CreateMistralCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/CreateTrieveCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-client
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.sheets.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - slack.oauth2-authorization
            - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
          required:
            - provider
    PhoneNumbersListResponseItem:
      title: PhoneNumbersListResponseItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/ByoPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/VonagePhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/TelnyxPhoneNumber'
          required:
            - provider
    PhoneNumbersCreateRequest:
      title: PhoneNumbersCreateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/CreateTelnyxPhoneNumberDto'
          required:
            - provider
    PhoneNumbersCreateResponse:
      title: PhoneNumbersCreateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/ByoPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/VonagePhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/TelnyxPhoneNumber'
          required:
            - provider
    PhoneNumbersGetResponse:
      title: PhoneNumbersGetResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/ByoPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/VonagePhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/TelnyxPhoneNumber'
          required:
            - provider
    PhoneNumbersDeleteResponse:
      title: PhoneNumbersDeleteResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/ByoPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/VonagePhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/TelnyxPhoneNumber'
          required:
            - provider
    PhoneNumbersUpdateRequest:
      title: PhoneNumbersUpdateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/UpdateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/UpdateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/UpdateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/UpdateVapiPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/UpdateTelnyxPhoneNumberDto'
          required:
            - provider
    PhoneNumbersUpdateResponse:
      title: PhoneNumbersUpdateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/ByoPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/VonagePhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/TelnyxPhoneNumber'
          required:
            - provider
    ToolsListResponseItem:
      title: ToolsListResponseItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/DtmfTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/EndCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/TransferCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - output
            - $ref: '#/components/schemas/OutputTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/BashTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/ComputerTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/TextEditorTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/QueryTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/SlackSendMessageTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - mcp
            - $ref: '#/components/schemas/McpTool'
          required:
            - type
    ToolsCreateRequest:
      title: ToolsCreateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - output
            - $ref: '#/components/schemas/CreateOutputToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/CreateBashToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/CreateComputerToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/CreateTextEditorToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - mcp
            - $ref: '#/components/schemas/CreateMcpToolDto'
          required:
            - type
    ToolsCreateResponse:
      title: ToolsCreateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/DtmfTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/EndCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/TransferCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - output
            - $ref: '#/components/schemas/OutputTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/BashTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/ComputerTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/TextEditorTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/QueryTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/SlackSendMessageTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - mcp
            - $ref: '#/components/schemas/McpTool'
          required:
            - type
    ToolsGetResponse:
      title: ToolsGetResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/DtmfTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/EndCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/TransferCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - output
            - $ref: '#/components/schemas/OutputTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/BashTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/ComputerTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/TextEditorTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/QueryTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/SlackSendMessageTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - mcp
            - $ref: '#/components/schemas/McpTool'
          required:
            - type
    ToolsDeleteResponse:
      title: ToolsDeleteResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/DtmfTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/EndCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/TransferCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - output
            - $ref: '#/components/schemas/OutputTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/BashTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/ComputerTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/TextEditorTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/QueryTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/SlackSendMessageTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - mcp
            - $ref: '#/components/schemas/McpTool'
          required:
            - type
    ToolsUpdateRequest:
      title: ToolsUpdateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/UpdateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/UpdateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/UpdateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/UpdateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/UpdateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/UpdateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - output
            - $ref: '#/components/schemas/UpdateOutputToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/UpdateBashToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/UpdateComputerToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/UpdateTextEditorToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/UpdateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/UpdateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/UpdateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/UpdateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/UpdateSlackSendMessageToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - mcp
            - $ref: '#/components/schemas/UpdateMcpToolDto'
          required:
            - type
    ToolsUpdateResponse:
      title: ToolsUpdateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/DtmfTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/EndCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/TransferCallTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - output
            - $ref: '#/components/schemas/OutputTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/BashTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/ComputerTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/TextEditorTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/QueryTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/GoogleCalendarCreateEventTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: '#/components/schemas/GoogleCalendarCheckAvailabilityTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/SlackSendMessageTool'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - mcp
            - $ref: '#/components/schemas/McpTool'
          required:
            - type
    KnowledgeBasesListResponseItem:
      title: KnowledgeBasesListResponseItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/TrieveKnowledgeBase'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-knowledge-base
            - $ref: '#/components/schemas/CustomKnowledgeBase'
          required:
            - provider
    KnowledgeBasesCreateRequest:
      title: KnowledgeBasesCreateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/CreateTrieveKnowledgeBaseDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-knowledge-base
            - $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          required:
            - provider
    KnowledgeBasesCreateResponse:
      title: KnowledgeBasesCreateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/TrieveKnowledgeBase'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-knowledge-base
            - $ref: '#/components/schemas/CustomKnowledgeBase'
          required:
            - provider
    KnowledgeBasesGetResponse:
      title: KnowledgeBasesGetResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/TrieveKnowledgeBase'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-knowledge-base
            - $ref: '#/components/schemas/CustomKnowledgeBase'
          required:
            - provider
    KnowledgeBasesDeleteResponse:
      title: KnowledgeBasesDeleteResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/TrieveKnowledgeBase'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-knowledge-base
            - $ref: '#/components/schemas/CustomKnowledgeBase'
          required:
            - provider
    KnowledgeBasesUpdateRequest:
      title: KnowledgeBasesUpdateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/UpdateTrieveKnowledgeBaseDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-knowledge-base
            - $ref: '#/components/schemas/UpdateCustomKnowledgeBaseDto'
          required:
            - provider
    KnowledgeBasesUpdateResponse:
      title: KnowledgeBasesUpdateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/TrieveKnowledgeBase'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-knowledge-base
            - $ref: '#/components/schemas/CustomKnowledgeBase'
          required:
            - provider
    UpdateWorkflowDtoNodesItem:
      title: UpdateWorkflowDtoNodesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - say
            - $ref: '#/components/schemas/Say'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - gather
            - $ref: '#/components/schemas/Gather'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - apiRequest
            - $ref: '#/components/schemas/ApiRequest'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - hangup
            - $ref: '#/components/schemas/Hangup'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transfer
            - $ref: '#/components/schemas/Transfer'
          required:
            - type
    UpdateWorkflowDtoModel:
      title: UpdateWorkflowDtoModel
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/AnthropicModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/AnyscaleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CerebrasModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CustomLlmModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/DeepInfraModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/DeepSeekModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/GroqModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/InflectionAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/OpenRouterModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/PerplexityAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/TogetherAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/XaiModel'
          required:
            - provider
      description: These are the options for the workflow's LLM.
    TestSuiteControllerFindAllPaginatedRequestSortOrder:
      title: TestSuiteControllerFindAllPaginatedRequestSortOrder
      type: string
      enum:
        - ASC
        - DESC
    TestSuiteTestControllerFindAllPaginatedRequestSortOrder:
      title: TestSuiteTestControllerFindAllPaginatedRequestSortOrder
      type: string
      enum:
        - ASC
        - DESC
    TestSuiteTestControllerCreateRequest:
      title: TestSuiteTestControllerCreateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/CreateTestSuiteTestVoiceDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/CreateTestSuiteTestChatDto'
          required:
            - type
    TestSuiteTestControllerCreateResponse:
      title: TestSuiteTestControllerCreateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/TestSuiteTestVoice'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/TestSuiteTestChat'
          required:
            - type
    TestSuiteTestControllerFindOneResponse:
      title: TestSuiteTestControllerFindOneResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/TestSuiteTestVoice'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/TestSuiteTestChat'
          required:
            - type
    TestSuiteTestControllerRemoveResponse:
      title: TestSuiteTestControllerRemoveResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/TestSuiteTestVoice'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/TestSuiteTestChat'
          required:
            - type
    TestSuiteTestControllerUpdateRequest:
      title: TestSuiteTestControllerUpdateRequest
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/UpdateTestSuiteTestVoiceDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/UpdateTestSuiteTestChatDto'
          required:
            - type
    TestSuiteTestControllerUpdateResponse:
      title: TestSuiteTestControllerUpdateResponse
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/TestSuiteTestVoice'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/TestSuiteTestChat'
          required:
            - type
    TestSuiteRunControllerFindAllPaginatedRequestSortOrder:
      title: TestSuiteRunControllerFindAllPaginatedRequestSortOrder
      type: string
      enum:
        - ASC
        - DESC
    LogsGetRequestType:
      title: LogsGetRequestType
      type: string
      enum:
        - API
        - Webhook
        - Call
        - Provider
    LogsGetRequestSortOrder:
      title: LogsGetRequestSortOrder
      type: string
      enum:
        - ASC
        - DESC
    LoggingControllerLogsDeleteQueryRequestType:
      title: LoggingControllerLogsDeleteQueryRequestType
      type: string
      enum:
        - API
        - Webhook
        - Call
        - Provider
    AnalysisCostBreakdown:
      title: AnalysisCostBreakdown
      type: object
      properties:
        summary:
          type: number
          format: double
          nullable: true
          description: This is the cost to summarize the call.
        summaryPromptTokens:
          type: number
          format: double
          nullable: true
          description: This is the number of prompt tokens used to summarize the call.
        summaryCompletionTokens:
          type: number
          format: double
          nullable: true
          description: This is the number of completion tokens used to summarize the call.
        structuredData:
          type: number
          format: double
          nullable: true
          description: This is the cost to extract structured data from the call.
        structuredDataPromptTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the number of prompt tokens used to extract structured data
            from the call.
        structuredDataCompletionTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the number of completion tokens used to extract structured
            data from the call.
        successEvaluation:
          type: number
          format: double
          nullable: true
          description: This is the cost to evaluate if the call was successful.
        successEvaluationPromptTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the number of prompt tokens used to evaluate if the call was
            successful.
        successEvaluationCompletionTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the number of completion tokens used to evaluate if the call
            was successful.
    CostBreakdown:
      title: CostBreakdown
      type: object
      properties:
        transport:
          type: number
          format: double
          nullable: true
          description: This is the cost of the transport provider, like Twilio or Vonage.
        stt:
          type: number
          format: double
          nullable: true
          description: This is the cost of the speech-to-text service.
        llm:
          type: number
          format: double
          nullable: true
          description: This is the cost of the language model.
        tts:
          type: number
          format: double
          nullable: true
          description: This is the cost of the text-to-speech service.
        vapi:
          type: number
          format: double
          nullable: true
          description: This is the cost of Vapi.
        total:
          type: number
          format: double
          nullable: true
          description: This is the total cost of the call.
        llmPromptTokens:
          type: number
          format: double
          nullable: true
          description: This is the LLM prompt tokens used for the call.
        llmCompletionTokens:
          type: number
          format: double
          nullable: true
          description: This is the LLM completion tokens used for the call.
        ttsCharacters:
          type: number
          format: double
          nullable: true
          description: This is the TTS characters used for the call.
        analysisCostBreakdown:
          $ref: '#/components/schemas/AnalysisCostBreakdown'
          nullable: true
          description: This is the cost of the analysis.
    TranscriptPlan:
      title: TranscriptPlan
      type: object
      properties:
        enabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the transcript is stored in
            `call.artifact.transcript`. Defaults to true.


            @default true
        assistantName:
          type: string
          nullable: true
          description: >-
            This is the name of the assistant in the transcript. Defaults to
            'AI'.


            Usage:

            - If you want to change the name of the assistant in the transcript,
            set this. Example, here is what the transcript would look like with
            `assistantName` set to 'Buyer':

            ```

            User: Hello, how are you?

            Buyer: I'm fine.

            User: Do you want to buy a car?

            Buyer: No.

            ```


            @default 'AI'
        userName:
          type: string
          nullable: true
          description: >-
            This is the name of the user in the transcript. Defaults to 'User'.


            Usage:

            - If you want to change the name of the user in the transcript, set
            this. Example, here is what the transcript would look like with
            `userName` set to 'Seller':

            ```

            Seller: Hello, how are you?

            AI: I'm fine.

            Seller: Do you want to buy a car?

            AI: No.

            ```


            @default 'User'
    ArtifactPlanRecordingFormat:
      title: ArtifactPlanRecordingFormat
      type: string
      enum:
        - wav;l16
        - mp3
      description: |-
        This determines the format of the recording. Defaults to `wav;l16`.

        @default 'wav;l16'
    ArtifactPlan:
      title: ArtifactPlan
      type: object
      properties:
        recordingEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether assistant's calls are recorded. Defaults to
            true.


            Usage:

            - If you don't want to record the calls, set this to false.

            - If you want to record the calls when `assistant.hipaaEnabled`
            (deprecated) or `assistant.compliancePlan.hipaaEnabled` explicity
            set this to true and make sure to provide S3 or GCP credentials on
            the Provider Credentials page in the Dashboard.


            You can find the recording at `call.artifact.recordingUrl` and
            `call.artifact.stereoRecordingUrl` after the call is ended.


            @default true
        recordingFormat:
          $ref: '#/components/schemas/ArtifactPlanRecordingFormat'
          nullable: true
          description: |-
            This determines the format of the recording. Defaults to `wav;l16`.

            @default 'wav;l16'
        videoRecordingEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the video is recorded during the call.
            Defaults to false. Only relevant for `webCall` type.


            You can find the video recording at
            `call.artifact.videoRecordingUrl` after the call is ended.


            @default false
        pcapEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the SIP packet capture is enabled. Defaults
            to true. Only relevant for `phone` type calls where phone number's
            provider is `vapi` or `byo-phone-number`.


            You can find the packet capture at `call.artifact.pcapUrl` after the
            call is ended.


            @default true
        pcapS3PathPrefix:
          type: string
          nullable: true
          description: >-
            This is the path where the SIP packet capture will be uploaded. This
            is only used if you have provided S3 or GCP credentials on the
            Provider Credentials page in the Dashboard.


            If credential.s3PathPrefix or credential.bucketPlan.path is set,
            this will append to it.


            Usage:

            - If you want to upload the packet capture to a specific path, set
            this to the path. Example: `/my-assistant-captures`.

            - If you want to upload the packet capture to the root of the
            bucket, set this to `/`.


            @default '/'
        transcriptPlan:
          $ref: '#/components/schemas/TranscriptPlan'
          nullable: true
          description: >-
            This is the plan for `call.artifact.transcript`. To disable, set
            `transcriptPlan.enabled` to false.
        recordingPath:
          type: string
          nullable: true
          description: >-
            This is the path where the recording will be uploaded. This is only
            used if you have provided S3 or GCP credentials on the Provider
            Credentials page in the Dashboard.


            If credential.s3PathPrefix or credential.bucketPlan.path is set,
            this will append to it.


            Usage:

            - If you want to upload the recording to a specific path, set this
            to the path. Example: `/my-assistant-recordings`.

            - If you want to upload the recording to the root of the bucket, set
            this to `/`.


            @default '/'
    Analysis:
      title: Analysis
      type: object
      properties:
        summary:
          type: string
          nullable: true
          description: >-
            This is the summary of the call. Customize by setting
            `assistant.analysisPlan.summaryPrompt`.
        structuredData:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            This is the structured data extracted from the call. Customize by
            setting `assistant.analysisPlan.structuredDataPrompt` and/or
            `assistant.analysisPlan.structuredDataSchema`.
        structuredDataMulti:
          type: array
          items:
            type: object
            additionalProperties: true
          nullable: true
          description: >-
            This is the structured data catalog of the call. Customize by
            setting `assistant.analysisPlan.structuredDataMultiPlan`.
        successEvaluation:
          type: string
          nullable: true
          description: >-
            This is the evaluation of the call. Customize by setting
            `assistant.analysisPlan.successEvaluationPrompt` and/or
            `assistant.analysisPlan.successEvaluationRubric`.
    Monitor:
      title: Monitor
      type: object
      properties:
        listenUrl:
          type: string
          nullable: true
          description: >-
            This is the URL where the assistant's calls can be listened to in
            real-time. To enable, set `assistant.monitorPlan.listenEnabled` to
            `true`.
        controlUrl:
          type: string
          nullable: true
          description: >-
            This is the URL where the assistant's calls can be controlled in
            real-time. To enable, set `assistant.monitorPlan.controlEnabled` to
            `true`.
    OpenAiMessageRole:
      title: OpenAiMessageRole
      type: string
      enum:
        - assistant
        - function
        - user
        - system
        - tool
    OpenAiMessage:
      title: OpenAiMessage
      type: object
      properties:
        content:
          type: string
          nullable: true
        role:
          $ref: '#/components/schemas/OpenAiMessageRole'
      required:
        - role
    ArtifactMessagesItem:
      title: ArtifactMessagesItem
      oneOf:
        - $ref: '#/components/schemas/UserMessage'
        - $ref: '#/components/schemas/SystemMessage'
        - $ref: '#/components/schemas/BotMessage'
        - $ref: '#/components/schemas/ToolCallMessage'
        - $ref: '#/components/schemas/ToolCallResultMessage'
    Artifact:
      title: Artifact
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactMessagesItem'
          nullable: true
          description: These are the messages that were spoken during the call.
        messagesOpenAIFormatted:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: >-
            These are the messages that were spoken during the call, formatted
            for OpenAI.
        recordingUrl:
          type: string
          nullable: true
          description: >-
            This is the recording url for the call. To enable, set
            `assistant.artifactPlan.recordingEnabled`.
        stereoRecordingUrl:
          type: string
          nullable: true
          description: >-
            This is the stereo recording url for the call. To enable, set
            `assistant.artifactPlan.recordingEnabled`.
        videoRecordingUrl:
          type: string
          nullable: true
          description: >-
            This is video recording url for the call. To enable, set
            `assistant.artifactPlan.videoRecordingEnabled`.
        videoRecordingStartDelaySeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is video recording start delay in ms. To enable, set
            `assistant.artifactPlan.videoRecordingEnabled`. This can be used to
            align the playback of the recording with artifact.messages
            timestamps.
        transcript:
          type: string
          nullable: true
          description: >-
            This is the transcript of the call. This is derived from
            `artifact.messages` but provided for convenience.
        pcapUrl:
          type: string
          nullable: true
          description: >-
            This is the packet capture url for the call. This is only available
            for `phone` type calls where phone number's provider is `vapi` or
            `byo-phone-number`.
    TransportProvider:
      title: TransportProvider
      type: string
      enum:
        - twilio
        - vonage
        - vapi
        - daily
        - telnyx
      description: This is the provider used for the call.
    Transport:
      title: Transport
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/TransportProvider'
          nullable: true
          description: This is the provider used for the call.
        assistantVideoEnabled:
          type: boolean
          nullable: true
          description: |-
            This is determines whether the assistant will have video enabled.

            Only relevant for `webCall` type.
    FallbackTranscriberPlanTranscribersItem:
      title: FallbackTranscriberPlanTranscribersItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/FallbackAssemblyAiTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/FallbackAzureSpeechTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-transcriber
            - $ref: '#/components/schemas/FallbackCustomTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/FallbackDeepgramTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/FallbackElevenLabsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/FallbackGladiaTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/FallbackGoogleTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - talkscriber
            - $ref: '#/components/schemas/FallbackTalkscriberTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/FallbackSpeechmaticsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/FallbackOpenAiTranscriber'
          required:
            - provider
    FallbackTranscriberPlan:
      title: FallbackTranscriberPlan
      type: object
      properties:
        transcribers:
          type: array
          items:
            $ref: '#/components/schemas/FallbackTranscriberPlanTranscribersItem'
      required:
        - transcribers
    AssemblyAiTranscriber:
      title: AssemblyAiTranscriber
      type: object
      properties:
        language:
          type: string
          enum:
            - en
          nullable: true
          description: This is the language that will be set for the transcription.
        realtimeUrl:
          type: string
          nullable: true
          description: The WebSocket URL that the transcriber connects to.
        wordBoost:
          type: array
          items:
            type: string
          nullable: true
          description: Add up to 2500 characters of custom vocabulary.
        endUtteranceSilenceThreshold:
          type: number
          format: double
          nullable: true
          description: The duration of the end utterance silence threshold in milliseconds.
        disablePartialTranscripts:
          type: boolean
          nullable: true
          description: >-
            Disable partial transcripts.

            Set to `true` to not receive partial transcripts. Defaults to
            `false`.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    AzureSpeechTranscriberLanguage:
      title: AzureSpeechTranscriberLanguage
      type: string
      enum:
        - af-ZA
        - am-ET
        - ar-AE
        - ar-BH
        - ar-DZ
        - ar-EG
        - ar-IL
        - ar-IQ
        - ar-JO
        - ar-KW
        - ar-LB
        - ar-LY
        - ar-MA
        - ar-OM
        - ar-PS
        - ar-QA
        - ar-SA
        - ar-SY
        - ar-TN
        - ar-YE
        - az-AZ
        - bg-BG
        - bn-IN
        - bs-BA
        - ca-ES
        - cs-CZ
        - cy-GB
        - da-DK
        - de-AT
        - de-CH
        - de-DE
        - el-GR
        - en-AU
        - en-CA
        - en-GB
        - en-GH
        - en-HK
        - en-IE
        - en-IN
        - en-KE
        - en-NG
        - en-NZ
        - en-PH
        - en-SG
        - en-TZ
        - en-US
        - en-ZA
        - es-AR
        - es-BO
        - es-CL
        - es-CO
        - es-CR
        - es-CU
        - es-DO
        - es-EC
        - es-ES
        - es-GQ
        - es-GT
        - es-HN
        - es-MX
        - es-NI
        - es-PA
        - es-PE
        - es-PR
        - es-PY
        - es-SV
        - es-US
        - es-UY
        - es-VE
        - et-EE
        - eu-ES
        - fa-IR
        - fi-FI
        - fil-PH
        - fr-BE
        - fr-CA
        - fr-CH
        - fr-FR
        - ga-IE
        - gl-ES
        - gu-IN
        - he-IL
        - hi-IN
        - hr-HR
        - hu-HU
        - hy-AM
        - id-ID
        - is-IS
        - it-CH
        - it-IT
        - ja-JP
        - jv-ID
        - ka-GE
        - kk-KZ
        - km-KH
        - kn-IN
        - ko-KR
        - lo-LA
        - lt-LT
        - lv-LV
        - mk-MK
        - ml-IN
        - mn-MN
        - mr-IN
        - ms-MY
        - mt-MT
        - my-MM
        - nb-NO
        - ne-NP
        - nl-BE
        - nl-NL
        - pa-IN
        - pl-PL
        - ps-AF
        - pt-BR
        - pt-PT
        - ro-RO
        - ru-RU
        - si-LK
        - sk-SK
        - sl-SI
        - so-SO
        - sq-AL
        - sr-RS
        - sv-SE
        - sw-KE
        - sw-TZ
        - ta-IN
        - te-IN
        - th-TH
        - tr-TR
        - uk-UA
        - ur-IN
        - uz-UZ
        - vi-VN
        - wuu-CN
        - yue-CN
        - zh-CN
        - zh-CN-shandong
        - zh-CN-sichuan
        - zh-HK
        - zh-TW
        - zu-ZA
      description: >-
        This is the language that will be set for the transcription. The list of
        languages Azure supports can be found here:
        https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt
    AzureSpeechTranscriber:
      title: AzureSpeechTranscriber
      type: object
      properties:
        language:
          $ref: '#/components/schemas/AzureSpeechTranscriberLanguage'
          nullable: true
          description: >-
            This is the language that will be set for the transcription. The
            list of languages Azure supports can be found here:
            https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    BackoffPlan:
      title: BackoffPlan
      type: object
      properties:
        maxRetries:
          type: number
          format: double
          description: >-
            This is the maximum number of retries to attempt if the request
            fails. Defaults to 0 (no retries).


            @default 0
        type:
          type: object
          additionalProperties: true
          description: |-
            This is the type of backoff plan to use. Defaults to fixed.

            @default fixed
        baseDelaySeconds:
          type: number
          format: double
          description: >-
            This is the base delay in seconds. For linear backoff, this is the
            delay between each retry. For exponential backoff, this is the
            initial delay.
      required:
        - maxRetries
        - type
        - baseDelaySeconds
    Server:
      title: Server
      type: object
      properties:
        timeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timeout in seconds for the request to your server.
            Defaults to 20 seconds.


            @default 20
        url:
          type: string
          description: API endpoint to send requests to.
        secret:
          type: string
          nullable: true
          description: >-
            This is the secret you can set that Vapi will send with every
            request to your server. Will be sent as a header called
            x-vapi-secret.


            Same precedence logic as server.
        headers:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            These are the custom headers to include in the request sent to your
            server.


            Each key-value pair represents a header name and its value.
        backoffPlan:
          $ref: '#/components/schemas/BackoffPlan'
          nullable: true
          description: This is the backoff plan to use if the request fails.
      required:
        - url
    CustomTranscriber:
      title: CustomTranscriber
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          description: >-
            This is where the transcription request will be sent.


            Usage:

            1. Vapi will initiate a websocket connection with `server.url`.


            2. Vapi will send an initial text frame with the sample rate.
            Format:

            ```
                {
                  "type": "start",
                  "encoding": "linear16", // 16-bit raw PCM format
                  "container": "raw",
                  "sampleRate": {{sampleRate}},
                  "channels": 2 // customer is channel 0, assistant is channel 1
                }
            ```


            3. Vapi will send the audio data in 16-bit raw PCM format as binary
            frames.


            4. You can read the messages something like this:

            ```

            ws.on('message', (data, isBinary) => {
              if (isBinary) {
                pcmBuffer = Buffer.concat([pcmBuffer, data]);
                console.log(`Received PCM data, buffer size: ${pcmBuffer.length}`);
              } else {
                console.log('Received message:', JSON.parse(data.toString()));
              }
            });

            ```


            5. You will respond with transcriptions as you have them. Format:

            ```
             {
                "type": "transcriber-response",
                "transcription": "Hello, world!",
                "channel": "customer" | "assistant"
             }
            ```
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - server
    DeepgramTranscriber:
      title: DeepgramTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/DeepgramTranscriberModel'
          nullable: true
          description: >-
            This is the Deepgram model that will be used. A list of models can
            be found here:
            https://developers.deepgram.com/docs/models-languages-overview
        language:
          $ref: '#/components/schemas/DeepgramTranscriberLanguage'
          nullable: true
          description: >-
            This is the language that will be set for the transcription. The
            list of languages Deepgram supports can be found here:
            https://developers.deepgram.com/docs/models-languages-overview
        smartFormat:
          type: boolean
          nullable: true
          description: >-
            This will be use smart format option provided by Deepgram. It's
            default disabled because it can sometimes format numbers as times
            but it's getting better.
        codeSwitchingEnabled:
          type: boolean
          nullable: true
          description: >-
            This automatically switches the transcriber's language when the
            customer's language changes. Defaults to false.


            Usage:

            - If your customers switch languages mid-call, you can set this to
            true.


            Note:

            - To detect language changes, Vapi uses a custom trained model.
            Languages supported (X = limited support):
              1. Arabic
              2. Bengali
              3. Cantonese
              4. Chinese
              5. Chinese Simplified (X)
              6. Chinese Traditional (X)
              7. English
              8. Farsi (X)
              9. French
              10. German
              11. Haitian Creole (X)
              12. Hindi
              13. Italian
              14. Japanese
              15. Korean
              16. Portuguese
              17. Russian
              18. Spanish
              19. Thai
              20. Urdu
              21. Vietnamese
            - To receive `language-change-detected` webhook events, add it to
            `assistant.serverMessages`.


            @default false
        mipOptOut:
          type: boolean
          nullable: true
          description: >-
            If set to true, this will add mip_opt_out=true as a query parameter
            of all API requests. See
            https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out


            This will only be used if you are using your own Deepgram API key.


            @default false
        numerals:
          type: boolean
          nullable: true
          description: >-
            If set to true, this will cause deepgram to convert spoken numbers
            to literal numerals. For example, "my phone number is
            nine-seven-two..." would become "my phone number is 972..."


            @default false
        keywords:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These keywords are passed to the transcription model to help it pick
            up use-case specific words. Anything that may not be a common word,
            like your company name, should be added here.
        keyterm:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            Keyterm Prompting allows you improve Keyword Recall Rate (KRR) for
            important keyterms or phrases up to 90%.
        endpointing:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timeout after which Deepgram will send transcription on
            user silence. You can read in-depth documentation here:
            https://developers.deepgram.com/docs/endpointing.


            Here are the most important bits:

            - Defaults to 10. This is recommended for most use cases to optimize
            for latency.

            - 10 can cause some missing transcriptions since because of the
            shorter context. This mostly happens for one-word utterances. For
            those uses cases, it's recommended to try 300. It will add a bit of
            latency but the quality and reliability of the experience will be
            better.

            - If neither 10 nor 300 work, contact support@vapi.ai and we'll find
            another solution.


            @default 10
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    ElevenLabsTranscriberLanguage:
      title: ElevenLabsTranscriberLanguage
      type: string
      enum:
        - aa
        - ab
        - ae
        - af
        - ak
        - am
        - an
        - ar
        - as
        - av
        - ay
        - az
        - ba
        - be
        - bg
        - bh
        - bi
        - bm
        - bn
        - bo
        - br
        - bs
        - ca
        - ce
        - ch
        - co
        - cr
        - cs
        - cu
        - cv
        - cy
        - da
        - de
        - dv
        - dz
        - ee
        - el
        - en
        - eo
        - es
        - et
        - eu
        - fa
        - ff
        - fi
        - fj
        - fo
        - fr
        - fy
        - ga
        - gd
        - gl
        - gn
        - gu
        - gv
        - ha
        - he
        - hi
        - ho
        - hr
        - ht
        - hu
        - hy
        - hz
        - ia
        - id
        - ie
        - ig
        - ii
        - ik
        - io
        - is
        - it
        - iu
        - ja
        - jv
        - ka
        - kg
        - ki
        - kj
        - kk
        - kl
        - km
        - kn
        - ko
        - kr
        - ks
        - ku
        - kv
        - kw
        - ky
        - la
        - lb
        - lg
        - li
        - ln
        - lo
        - lt
        - lu
        - lv
        - mg
        - mh
        - mi
        - mk
        - ml
        - mn
        - mr
        - ms
        - mt
        - my
        - na
        - nb
        - nd
        - ne
        - ng
        - nl
        - nn
        - 'no'
        - nr
        - nv
        - ny
        - oc
        - oj
        - om
        - or
        - os
        - pa
        - pi
        - pl
        - ps
        - pt
        - qu
        - rm
        - rn
        - ro
        - ru
        - rw
        - sa
        - sc
        - sd
        - se
        - sg
        - si
        - sk
        - sl
        - sm
        - sn
        - so
        - sq
        - sr
        - ss
        - st
        - su
        - sv
        - sw
        - ta
        - te
        - tg
        - th
        - ti
        - tk
        - tl
        - tn
        - to
        - tr
        - ts
        - tt
        - tw
        - ty
        - ug
        - uk
        - ur
        - uz
        - ve
        - vi
        - vo
        - wa
        - wo
        - xh
        - yi
        - yue
        - yo
        - za
        - zh
        - zu
    ElevenLabsTranscriber:
      title: ElevenLabsTranscriber
      type: object
      properties:
        model:
          type: string
          enum:
            - scribe_v1
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/ElevenLabsTranscriberLanguage'
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    GladiaTranscriberModel:
      title: GladiaTranscriberModel
      type: string
      enum:
        - fast
        - accurate
    GladiaTranscriberLanguageBehaviour:
      title: GladiaTranscriberLanguageBehaviour
      type: string
      enum:
        - manual
        - automatic single language
        - automatic multiple languages
    GladiaTranscriberLanguage:
      title: GladiaTranscriberLanguage
      type: string
      enum:
        - af
        - sq
        - am
        - ar
        - hy
        - as
        - az
        - ba
        - eu
        - be
        - bn
        - bs
        - br
        - bg
        - ca
        - zh
        - hr
        - cs
        - da
        - nl
        - en
        - et
        - fo
        - fi
        - fr
        - gl
        - ka
        - de
        - el
        - gu
        - ht
        - ha
        - haw
        - he
        - hi
        - hu
        - is
        - id
        - it
        - ja
        - jv
        - kn
        - kk
        - km
        - ko
        - lo
        - la
        - lv
        - ln
        - lt
        - lb
        - mk
        - mg
        - ms
        - ml
        - mt
        - mi
        - mr
        - mn
        - my
        - ne
        - 'no'
        - nn
        - oc
        - ps
        - fa
        - pl
        - pt
        - pa
        - ro
        - ru
        - sa
        - sr
        - sn
        - sd
        - si
        - sk
        - sl
        - so
        - es
        - su
        - sw
        - sv
        - tl
        - tg
        - ta
        - tt
        - te
        - th
        - bo
        - tr
        - tk
        - uk
        - ur
        - uz
        - vi
        - cy
        - yi
        - yo
      description: >-
        Defines the language to use for the transcription. Required when
        languageBehaviour is 'manual'.
    GladiaTranscriber:
      title: GladiaTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/GladiaTranscriberModel'
          nullable: true
        languageBehaviour:
          $ref: '#/components/schemas/GladiaTranscriberLanguageBehaviour'
          nullable: true
        language:
          $ref: '#/components/schemas/GladiaTranscriberLanguage'
          nullable: true
          description: >-
            Defines the language to use for the transcription. Required when
            languageBehaviour is 'manual'.
        transcriptionHint:
          type: string
          nullable: true
          description: >-
            Provides a custom vocabulary to the model to improve accuracy of
            transcribing context specific words, technical terms, names, etc. If
            empty, this argument is ignored.

            ⚠️ Warning ⚠️: Please be aware that the transcription_hint field has
            a character limit of 600. If you provide a transcription_hint longer
            than 600 characters, it will be automatically truncated to meet this
            limit.
        prosody:
          type: boolean
          nullable: true
          description: >-
            If prosody is true, you will get a transcription that can contain
            prosodies i.e. (laugh) (giggles) (malefic laugh) (toss) (music)…
            Default value is false.
        audioEnhancer:
          type: boolean
          nullable: true
          description: >-
            If true, audio will be pre-processed to improve accuracy but latency
            will increase. Default value is false.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    SpeechmaticsTranscriberLanguage:
      title: SpeechmaticsTranscriberLanguage
      type: string
      enum:
        - auto
        - ar
        - ba
        - eu
        - be
        - bn
        - bg
        - yue
        - ca
        - hr
        - cs
        - da
        - nl
        - en
        - eo
        - et
        - fi
        - fr
        - gl
        - de
        - el
        - he
        - hi
        - hu
        - id
        - ia
        - ga
        - it
        - ja
        - ko
        - lv
        - lt
        - ms
        - mt
        - cmn
        - mr
        - mn
        - 'no'
        - fa
        - pl
        - pt
        - ro
        - ru
        - sk
        - sl
        - es
        - sw
        - sv
        - ta
        - th
        - tr
        - uk
        - ur
        - ug
        - vi
        - cy
    SpeechmaticsTranscriber:
      title: SpeechmaticsTranscriber
      type: object
      properties:
        model:
          type: string
          enum:
            - default
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/SpeechmaticsTranscriberLanguage'
          nullable: true
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    TalkscriberTranscriberLanguage:
      title: TalkscriberTranscriberLanguage
      type: string
      enum:
        - en
        - zh
        - de
        - es
        - ru
        - ko
        - fr
        - ja
        - pt
        - tr
        - pl
        - ca
        - nl
        - ar
        - sv
        - it
        - id
        - hi
        - fi
        - vi
        - he
        - uk
        - el
        - ms
        - cs
        - ro
        - da
        - hu
        - ta
        - 'no'
        - th
        - ur
        - hr
        - bg
        - lt
        - la
        - mi
        - ml
        - cy
        - sk
        - te
        - fa
        - lv
        - bn
        - sr
        - az
        - sl
        - kn
        - et
        - mk
        - br
        - eu
        - is
        - hy
        - ne
        - mn
        - bs
        - kk
        - sq
        - sw
        - gl
        - mr
        - pa
        - si
        - km
        - sn
        - yo
        - so
        - af
        - oc
        - ka
        - be
        - tg
        - sd
        - gu
        - am
        - yi
        - lo
        - uz
        - fo
        - ht
        - ps
        - tk
        - nn
        - mt
        - sa
        - lb
        - my
        - bo
        - tl
        - mg
        - as
        - tt
        - haw
        - ln
        - ha
        - ba
        - jw
        - su
        - yue
      description: >-
        This is the language that will be set for the transcription. The list of
        languages Whisper supports can be found here:
        https://github.com/openai/whisper/blob/main/whisper/tokenizer.py
    TalkscriberTranscriber:
      title: TalkscriberTranscriber
      type: object
      properties:
        model:
          type: string
          enum:
            - whisper
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/TalkscriberTranscriberLanguage'
          nullable: true
          description: >-
            This is the language that will be set for the transcription. The
            list of languages Whisper supports can be found here:
            https://github.com/openai/whisper/blob/main/whisper/tokenizer.py
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    GoogleTranscriberModel:
      title: GoogleTranscriberModel
      type: string
      enum:
        - gemini-2.0-flash-thinking-exp
        - gemini-2.0-pro-exp-02-05
        - gemini-2.0-flash
        - gemini-2.0-flash-lite
        - gemini-2.0-flash-lite-preview-02-05
        - gemini-2.0-flash-exp
        - gemini-2.0-flash-realtime-exp
        - gemini-1.5-flash
        - gemini-1.5-flash-002
        - gemini-1.5-pro
        - gemini-1.5-pro-002
        - gemini-1.0-pro
      description: This is the model that will be used for the transcription.
    GoogleTranscriberLanguage:
      title: GoogleTranscriberLanguage
      type: string
      enum:
        - Multilingual
        - Arabic
        - Bengali
        - Bulgarian
        - Chinese
        - Croatian
        - Czech
        - Danish
        - Dutch
        - English
        - Estonian
        - Finnish
        - French
        - German
        - Greek
        - Hebrew
        - Hindi
        - Hungarian
        - Indonesian
        - Italian
        - Japanese
        - Korean
        - Latvian
        - Lithuanian
        - Norwegian
        - Polish
        - Portuguese
        - Romanian
        - Russian
        - Serbian
        - Slovak
        - Slovenian
        - Spanish
        - Swahili
        - Swedish
        - Thai
        - Turkish
        - Ukrainian
        - Vietnamese
      description: This is the language that will be set for the transcription.
    GoogleTranscriber:
      title: GoogleTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/GoogleTranscriberModel'
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/GoogleTranscriberLanguage'
          nullable: true
          description: This is the language that will be set for the transcription.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
    OpenAiTranscriberModel:
      title: OpenAiTranscriberModel
      type: string
      enum:
        - gpt-4o-transcribe
        - gpt-4o-mini-transcribe
      description: This is the model that will be used for the transcription.
    OpenAiTranscriberLanguage:
      title: OpenAiTranscriberLanguage
      type: string
      enum:
        - af
        - ar
        - hy
        - az
        - be
        - bs
        - bg
        - ca
        - zh
        - hr
        - cs
        - da
        - nl
        - en
        - et
        - fi
        - fr
        - gl
        - de
        - el
        - he
        - hi
        - hu
        - is
        - id
        - it
        - ja
        - kn
        - kk
        - ko
        - lv
        - lt
        - mk
        - ms
        - mr
        - mi
        - ne
        - 'no'
        - fa
        - pl
        - pt
        - ro
        - ru
        - sr
        - sk
        - sl
        - es
        - sw
        - sv
        - tl
        - ta
        - th
        - tr
        - uk
        - ur
        - vi
        - cy
      description: This is the language that will be set for the transcription.
    OpenAiTranscriber:
      title: OpenAiTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/OpenAiTranscriberModel'
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/OpenAiTranscriberLanguage'
          nullable: true
          description: This is the language that will be set for the transcription.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackTranscriberPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - model
    FallbackAssemblyAiTranscriber:
      title: FallbackAssemblyAiTranscriber
      type: object
      properties:
        language:
          type: string
          enum:
            - en
          nullable: true
          description: This is the language that will be set for the transcription.
        realtimeUrl:
          type: string
          nullable: true
          description: The WebSocket URL that the transcriber connects to.
        wordBoost:
          type: array
          items:
            type: string
          nullable: true
          description: Add up to 2500 characters of custom vocabulary.
        endUtteranceSilenceThreshold:
          type: number
          format: double
          nullable: true
          description: The duration of the end utterance silence threshold in milliseconds.
        disablePartialTranscripts:
          type: boolean
          nullable: true
          description: >-
            Disable partial transcripts.

            Set to `true` to not receive partial transcripts. Defaults to
            `false`.
    FallbackAzureSpeechTranscriberLanguage:
      title: FallbackAzureSpeechTranscriberLanguage
      type: string
      enum:
        - af-ZA
        - am-ET
        - ar-AE
        - ar-BH
        - ar-DZ
        - ar-EG
        - ar-IL
        - ar-IQ
        - ar-JO
        - ar-KW
        - ar-LB
        - ar-LY
        - ar-MA
        - ar-OM
        - ar-PS
        - ar-QA
        - ar-SA
        - ar-SY
        - ar-TN
        - ar-YE
        - az-AZ
        - bg-BG
        - bn-IN
        - bs-BA
        - ca-ES
        - cs-CZ
        - cy-GB
        - da-DK
        - de-AT
        - de-CH
        - de-DE
        - el-GR
        - en-AU
        - en-CA
        - en-GB
        - en-GH
        - en-HK
        - en-IE
        - en-IN
        - en-KE
        - en-NG
        - en-NZ
        - en-PH
        - en-SG
        - en-TZ
        - en-US
        - en-ZA
        - es-AR
        - es-BO
        - es-CL
        - es-CO
        - es-CR
        - es-CU
        - es-DO
        - es-EC
        - es-ES
        - es-GQ
        - es-GT
        - es-HN
        - es-MX
        - es-NI
        - es-PA
        - es-PE
        - es-PR
        - es-PY
        - es-SV
        - es-US
        - es-UY
        - es-VE
        - et-EE
        - eu-ES
        - fa-IR
        - fi-FI
        - fil-PH
        - fr-BE
        - fr-CA
        - fr-CH
        - fr-FR
        - ga-IE
        - gl-ES
        - gu-IN
        - he-IL
        - hi-IN
        - hr-HR
        - hu-HU
        - hy-AM
        - id-ID
        - is-IS
        - it-CH
        - it-IT
        - ja-JP
        - jv-ID
        - ka-GE
        - kk-KZ
        - km-KH
        - kn-IN
        - ko-KR
        - lo-LA
        - lt-LT
        - lv-LV
        - mk-MK
        - ml-IN
        - mn-MN
        - mr-IN
        - ms-MY
        - mt-MT
        - my-MM
        - nb-NO
        - ne-NP
        - nl-BE
        - nl-NL
        - pa-IN
        - pl-PL
        - ps-AF
        - pt-BR
        - pt-PT
        - ro-RO
        - ru-RU
        - si-LK
        - sk-SK
        - sl-SI
        - so-SO
        - sq-AL
        - sr-RS
        - sv-SE
        - sw-KE
        - sw-TZ
        - ta-IN
        - te-IN
        - th-TH
        - tr-TR
        - uk-UA
        - ur-IN
        - uz-UZ
        - vi-VN
        - wuu-CN
        - yue-CN
        - zh-CN
        - zh-CN-shandong
        - zh-CN-sichuan
        - zh-HK
        - zh-TW
        - zu-ZA
      description: >-
        This is the language that will be set for the transcription. The list of
        languages Azure supports can be found here:
        https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt
    FallbackAzureSpeechTranscriber:
      title: FallbackAzureSpeechTranscriber
      type: object
      properties:
        language:
          $ref: '#/components/schemas/FallbackAzureSpeechTranscriberLanguage'
          nullable: true
          description: >-
            This is the language that will be set for the transcription. The
            list of languages Azure supports can be found here:
            https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt
    FallbackCustomTranscriber:
      title: FallbackCustomTranscriber
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          description: >-
            This is where the transcription request will be sent.


            Usage:

            1. Vapi will initiate a websocket connection with `server.url`.


            2. Vapi will send an initial text frame with the sample rate.
            Format:

            ```
                {
                  "type": "start",
                  "encoding": "linear16", // 16-bit raw PCM format
                  "container": "raw",
                  "sampleRate": {{sampleRate}},
                  "channels": 2 // customer is channel 0, assistant is channel 1
                }
            ```


            3. Vapi will send the audio data in 16-bit raw PCM format as binary
            frames.


            4. You can read the messages something like this:

            ```

            ws.on('message', (data, isBinary) => {
              if (isBinary) {
                pcmBuffer = Buffer.concat([pcmBuffer, data]);
                console.log(`Received PCM data, buffer size: ${pcmBuffer.length}`);
              } else {
                console.log('Received message:', JSON.parse(data.toString()));
              }
            });

            ```


            5. You will respond with transcriptions as you have them. Format:

            ```
             {
                "type": "transcriber-response",
                "transcription": "Hello, world!",
                "channel": "customer" | "assistant"
             }
            ```
      required:
        - server
    FallbackDeepgramTranscriber:
      title: FallbackDeepgramTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/DeepgramTranscriberModel'
          nullable: true
          description: >-
            This is the Deepgram model that will be used. A list of models can
            be found here:
            https://developers.deepgram.com/docs/models-languages-overview
        language:
          $ref: '#/components/schemas/DeepgramTranscriberLanguage'
          nullable: true
          description: >-
            This is the language that will be set for the transcription. The
            list of languages Deepgram supports can be found here:
            https://developers.deepgram.com/docs/models-languages-overview
        smartFormat:
          type: boolean
          nullable: true
          description: >-
            This will be use smart format option provided by Deepgram. It's
            default disabled because it can sometimes format numbers as times
            but it's getting better.
        codeSwitchingEnabled:
          type: boolean
          nullable: true
          description: >-
            This automatically switches the transcriber's language when the
            customer's language changes. Defaults to false.


            Usage:

            - If your customers switch languages mid-call, you can set this to
            true.


            Note:

            - To detect language changes, Vapi uses a custom trained model.
            Languages supported (X = limited support):
              1. Arabic
              2. Bengali
              3. Cantonese
              4. Chinese
              5. Chinese Simplified (X)
              6. Chinese Traditional (X)
              7. English
              8. Farsi (X)
              9. French
              10. German
              11. Haitian Creole (X)
              12. Hindi
              13. Italian
              14. Japanese
              15. Korean
              16. Portuguese
              17. Russian
              18. Spanish
              19. Thai
              20. Urdu
              21. Vietnamese
            - To receive `language-change-detected` webhook events, add it to
            `assistant.serverMessages`.


            @default false
        mipOptOut:
          type: boolean
          nullable: true
          description: >-
            If set to true, this will add mip_opt_out=true as a query parameter
            of all API requests. See
            https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out


            This will only be used if you are using your own Deepgram API key.


            @default false
        numerals:
          type: boolean
          nullable: true
          description: >-
            If set to true, this will cause deepgram to convert spoken numbers
            to literal numerals. For example, "my phone number is
            nine-seven-two..." would become "my phone number is 972..."


            @default false
        keywords:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These keywords are passed to the transcription model to help it pick
            up use-case specific words. Anything that may not be a common word,
            like your company name, should be added here.
        keyterm:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            Keyterm Prompting allows you improve Keyword Recall Rate (KRR) for
            important keyterms or phrases up to 90%.
        endpointing:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timeout after which Deepgram will send transcription on
            user silence. You can read in-depth documentation here:
            https://developers.deepgram.com/docs/endpointing.


            Here are the most important bits:

            - Defaults to 10. This is recommended for most use cases to optimize
            for latency.

            - 10 can cause some missing transcriptions since because of the
            shorter context. This mostly happens for one-word utterances. For
            those uses cases, it's recommended to try 300. It will add a bit of
            latency but the quality and reliability of the experience will be
            better.

            - If neither 10 nor 300 work, contact support@vapi.ai and we'll find
            another solution.


            @default 10
    FallbackElevenLabsTranscriberLanguage:
      title: FallbackElevenLabsTranscriberLanguage
      type: string
      enum:
        - aa
        - ab
        - ae
        - af
        - ak
        - am
        - an
        - ar
        - as
        - av
        - ay
        - az
        - ba
        - be
        - bg
        - bh
        - bi
        - bm
        - bn
        - bo
        - br
        - bs
        - ca
        - ce
        - ch
        - co
        - cr
        - cs
        - cu
        - cv
        - cy
        - da
        - de
        - dv
        - dz
        - ee
        - el
        - en
        - eo
        - es
        - et
        - eu
        - fa
        - ff
        - fi
        - fj
        - fo
        - fr
        - fy
        - ga
        - gd
        - gl
        - gn
        - gu
        - gv
        - ha
        - he
        - hi
        - ho
        - hr
        - ht
        - hu
        - hy
        - hz
        - ia
        - id
        - ie
        - ig
        - ii
        - ik
        - io
        - is
        - it
        - iu
        - ja
        - jv
        - ka
        - kg
        - ki
        - kj
        - kk
        - kl
        - km
        - kn
        - ko
        - kr
        - ks
        - ku
        - kv
        - kw
        - ky
        - la
        - lb
        - lg
        - li
        - ln
        - lo
        - lt
        - lu
        - lv
        - mg
        - mh
        - mi
        - mk
        - ml
        - mn
        - mr
        - ms
        - mt
        - my
        - na
        - nb
        - nd
        - ne
        - ng
        - nl
        - nn
        - 'no'
        - nr
        - nv
        - ny
        - oc
        - oj
        - om
        - or
        - os
        - pa
        - pi
        - pl
        - ps
        - pt
        - qu
        - rm
        - rn
        - ro
        - ru
        - rw
        - sa
        - sc
        - sd
        - se
        - sg
        - si
        - sk
        - sl
        - sm
        - sn
        - so
        - sq
        - sr
        - ss
        - st
        - su
        - sv
        - sw
        - ta
        - te
        - tg
        - th
        - ti
        - tk
        - tl
        - tn
        - to
        - tr
        - ts
        - tt
        - tw
        - ty
        - ug
        - uk
        - ur
        - uz
        - ve
        - vi
        - vo
        - wa
        - wo
        - xh
        - yi
        - yue
        - yo
        - za
        - zh
        - zu
    FallbackElevenLabsTranscriber:
      title: FallbackElevenLabsTranscriber
      type: object
      properties:
        model:
          type: string
          enum:
            - scribe_v1
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/FallbackElevenLabsTranscriberLanguage'
          nullable: true
    FallbackGladiaTranscriberModel:
      title: FallbackGladiaTranscriberModel
      type: string
      enum:
        - fast
        - accurate
    FallbackGladiaTranscriberLanguageBehaviour:
      title: FallbackGladiaTranscriberLanguageBehaviour
      type: string
      enum:
        - manual
        - automatic single language
        - automatic multiple languages
    FallbackGladiaTranscriberLanguage:
      title: FallbackGladiaTranscriberLanguage
      type: string
      enum:
        - af
        - sq
        - am
        - ar
        - hy
        - as
        - az
        - ba
        - eu
        - be
        - bn
        - bs
        - br
        - bg
        - ca
        - zh
        - hr
        - cs
        - da
        - nl
        - en
        - et
        - fo
        - fi
        - fr
        - gl
        - ka
        - de
        - el
        - gu
        - ht
        - ha
        - haw
        - he
        - hi
        - hu
        - is
        - id
        - it
        - ja
        - jv
        - kn
        - kk
        - km
        - ko
        - lo
        - la
        - lv
        - ln
        - lt
        - lb
        - mk
        - mg
        - ms
        - ml
        - mt
        - mi
        - mr
        - mn
        - my
        - ne
        - 'no'
        - nn
        - oc
        - ps
        - fa
        - pl
        - pt
        - pa
        - ro
        - ru
        - sa
        - sr
        - sn
        - sd
        - si
        - sk
        - sl
        - so
        - es
        - su
        - sw
        - sv
        - tl
        - tg
        - ta
        - tt
        - te
        - th
        - bo
        - tr
        - tk
        - uk
        - ur
        - uz
        - vi
        - cy
        - yi
        - yo
      description: >-
        Defines the language to use for the transcription. Required when
        languageBehaviour is 'manual'.
    FallbackGladiaTranscriber:
      title: FallbackGladiaTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/FallbackGladiaTranscriberModel'
          nullable: true
        languageBehaviour:
          $ref: '#/components/schemas/FallbackGladiaTranscriberLanguageBehaviour'
          nullable: true
        language:
          $ref: '#/components/schemas/FallbackGladiaTranscriberLanguage'
          nullable: true
          description: >-
            Defines the language to use for the transcription. Required when
            languageBehaviour is 'manual'.
        transcriptionHint:
          type: string
          nullable: true
          description: >-
            Provides a custom vocabulary to the model to improve accuracy of
            transcribing context specific words, technical terms, names, etc. If
            empty, this argument is ignored.

            ⚠️ Warning ⚠️: Please be aware that the transcription_hint field has
            a character limit of 600. If you provide a transcription_hint longer
            than 600 characters, it will be automatically truncated to meet this
            limit.
        prosody:
          type: boolean
          nullable: true
          description: >-
            If prosody is true, you will get a transcription that can contain
            prosodies i.e. (laugh) (giggles) (malefic laugh) (toss) (music)…
            Default value is false.
        audioEnhancer:
          type: boolean
          nullable: true
          description: >-
            If true, audio will be pre-processed to improve accuracy but latency
            will increase. Default value is false.
    FallbackSpeechmaticsTranscriberLanguage:
      title: FallbackSpeechmaticsTranscriberLanguage
      type: string
      enum:
        - auto
        - ar
        - ba
        - eu
        - be
        - bn
        - bg
        - yue
        - ca
        - hr
        - cs
        - da
        - nl
        - en
        - eo
        - et
        - fi
        - fr
        - gl
        - de
        - el
        - he
        - hi
        - hu
        - id
        - ia
        - ga
        - it
        - ja
        - ko
        - lv
        - lt
        - ms
        - mt
        - cmn
        - mr
        - mn
        - 'no'
        - fa
        - pl
        - pt
        - ro
        - ru
        - sk
        - sl
        - es
        - sw
        - sv
        - ta
        - th
        - tr
        - uk
        - ur
        - ug
        - vi
        - cy
    FallbackSpeechmaticsTranscriber:
      title: FallbackSpeechmaticsTranscriber
      type: object
      properties:
        model:
          type: string
          enum:
            - default
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/FallbackSpeechmaticsTranscriberLanguage'
          nullable: true
    FallbackTalkscriberTranscriberLanguage:
      title: FallbackTalkscriberTranscriberLanguage
      type: string
      enum:
        - en
        - zh
        - de
        - es
        - ru
        - ko
        - fr
        - ja
        - pt
        - tr
        - pl
        - ca
        - nl
        - ar
        - sv
        - it
        - id
        - hi
        - fi
        - vi
        - he
        - uk
        - el
        - ms
        - cs
        - ro
        - da
        - hu
        - ta
        - 'no'
        - th
        - ur
        - hr
        - bg
        - lt
        - la
        - mi
        - ml
        - cy
        - sk
        - te
        - fa
        - lv
        - bn
        - sr
        - az
        - sl
        - kn
        - et
        - mk
        - br
        - eu
        - is
        - hy
        - ne
        - mn
        - bs
        - kk
        - sq
        - sw
        - gl
        - mr
        - pa
        - si
        - km
        - sn
        - yo
        - so
        - af
        - oc
        - ka
        - be
        - tg
        - sd
        - gu
        - am
        - yi
        - lo
        - uz
        - fo
        - ht
        - ps
        - tk
        - nn
        - mt
        - sa
        - lb
        - my
        - bo
        - tl
        - mg
        - as
        - tt
        - haw
        - ln
        - ha
        - ba
        - jw
        - su
        - yue
      description: >-
        This is the language that will be set for the transcription. The list of
        languages Whisper supports can be found here:
        https://github.com/openai/whisper/blob/main/whisper/tokenizer.py
    FallbackTalkscriberTranscriber:
      title: FallbackTalkscriberTranscriber
      type: object
      properties:
        model:
          type: string
          enum:
            - whisper
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/FallbackTalkscriberTranscriberLanguage'
          nullable: true
          description: >-
            This is the language that will be set for the transcription. The
            list of languages Whisper supports can be found here:
            https://github.com/openai/whisper/blob/main/whisper/tokenizer.py
    FallbackGoogleTranscriberModel:
      title: FallbackGoogleTranscriberModel
      type: string
      enum:
        - gemini-2.0-flash-thinking-exp
        - gemini-2.0-pro-exp-02-05
        - gemini-2.0-flash
        - gemini-2.0-flash-lite
        - gemini-2.0-flash-lite-preview-02-05
        - gemini-2.0-flash-exp
        - gemini-2.0-flash-realtime-exp
        - gemini-1.5-flash
        - gemini-1.5-flash-002
        - gemini-1.5-pro
        - gemini-1.5-pro-002
        - gemini-1.0-pro
      description: This is the model that will be used for the transcription.
    FallbackGoogleTranscriberLanguage:
      title: FallbackGoogleTranscriberLanguage
      type: string
      enum:
        - Multilingual
        - Arabic
        - Bengali
        - Bulgarian
        - Chinese
        - Croatian
        - Czech
        - Danish
        - Dutch
        - English
        - Estonian
        - Finnish
        - French
        - German
        - Greek
        - Hebrew
        - Hindi
        - Hungarian
        - Indonesian
        - Italian
        - Japanese
        - Korean
        - Latvian
        - Lithuanian
        - Norwegian
        - Polish
        - Portuguese
        - Romanian
        - Russian
        - Serbian
        - Slovak
        - Slovenian
        - Spanish
        - Swahili
        - Swedish
        - Thai
        - Turkish
        - Ukrainian
        - Vietnamese
      description: This is the language that will be set for the transcription.
    FallbackGoogleTranscriber:
      title: FallbackGoogleTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/FallbackGoogleTranscriberModel'
          nullable: true
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/FallbackGoogleTranscriberLanguage'
          nullable: true
          description: This is the language that will be set for the transcription.
    FallbackOpenAiTranscriberModel:
      title: FallbackOpenAiTranscriberModel
      type: string
      enum:
        - gpt-4o-transcribe
        - gpt-4o-mini-transcribe
      description: This is the model that will be used for the transcription.
    FallbackOpenAiTranscriberLanguage:
      title: FallbackOpenAiTranscriberLanguage
      type: string
      enum:
        - af
        - ar
        - hy
        - az
        - be
        - bs
        - bg
        - ca
        - zh
        - hr
        - cs
        - da
        - nl
        - en
        - et
        - fi
        - fr
        - gl
        - de
        - el
        - he
        - hi
        - hu
        - is
        - id
        - it
        - ja
        - kn
        - kk
        - ko
        - lv
        - lt
        - mk
        - ms
        - mr
        - mi
        - ne
        - 'no'
        - fa
        - pl
        - pt
        - ro
        - ru
        - sr
        - sk
        - sl
        - es
        - sw
        - sv
        - tl
        - ta
        - th
        - tr
        - uk
        - ur
        - vi
        - cy
      description: This is the language that will be set for the transcription.
    FallbackOpenAiTranscriber:
      title: FallbackOpenAiTranscriber
      type: object
      properties:
        model:
          $ref: '#/components/schemas/FallbackOpenAiTranscriberModel'
          description: This is the model that will be used for the transcription.
        language:
          $ref: '#/components/schemas/FallbackOpenAiTranscriberLanguage'
          nullable: true
          description: This is the language that will be set for the transcription.
      required:
        - model
    LangfuseObservabilityPlan:
      title: LangfuseObservabilityPlan
      type: object
      properties:
        provider:
          type: string
          enum:
            - langfuse
        tags:
          type: array
          items:
            type: string
          description: >-
            This is an array of tags to be added to the Langfuse trace. Tags
            allow you to categorize and filter traces.
            https://langfuse.com/docs/tracing-features/tags
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            This is a JSON object that will be added to the Langfuse trace.
            Traces can be enriched with metadata to better understand your
            users, application, and experiments.
            https://langfuse.com/docs/tracing-features/metadata

            By default it includes the call metadata, assistant metadata, and
            assistant overrides.
      required:
        - provider
        - tags
    TextContentLanguage:
      title: TextContentLanguage
      type: string
      enum:
        - aa
        - ab
        - ae
        - af
        - ak
        - am
        - an
        - ar
        - as
        - av
        - ay
        - az
        - ba
        - be
        - bg
        - bh
        - bi
        - bm
        - bn
        - bo
        - br
        - bs
        - ca
        - ce
        - ch
        - co
        - cr
        - cs
        - cu
        - cv
        - cy
        - da
        - de
        - dv
        - dz
        - ee
        - el
        - en
        - eo
        - es
        - et
        - eu
        - fa
        - ff
        - fi
        - fj
        - fo
        - fr
        - fy
        - ga
        - gd
        - gl
        - gn
        - gu
        - gv
        - ha
        - he
        - hi
        - ho
        - hr
        - ht
        - hu
        - hy
        - hz
        - ia
        - id
        - ie
        - ig
        - ii
        - ik
        - io
        - is
        - it
        - iu
        - ja
        - jv
        - ka
        - kg
        - ki
        - kj
        - kk
        - kl
        - km
        - kn
        - ko
        - kr
        - ks
        - ku
        - kv
        - kw
        - ky
        - la
        - lb
        - lg
        - li
        - ln
        - lo
        - lt
        - lu
        - lv
        - mg
        - mh
        - mi
        - mk
        - ml
        - mn
        - mr
        - ms
        - mt
        - my
        - na
        - nb
        - nd
        - ne
        - ng
        - nl
        - nn
        - 'no'
        - nr
        - nv
        - ny
        - oc
        - oj
        - om
        - or
        - os
        - pa
        - pi
        - pl
        - ps
        - pt
        - qu
        - rm
        - rn
        - ro
        - ru
        - rw
        - sa
        - sc
        - sd
        - se
        - sg
        - si
        - sk
        - sl
        - sm
        - sn
        - so
        - sq
        - sr
        - ss
        - st
        - su
        - sv
        - sw
        - ta
        - te
        - tg
        - th
        - ti
        - tk
        - tl
        - tn
        - to
        - tr
        - ts
        - tt
        - tw
        - ty
        - ug
        - uk
        - ur
        - uz
        - ve
        - vi
        - vo
        - wa
        - wo
        - xh
        - yi
        - yue
        - yo
        - za
        - zh
        - zu
    TextContent:
      title: TextContent
      type: object
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string
        language:
          $ref: '#/components/schemas/TextContentLanguage'
      required:
        - type
        - text
        - language
    ConditionOperator:
      title: ConditionOperator
      type: string
      enum:
        - eq
        - neq
        - gt
        - gte
        - lt
        - lte
      description: This is the operator you want to use to compare the parameter and value.
    Condition:
      title: Condition
      type: object
      properties:
        operator:
          $ref: '#/components/schemas/ConditionOperator'
          description: >-
            This is the operator you want to use to compare the parameter and
            value.
        param:
          type: string
          description: This is the name of the parameter that you want to check.
        value:
          type: object
          additionalProperties: true
          description: This is the value you want to compare against the parameter.
      required:
        - operator
        - param
        - value
    ToolMessageStart:
      title: ToolMessageStart
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/TextContent'
          nullable: true
          description: >-
            This is an alternative to the `content` property. It allows to
            specify variants of the same content, one per language.


            Usage:

            - If your assistants are multilingual, you can provide content for
            each language.

            - If you don't provide content for a language, the first item in the
            array will be automatically translated to the active language at
            that moment.


            This will override the `content` property.
        blocking:
          type: boolean
          nullable: true
          description: >-
            This is an optional boolean that if true, the tool call will only
            trigger after the message is spoken. Default is false.


            @default false
        content:
          type: string
          nullable: true
          description: >-
            This is the content that the assistant says when this message is
            triggered.
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          nullable: true
          description: >-
            This is an optional array of conditions that the tool call arguments
            must meet in order for this message to be triggered.
    ToolMessageCompleteRole:
      title: ToolMessageCompleteRole
      type: string
      enum:
        - assistant
        - system
      description: >-
        This is optional and defaults to "assistant".


        When role=assistant, `content` is said out loud.


        When role=system, `content` is passed to the model in a system message.
        Example:
            system: default one
            assistant:
            user:
            assistant:
            user:
            assistant:
            user:
            assistant: tool called
            tool: your server response
            <--- system prompt as hint
            ---> model generates response which is spoken
        This is useful when you want to provide a hint to the model about what
        to say next.
    ToolMessageComplete:
      title: ToolMessageComplete
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/TextContent'
          nullable: true
          description: >-
            This is an alternative to the `content` property. It allows to
            specify variants of the same content, one per language.


            Usage:

            - If your assistants are multilingual, you can provide content for
            each language.

            - If you don't provide content for a language, the first item in the
            array will be automatically translated to the active language at
            that moment.


            This will override the `content` property.
        role:
          $ref: '#/components/schemas/ToolMessageCompleteRole'
          nullable: true
          description: >-
            This is optional and defaults to "assistant".


            When role=assistant, `content` is said out loud.


            When role=system, `content` is passed to the model in a system
            message. Example:
                system: default one
                assistant:
                user:
                assistant:
                user:
                assistant:
                user:
                assistant: tool called
                tool: your server response
                <--- system prompt as hint
                ---> model generates response which is spoken
            This is useful when you want to provide a hint to the model about
            what to say next.
        endCallAfterSpokenEnabled:
          type: boolean
          nullable: true
          description: >-
            This is an optional boolean that if true, the call will end after
            the message is spoken. Default is false.


            This is ignored if `role` is set to `system`.


            @default false
        content:
          type: string
          nullable: true
          description: >-
            This is the content that the assistant says when this message is
            triggered.
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          nullable: true
          description: >-
            This is an optional array of conditions that the tool call arguments
            must meet in order for this message to be triggered.
    ToolMessageFailed:
      title: ToolMessageFailed
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/TextContent'
          nullable: true
          description: >-
            This is an alternative to the `content` property. It allows to
            specify variants of the same content, one per language.


            Usage:

            - If your assistants are multilingual, you can provide content for
            each language.

            - If you don't provide content for a language, the first item in the
            array will be automatically translated to the active language at
            that moment.


            This will override the `content` property.
        endCallAfterSpokenEnabled:
          type: boolean
          nullable: true
          description: >-
            This is an optional boolean that if true, the call will end after
            the message is spoken. Default is false.


            @default false
        content:
          type: string
          nullable: true
          description: >-
            This is the content that the assistant says when this message is
            triggered.
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          nullable: true
          description: >-
            This is an optional array of conditions that the tool call arguments
            must meet in order for this message to be triggered.
    ToolMessageDelayed:
      title: ToolMessageDelayed
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/TextContent'
          nullable: true
          description: >-
            This is an alternative to the `content` property. It allows to
            specify variants of the same content, one per language.


            Usage:

            - If your assistants are multilingual, you can provide content for
            each language.

            - If you don't provide content for a language, the first item in the
            array will be automatically translated to the active language at
            that moment.


            This will override the `content` property.
        timingMilliseconds:
          type: number
          format: double
          nullable: true
          description: >-
            The number of milliseconds to wait for the server response before
            saying this message.
        content:
          type: string
          nullable: true
          description: >-
            This is the content that the assistant says when this message is
            triggered.
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
          nullable: true
          description: >-
            This is an optional array of conditions that the tool call arguments
            must meet in order for this message to be triggered.
    JsonSchemaType:
      title: JsonSchemaType
      type: string
      enum:
        - string
        - number
        - integer
        - boolean
        - array
        - object
      description: >-
        This is the type of output you'd like.


        `string`, `number`, `integer`, `boolean` are the primitive types and
        should be obvious.


        `array` and `object` are more interesting and quite powerful. They allow
        you to define nested structures.


        For `array`, you can define the schema of the items in the array using
        the `items` property.


        For `object`, you can define the properties of the object using the
        `properties` property.
    JsonSchema:
      title: JsonSchema
      type: object
      properties:
        type:
          $ref: '#/components/schemas/JsonSchemaType'
          description: >-
            This is the type of output you'd like.


            `string`, `number`, `integer`, `boolean` are the primitive types and
            should be obvious.


            `array` and `object` are more interesting and quite powerful. They
            allow you to define nested structures.


            For `array`, you can define the schema of the items in the array
            using the `items` property.


            For `object`, you can define the properties of the object using the
            `properties` property.
        items:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            This is required if the type is "array". This is the schema of the
            items in the array.


            This is of type JsonSchema. However, Swagger doesn't support
            circular references.
        properties:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            This is required if the type is "object". This specifies the
            properties of the object.


            This is a map of string to JsonSchema. However, Swagger doesn't
            support circular references.
        description:
          type: string
          nullable: true
          description: >-
            This is the description to help the model understand what it needs
            to output.
        required:
          type: array
          items:
            type: string
          nullable: true
          description: |-
            This is a list of properties that are required.

            This only makes sense if the type is "object".
        regex:
          type: string
          nullable: true
          description: This is a regex that will be used to validate data in question.
        value:
          type: string
          nullable: true
          description: This the value that will be used in filling the property.
        target:
          type: string
          nullable: true
          description: >-
            This the target variable that will be filled with the value of this
            property.
        enum:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This array specifies the allowed values that can be used to restrict
            the output of the model.
      required:
        - type
    OpenAiFunctionParameters:
      title: OpenAiFunctionParameters
      type: object
      properties:
        type:
          type: string
          enum:
            - object
          description: >-
            This must be set to 'object'. It instructs the model to return a
            JSON object containing the function call properties.
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JsonSchema'
          description: >-
            This provides a description of the properties required by the
            function.

            JSON Schema can be used to specify expectations for each property.

            Refer to [this
            doc](https://ajv.js.org/json-schema.html#json-data-type) for a
            comprehensive guide on JSON Schema.
        required:
          type: array
          items:
            type: string
          nullable: true
          description: This specifies the properties that are required by the function.
      required:
        - type
        - properties
    OpenAiFunction:
      title: OpenAiFunction
      type: object
      properties:
        strict:
          type: boolean
          nullable: true
          description: >-
            This is a boolean that controls whether to enable strict schema
            adherence when generating the function call. If set to true, the
            model will follow the exact schema defined in the parameters field.
            Only a subset of JSON Schema is supported when strict is true. Learn
            more about Structured Outputs in the [OpenAI
            guide](https://openai.com/index/introducing-structured-outputs-in-the-api/).


            @default false
        name:
          type: string
          description: >-
            This is the the name of the function to be called.


            Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a
            maximum length of 64.
        description:
          type: string
          nullable: true
          description: >-
            This is the description of what the function does, used by the AI to
            choose when and how to call the function.
        parameters:
          $ref: '#/components/schemas/OpenAiFunctionParameters'
          nullable: true
          description: >-
            These are the parameters the functions accepts, described as a JSON
            Schema object.


            See the [OpenAI
            guide](https://platform.openai.com/docs/guides/function-calling) for
            examples, and the [JSON Schema
            reference](https://json-schema.org/understanding-json-schema) for
            documentation about the format.


            Omitting parameters defines a function with an empty parameter list.
      required:
        - name
    CreateDtmfToolDtoMessagesItem:
      title: CreateDtmfToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateDtmfToolDto:
      title: CreateDtmfToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateDtmfToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateEndCallToolDtoMessagesItem:
      title: CreateEndCallToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateEndCallToolDto:
      title: CreateEndCallToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateEndCallToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateVoicemailToolDtoMessagesItem:
      title: CreateVoicemailToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateVoicemailToolDto:
      title: CreateVoicemailToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateVoicemailToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateFunctionToolDtoMessagesItem:
      title: CreateFunctionToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateFunctionToolDto:
      title: CreateFunctionToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateFunctionToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    GhlToolMetadata:
      title: GhlToolMetadata
      type: object
      properties:
        workflowId:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
    CreateGhlToolDtoMessagesItem:
      title: CreateGhlToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateGhlToolDto:
      title: CreateGhlToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateGhlToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - metadata
    MakeToolMetadata:
      title: MakeToolMetadata
      type: object
      properties:
        scenarioId:
          type: number
          format: double
          nullable: true
        triggerHookId:
          type: number
          format: double
          nullable: true
    CreateMakeToolDtoMessagesItem:
      title: CreateMakeToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateMakeToolDto:
      title: CreateMakeToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateMakeToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - metadata
    CustomMessage:
      title: CustomMessage
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/TextContent'
          nullable: true
          description: >-
            This is an alternative to the `content` property. It allows to
            specify variants of the same content, one per language.


            Usage:

            - If your assistants are multilingual, you can provide content for
            each language.

            - If you don't provide content for a language, the first item in the
            array will be automatically translated to the active language at
            that moment.


            This will override the `content` property.
        type:
          type: string
          enum:
            - custom-message
          description: This is a custom message.
        content:
          type: string
          nullable: true
          description: >-
            This is the content that the assistant will say when this message is
            triggered.
      required:
        - type
    TransferDestinationAssistantMessage:
      title: TransferDestinationAssistantMessage
      oneOf:
        - type: string
        - $ref: '#/components/schemas/CustomMessage'
      description: >-
        This is spoken to the customer before connecting them to the
        destination.


        Usage:

        - If this is not provided and transfer tool messages is not provided,
        default is "Transferring the call now".

        - If set to "", nothing is spoken. This is useful when you want to
        silently transfer. This is especially useful when transferring between
        assistants in a squad. In this scenario, you likely also want to set
        `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
        for the destination assistant.


        This accepts a string or a ToolMessageStart class. Latter is useful if
        you want to specify multiple messages for different languages through
        the `contents` field.
    TransferDestinationAssistant:
      title: TransferDestinationAssistant
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationAssistantMessage'
          nullable: true
          description: >-
            This is spoken to the customer before connecting them to the
            destination.


            Usage:

            - If this is not provided and transfer tool messages is not
            provided, default is "Transferring the call now".

            - If set to "", nothing is spoken. This is useful when you want to
            silently transfer. This is especially useful when transferring
            between assistants in a squad. In this scenario, you likely also
            want to set
            `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
            for the destination assistant.


            This accepts a string or a ToolMessageStart class. Latter is useful
            if you want to specify multiple messages for different languages
            through the `contents` field.
        transferMode:
          $ref: '#/components/schemas/TransferMode'
          nullable: true
          description: >-
            This is the mode to use for the transfer. Defaults to
            `rolling-history`.


            - `rolling-history`: This is the default mode. It keeps the entire
            conversation history and appends the new assistant's system message
            on transfer.

              Example:

              Pre-transfer:
                system: assistant1 system message
                assistant: assistant1 first message
                user: hey, good morning
                assistant: how can i help?
                user: i need help with my account
                assistant: (destination.message)

              Post-transfer:
                system: assistant1 system message
                assistant: assistant1 first message
                user: hey, good morning
                assistant: how can i help?
                user: i need help with my account
                assistant: (destination.message)
                system: assistant2 system message
                assistant: assistant2 first message (or model generated if firstMessageMode is set to `assistant-speaks-first-with-model-generated-message`)

            - `swap-system-message-in-history`: This replaces the original
            system message with the new assistant's system message on transfer.

              Example:

              Pre-transfer:
                system: assistant1 system message
                assistant: assistant1 first message
                user: hey, good morning
                assistant: how can i help?
                user: i need help with my account
                assistant: (destination.message)

              Post-transfer:
                system: assistant2 system message
                assistant: assistant1 first message
                user: hey, good morning
                assistant: how can i help?
                user: i need help with my account
                assistant: (destination.message)
                assistant: assistant2 first message (or model generated if firstMessageMode is set to `assistant-speaks-first-with-model-generated-message`)

            - `delete-history`: This deletes the entire conversation history on
            transfer.

              Example:

              Pre-transfer:
                system: assistant1 system message
                assistant: assistant1 first message
                user: hey, good morning
                assistant: how can i help?
                user: i need help with my account
                assistant: (destination.message)

              Post-transfer:
                system: assistant2 system message
                assistant: assistant2 first message
                user: Yes, please
                assistant: how can i help?
                user: i need help with my account

            -
            `swap-system-message-in-history-and-remove-transfer-tool-messages`:
            This replaces the original system message with the new assistant's
            system message on transfer and removes transfer tool messages from
            conversation history sent to the LLM.

              Example:

              Pre-transfer:
                system: assistant1 system message
                assistant: assistant1 first message
                user: hey, good morning
                assistant: how can i help?
                user: i need help with my account
                transfer-tool
                transfer-tool-result
                assistant: (destination.message)

              Post-transfer:
                system: assistant2 system message
                assistant: assistant1 first message
                user: hey, good morning
                assistant: how can i help?
                user: i need help with my account
                assistant: (destination.message)
                assistant: assistant2 first message (or model generated if firstMessageMode is set to `assistant-speaks-first-with-model-generated-message`)

            @default 'rolling-history'
        assistantName:
          type: string
          description: This is the assistant to transfer the call to.
        description:
          type: string
          nullable: true
          description: >-
            This is the description of the destination, used by the AI to choose
            when and how to transfer the call.
      required:
        - assistantName
    TransferDestinationStepMessage:
      title: TransferDestinationStepMessage
      oneOf:
        - type: string
        - $ref: '#/components/schemas/CustomMessage'
      description: >-
        This is spoken to the customer before connecting them to the
        destination.


        Usage:

        - If this is not provided and transfer tool messages is not provided,
        default is "Transferring the call now".

        - If set to "", nothing is spoken. This is useful when you want to
        silently transfer. This is especially useful when transferring between
        assistants in a squad. In this scenario, you likely also want to set
        `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
        for the destination assistant.


        This accepts a string or a ToolMessageStart class. Latter is useful if
        you want to specify multiple messages for different languages through
        the `contents` field.
    TransferDestinationStep:
      title: TransferDestinationStep
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationStepMessage'
          nullable: true
          description: >-
            This is spoken to the customer before connecting them to the
            destination.


            Usage:

            - If this is not provided and transfer tool messages is not
            provided, default is "Transferring the call now".

            - If set to "", nothing is spoken. This is useful when you want to
            silently transfer. This is especially useful when transferring
            between assistants in a squad. In this scenario, you likely also
            want to set
            `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
            for the destination assistant.


            This accepts a string or a ToolMessageStart class. Latter is useful
            if you want to specify multiple messages for different languages
            through the `contents` field.
        stepName:
          type: string
          description: This is the step to transfer to.
        description:
          type: string
          nullable: true
          description: >-
            This is the description of the destination, used by the AI to choose
            when and how to transfer the call.
      required:
        - stepName
    SummaryPlan:
      title: SummaryPlan
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            additionalProperties: true
          nullable: true
          description: >-
            These are the messages used to generate the summary.


            @default: ```

            [
              {
                "role": "system",
                "content": "You are an expert note-taker. You will be given a transcript of a call. Summarize the call in 2-3 sentences. DO NOT return anything except the summary."
              },
              {
                "role": "user",
                "content": "Here is the transcript:\n\n{{transcript}}\n\n"
              }
            ]```


            You can customize by providing any messages you want.


            Here are the template variables available:

            - {{transcript}}: The transcript of the call from
            `call.artifact.transcript`- {{systemPrompt}}: The system prompt of
            the call from `assistant.model.messages[type=system].content`
        enabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether a summary is generated and stored in
            `call.analysis.summary`. Defaults to true.


            Usage:

            - If you want to disable the summary, set this to false.


            @default true
        timeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is how long the request is tried before giving up. When request
            times out, `call.analysis.summary` will be empty.


            Usage:

            - To guarantee the summary is generated, set this value high. Note,
            this will delay the end of call report in cases where model is slow
            to respond.


            @default 5 seconds
    TransferPlanMode:
      title: TransferPlanMode
      type: string
      enum:
        - blind-transfer
        - blind-transfer-add-summary-to-sip-header
        - warm-transfer-say-message
        - warm-transfer-say-summary
        - warm-transfer-twiml
        - warm-transfer-wait-for-operator-to-speak-first-and-then-say-message
        - warm-transfer-wait-for-operator-to-speak-first-and-then-say-summary
      description: >-
        This configures how transfer is executed and the experience of the
        destination party receiving the call.


        Usage:

        - `blind-transfer`: The assistant forwards the call to the destination
        without any message or summary.

        - `blind-transfer-add-summary-to-sip-header`: The assistant forwards the
        call to the destination and adds a SIP header X-Transfer-Summary to the
        call to include the summary.

        - `warm-transfer-say-message`: The assistant dials the destination,
        delivers the `message` to the destination party, connects the customer,
        and leaves the call.

        - `warm-transfer-say-summary`: The assistant dials the destination,
        provides a summary of the call to the destination party, connects the
        customer, and leaves the call.

        - `warm-transfer-wait-for-operator-to-speak-first-and-then-say-message`:
        The assistant dials the destination, waits for the operator to speak,
        delivers the `message` to the destination party, and then connects the
        customer.

        - `warm-transfer-wait-for-operator-to-speak-first-and-then-say-summary`:
        The assistant dials the destination, waits for the operator to speak,
        provides a summary of the call to the destination party, and then
        connects the customer.

        - `warm-transfer-twiml`: The assistant dials the destination, executes
        the twiml instructions on the destination call leg, connects the
        customer, and leaves the call.


        @default 'blind-transfer'
    TransferPlanMessage:
      title: TransferPlanMessage
      oneOf:
        - type: string
        - $ref: '#/components/schemas/CustomMessage'
      description: >-
        This is the message the assistant will deliver to the destination party
        before connecting the customer.


        Usage:

        - Used only when `mode` is `blind-transfer-add-summary-to-sip-header`,
        `warm-transfer-say-message` or
        `warm-transfer-wait-for-operator-to-speak-first-and-then-say-message`.
    TransferPlan:
      title: TransferPlan
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/TransferPlanMode'
          description: >-
            This configures how transfer is executed and the experience of the
            destination party receiving the call.


            Usage:

            - `blind-transfer`: The assistant forwards the call to the
            destination without any message or summary.

            - `blind-transfer-add-summary-to-sip-header`: The assistant forwards
            the call to the destination and adds a SIP header X-Transfer-Summary
            to the call to include the summary.

            - `warm-transfer-say-message`: The assistant dials the destination,
            delivers the `message` to the destination party, connects the
            customer, and leaves the call.

            - `warm-transfer-say-summary`: The assistant dials the destination,
            provides a summary of the call to the destination party, connects
            the customer, and leaves the call.

            -
            `warm-transfer-wait-for-operator-to-speak-first-and-then-say-message`:
            The assistant dials the destination, waits for the operator to
            speak, delivers the `message` to the destination party, and then
            connects the customer.

            -
            `warm-transfer-wait-for-operator-to-speak-first-and-then-say-summary`:
            The assistant dials the destination, waits for the operator to
            speak, provides a summary of the call to the destination party, and
            then connects the customer.

            - `warm-transfer-twiml`: The assistant dials the destination,
            executes the twiml instructions on the destination call leg,
            connects the customer, and leaves the call.


            @default 'blind-transfer'
        message:
          $ref: '#/components/schemas/TransferPlanMessage'
          nullable: true
          description: >-
            This is the message the assistant will deliver to the destination
            party before connecting the customer.


            Usage:

            - Used only when `mode` is
            `blind-transfer-add-summary-to-sip-header`,
            `warm-transfer-say-message` or
            `warm-transfer-wait-for-operator-to-speak-first-and-then-say-message`.
        sipVerb:
          type: object
          additionalProperties: true
          nullable: true
          description: |-
            This specifies the SIP verb to use while transferring the call.
            - 'refer': Uses SIP REFER to transfer the call (default)
            - 'bye': Ends current call with SIP BYE
            - 'dial': Uses SIP DIAL to transfer the call
        twiml:
          type: string
          nullable: true
          description: >-
            This is the TwiML instructions to execute on the destination call
            leg before connecting the customer.


            Usage:

            - Used only when `mode` is `warm-transfer-twiml`.

            - Supports only `Play`, `Say`, `Gather`, `Hangup` and `Pause` verbs.

            - Maximum length is 4096 characters.


            Example:

            ```

            <Say voice="alice" language="en-US">Hello, transferring a customer
            to you.</Say>

            <Pause length="2"/>

            <Say>They called about billing questions.</Say>

            ```
        summaryPlan:
          $ref: '#/components/schemas/SummaryPlan'
          nullable: true
          description: >-
            This is the plan for generating a summary of the call to present to
            the destination party.


            Usage:

            - Used only when `mode` is
            `blind-transfer-add-summary-to-sip-header` or
            `warm-transfer-say-summary` or
            `warm-transfer-wait-for-operator-to-speak-first-and-then-say-summary`.
      required:
        - mode
    TransferDestinationNumberMessage:
      title: TransferDestinationNumberMessage
      oneOf:
        - type: string
        - $ref: '#/components/schemas/CustomMessage'
      description: >-
        This is spoken to the customer before connecting them to the
        destination.


        Usage:

        - If this is not provided and transfer tool messages is not provided,
        default is "Transferring the call now".

        - If set to "", nothing is spoken. This is useful when you want to
        silently transfer. This is especially useful when transferring between
        assistants in a squad. In this scenario, you likely also want to set
        `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
        for the destination assistant.


        This accepts a string or a ToolMessageStart class. Latter is useful if
        you want to specify multiple messages for different languages through
        the `contents` field.
    TransferDestinationNumber:
      title: TransferDestinationNumber
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationNumberMessage'
          nullable: true
          description: >-
            This is spoken to the customer before connecting them to the
            destination.


            Usage:

            - If this is not provided and transfer tool messages is not
            provided, default is "Transferring the call now".

            - If set to "", nothing is spoken. This is useful when you want to
            silently transfer. This is especially useful when transferring
            between assistants in a squad. In this scenario, you likely also
            want to set
            `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
            for the destination assistant.


            This accepts a string or a ToolMessageStart class. Latter is useful
            if you want to specify multiple messages for different languages
            through the `contents` field.
        numberE164CheckEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the flag to toggle the E164 check for the `number` field.
            This is an advanced property which should be used if you know your
            use case requires it.


            Use cases:

            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`,
            or `abc`. This is useful for dialing out to non-E164 numbers on your
            SIP trunks.

            - `true` (default): To allow only E164 numbers like `+14155551234`.
            This is standard for PSTN calls.


            If `false`, the `number` is still required to only contain
            alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).


            @default true (E164 check is enabled)
        number:
          type: string
          description: This is the phone number to transfer the call to.
        extension:
          type: string
          nullable: true
          description: >-
            This is the extension to dial after transferring the call to the
            `number`.
        callerId:
          type: string
          nullable: true
          description: >-
            This is the caller ID to use when transferring the call to the
            `number`.


            Usage:

            - If not provided, the caller ID will be the number the call is
            coming from. Example, +14151111111 calls in to and the assistant
            transfers out to +16470000000. +16470000000 will see +14151111111 as
            the caller.

            - To change this behavior, provide a `callerId`.

            - Set to '{{customer.number}}' to always use the customer's number
            as the caller ID.

            - Set to '{{phoneNumber.number}}' to always use the phone number of
            the assistant as the caller ID.

            - Set to any E164 number to always use that number as the caller ID.
            This needs to be a number that is owned or verified by your
            Transport provider like Twilio.


            For Twilio, you can read up more here:
            https://www.twilio.com/docs/voice/twiml/dial#callerid
        transferPlan:
          $ref: '#/components/schemas/TransferPlan'
          nullable: true
          description: >-
            This configures how transfer is executed and the experience of the
            destination party receiving the call. Defaults to `blind-transfer`.


            @default `transferPlan.mode='blind-transfer'`
        description:
          type: string
          nullable: true
          description: >-
            This is the description of the destination, used by the AI to choose
            when and how to transfer the call.
      required:
        - number
    TransferDestinationSipMessage:
      title: TransferDestinationSipMessage
      oneOf:
        - type: string
        - $ref: '#/components/schemas/CustomMessage'
      description: >-
        This is spoken to the customer before connecting them to the
        destination.


        Usage:

        - If this is not provided and transfer tool messages is not provided,
        default is "Transferring the call now".

        - If set to "", nothing is spoken. This is useful when you want to
        silently transfer. This is especially useful when transferring between
        assistants in a squad. In this scenario, you likely also want to set
        `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
        for the destination assistant.


        This accepts a string or a ToolMessageStart class. Latter is useful if
        you want to specify multiple messages for different languages through
        the `contents` field.
    TransferDestinationSip:
      title: TransferDestinationSip
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TransferDestinationSipMessage'
          nullable: true
          description: >-
            This is spoken to the customer before connecting them to the
            destination.


            Usage:

            - If this is not provided and transfer tool messages is not
            provided, default is "Transferring the call now".

            - If set to "", nothing is spoken. This is useful when you want to
            silently transfer. This is especially useful when transferring
            between assistants in a squad. In this scenario, you likely also
            want to set
            `assistant.firstMessageMode=assistant-speaks-first-with-model-generated-message`
            for the destination assistant.


            This accepts a string or a ToolMessageStart class. Latter is useful
            if you want to specify multiple messages for different languages
            through the `contents` field.
        sipUri:
          type: string
          description: This is the SIP URI to transfer the call to.
        transferPlan:
          $ref: '#/components/schemas/TransferPlan'
          nullable: true
          description: >-
            This configures how transfer is executed and the experience of the
            destination party receiving the call. Defaults to `blind-transfer`.


            @default `transferPlan.mode='blind-transfer'`
        sipHeaders:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            These are custom headers to be added to SIP refer during transfer
            call.
        description:
          type: string
          nullable: true
          description: >-
            This is the description of the destination, used by the AI to choose
            when and how to transfer the call.
      required:
        - sipUri
    CreateTransferCallToolDtoMessagesItem:
      title: CreateTransferCallToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateTransferCallToolDtoDestinationsItem:
      title: CreateTransferCallToolDtoDestinationsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - assistant
            - $ref: '#/components/schemas/TransferDestinationAssistant'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - step
            - $ref: '#/components/schemas/TransferDestinationStep'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
    CreateTransferCallToolDto:
      title: CreateTransferCallToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateTransferCallToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/CreateTransferCallToolDtoDestinationsItem'
          nullable: true
          description: >-
            These are the destinations that the call can be transferred to. If
            no destinations are provided, server.url will be used to get the
            transfer destination once the tool is called.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateCustomKnowledgeBaseDto:
      title: CreateCustomKnowledgeBaseDto
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          description: |-
            This is where the knowledge base request will be sent.

            Request Example:

            POST https://{server.url}
            Content-Type: application/json

            {
              "messsage": {
                "type": "knowledge-base-request",
                "messages": [
                  {
                    "role": "user",
                    "content": "Why is ocean blue?"
                  }
                ],
                ...other metadata about the call...
              }
            }

            Response Expected:
            ```
            {
              "message": {
                 "role": "assistant",
                 "content": "The ocean is blue because water absorbs everything but blue.",
              }, // YOU CAN RETURN THE EXACT RESPONSE TO SPEAK
              "documents": [
                {
                  "content": "The ocean is blue primarily because water absorbs colors in the red part of the light spectrum and scatters the blue light, making it more visible to our eyes.",
                  "similarity": 1
                },
                {
                  "content": "Blue light is scattered more by the water molecules than other colors, enhancing the blue appearance of the ocean.",
                  "similarity": .5
                }
              ] // OR, YOU CAN RETURN AN ARRAY OF DOCUMENTS THAT WILL BE SENT TO THE MODEL
            }
            ```
      required:
        - server
    KnowledgeBaseModel:
      title: KnowledgeBaseModel
      type: string
      enum:
        - gemini-2.0-flash-thinking-exp
        - gemini-2.0-pro-exp-02-05
        - gemini-2.0-flash
        - gemini-2.0-flash-lite
        - gemini-2.0-flash-lite-preview-02-05
        - gemini-2.0-flash-exp
        - gemini-2.0-flash-realtime-exp
        - gemini-1.5-flash
        - gemini-1.5-flash-002
        - gemini-1.5-pro
        - gemini-1.5-pro-002
        - gemini-1.0-pro
      description: The model to use for the knowledge base
    KnowledgeBase:
      title: KnowledgeBase
      type: object
      properties:
        name:
          type: string
          description: The name of the knowledge base
        provider:
          type: string
          enum:
            - google
          description: The provider of the knowledge base
        model:
          $ref: '#/components/schemas/KnowledgeBaseModel'
          nullable: true
          description: The model to use for the knowledge base
        description:
          type: string
          description: A description of the knowledge base
        fileIds:
          type: array
          items:
            type: string
          description: The file IDs associated with this knowledge base
      required:
        - name
        - provider
        - description
        - fileIds
    CreateQueryToolDtoMessagesItem:
      title: CreateQueryToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateQueryToolDto:
      title: CreateQueryToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateQueryToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        knowledgeBases:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBase'
          nullable: true
          description: The knowledge bases to query
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateGoogleCalendarCreateEventToolDtoMessagesItem:
      title: CreateGoogleCalendarCreateEventToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateGoogleCalendarCreateEventToolDto:
      title: CreateGoogleCalendarCreateEventToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/CreateGoogleCalendarCreateEventToolDtoMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateGoogleSheetsRowAppendToolDtoMessagesItem:
      title: CreateGoogleSheetsRowAppendToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateGoogleSheetsRowAppendToolDto:
      title: CreateGoogleSheetsRowAppendToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/CreateGoogleSheetsRowAppendToolDtoMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateGoogleCalendarCheckAvailabilityToolDtoMessagesItem:
      title: CreateGoogleCalendarCheckAvailabilityToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateGoogleCalendarCheckAvailabilityToolDto:
      title: CreateGoogleCalendarCheckAvailabilityToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDtoMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateSlackSendMessageToolDtoMessagesItem:
      title: CreateSlackSendMessageToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateSlackSendMessageToolDto:
      title: CreateSlackSendMessageToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateSlackSendMessageToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    AnyscaleModelToolsItem:
      title: AnyscaleModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    AnyscaleModel:
      title: AnyscaleModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/AnyscaleModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          type: string
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    AnthropicThinkingConfig:
      title: AnthropicThinkingConfig
      type: object
      properties:
        type:
          type: string
          enum:
            - enabled
        budgetTokens:
          type: number
          format: double
          description: |-
            The maximum number of tokens to allocate for thinking.
            Must be between 1024 and 100000 tokens.
      required:
        - type
        - budgetTokens
    AnthropicModelToolsItem:
      title: AnthropicModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    AnthropicModelModel:
      title: AnthropicModelModel
      type: string
      enum:
        - claude-3-opus-20240229
        - claude-3-sonnet-20240229
        - claude-3-haiku-20240307
        - claude-3-5-sonnet-20240620
        - claude-3-5-sonnet-20241022
        - claude-3-5-haiku-20241022
        - claude-3-7-sonnet-20250219
      description: The specific Anthropic/Claude model that will be used.
    AnthropicModel:
      title: AnthropicModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/AnthropicModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          $ref: '#/components/schemas/AnthropicModelModel'
          description: The specific Anthropic/Claude model that will be used.
        thinking:
          $ref: '#/components/schemas/AnthropicThinkingConfig'
          nullable: true
          description: |-
            Optional configuration for Anthropic's thinking feature.
            Only applicable for claude-3-7-sonnet-20250219 model.
            If provided, maxTokens must be greater than thinking.budgetTokens.
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    CerebrasModelToolsItem:
      title: CerebrasModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    CerebrasModelModel:
      title: CerebrasModelModel
      type: string
      enum:
        - llama3.1-8b
        - llama-3.3-70b
      description: >-
        This is the name of the model. Ex.
        cognitivecomputations/dolphin-mixtral-8x7b
    CerebrasModel:
      title: CerebrasModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/CerebrasModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          $ref: '#/components/schemas/CerebrasModelModel'
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    CustomLlmModelToolsItem:
      title: CustomLlmModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    CustomLlmModelMetadataSendMode:
      title: CustomLlmModelMetadataSendMode
      type: string
      enum:
        - 'off'
        - variable
        - destructured
      description: >-
        This determines whether metadata is sent in requests to the custom
        provider.


        - `off` will not send any metadata. payload will look like `{ messages
        }`

        - `variable` will send `assistant.metadata` as a variable on the
        payload. payload will look like `{ messages, metadata }`

        - `destructured` will send `assistant.metadata` fields directly on the
        payload. payload will look like `{ messages, ...metadata }`


        Further, `variable` and `destructured` will send `call`, `phoneNumber`,
        and `customer` objects in the payload.


        Default is `variable`.
    CustomLlmModel:
      title: CustomLlmModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/CustomLlmModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        metadataSendMode:
          $ref: '#/components/schemas/CustomLlmModelMetadataSendMode'
          nullable: true
          description: >-
            This determines whether metadata is sent in requests to the custom
            provider.


            - `off` will not send any metadata. payload will look like `{
            messages }`

            - `variable` will send `assistant.metadata` as a variable on the
            payload. payload will look like `{ messages, metadata }`

            - `destructured` will send `assistant.metadata` fields directly on
            the payload. payload will look like `{ messages, ...metadata }`


            Further, `variable` and `destructured` will send `call`,
            `phoneNumber`, and `customer` objects in the payload.


            Default is `variable`.
        url:
          type: string
          description: >-
            These is the URL we'll use for the OpenAI client's `baseURL`. Ex.
            https://openrouter.ai/api/v1
        timeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This sets the timeout for the connection to the custom provider
            without needing to stream any tokens back. Default is 20 seconds.
        model:
          type: string
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - url
        - model
    DeepInfraModelToolsItem:
      title: DeepInfraModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    DeepInfraModel:
      title: DeepInfraModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/DeepInfraModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          type: string
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    DeepSeekModelToolsItem:
      title: DeepSeekModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    DeepSeekModelModel:
      title: DeepSeekModelModel
      type: string
      enum:
        - deepseek-chat
        - deepseek-reasoner
      description: >-
        This is the name of the model. Ex.
        cognitivecomputations/dolphin-mixtral-8x7b
    DeepSeekModel:
      title: DeepSeekModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/DeepSeekModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          $ref: '#/components/schemas/DeepSeekModelModel'
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    GeminiMultimodalLivePrebuiltVoiceConfigVoiceName:
      title: GeminiMultimodalLivePrebuiltVoiceConfigVoiceName
      type: string
      enum:
        - Puck
        - Charon
        - Kore
        - Fenrir
        - Aoede
    GeminiMultimodalLivePrebuiltVoiceConfig:
      title: GeminiMultimodalLivePrebuiltVoiceConfig
      type: object
      properties:
        voiceName:
          $ref: >-
            #/components/schemas/GeminiMultimodalLivePrebuiltVoiceConfigVoiceName
      required:
        - voiceName
    GeminiMultimodalLiveVoiceConfig:
      title: GeminiMultimodalLiveVoiceConfig
      type: object
      properties:
        prebuiltVoiceConfig:
          $ref: '#/components/schemas/GeminiMultimodalLivePrebuiltVoiceConfig'
      required:
        - prebuiltVoiceConfig
    GeminiMultimodalLiveSpeechConfig:
      title: GeminiMultimodalLiveSpeechConfig
      type: object
      properties:
        voiceConfig:
          $ref: '#/components/schemas/GeminiMultimodalLiveVoiceConfig'
      required:
        - voiceConfig
    GoogleRealtimeConfig:
      title: GoogleRealtimeConfig
      type: object
      properties:
        topP:
          type: number
          format: double
          nullable: true
          description: >-
            This is the nucleus sampling parameter that controls the cumulative
            probability of tokens considered during text generation.

            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
        topK:
          type: number
          format: double
          nullable: true
          description: >-
            This is the top-k sampling parameter that limits the number of
            highest probability tokens considered during text generation.

            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
        presencePenalty:
          type: number
          format: double
          nullable: true
          description: >-
            This is the presence penalty parameter that influences the model's
            likelihood to repeat information by penalizing tokens based on their
            presence in the text.

            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
        frequencyPenalty:
          type: number
          format: double
          nullable: true
          description: >-
            This is the frequency penalty parameter that influences the model's
            likelihood to repeat tokens by penalizing them based on their
            frequency in the text.

            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
        speechConfig:
          $ref: '#/components/schemas/GeminiMultimodalLiveSpeechConfig'
          nullable: true
          description: >-
            This is the speech configuration object that defines the voice
            settings to be used for the model's speech output.

            Only applicable with the Gemini Flash 2.0 Multimodal Live API.
    GoogleModelToolsItem:
      title: GoogleModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    GoogleModelModel:
      title: GoogleModelModel
      type: string
      enum:
        - gemini-2.0-flash-thinking-exp
        - gemini-2.0-pro-exp-02-05
        - gemini-2.0-flash
        - gemini-2.0-flash-lite
        - gemini-2.0-flash-lite-preview-02-05
        - gemini-2.0-flash-exp
        - gemini-2.0-flash-realtime-exp
        - gemini-1.5-flash
        - gemini-1.5-flash-002
        - gemini-1.5-pro
        - gemini-1.5-pro-002
        - gemini-1.0-pro
      description: This is the Google model that will be used.
    GoogleModel:
      title: GoogleModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/GoogleModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          $ref: '#/components/schemas/GoogleModelModel'
          description: This is the Google model that will be used.
        realtimeConfig:
          $ref: '#/components/schemas/GoogleRealtimeConfig'
          nullable: true
          description: >-
            This is the session configuration for the Gemini Flash 2.0
            Multimodal Live API.

            Only applicable if the model `gemini-2.0-flash-realtime-exp` is
            selected.
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    GroqModelToolsItem:
      title: GroqModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    GroqModelModel:
      title: GroqModelModel
      type: string
      enum:
        - deepseek-r1-distill-llama-70b
        - llama-3.3-70b-versatile
        - llama-3.1-405b-reasoning
        - llama-3.1-70b-versatile
        - llama-3.1-8b-instant
        - mixtral-8x7b-32768
        - llama3-8b-8192
        - llama3-70b-8192
        - gemma2-9b-it
      description: >-
        This is the name of the model. Ex.
        cognitivecomputations/dolphin-mixtral-8x7b
    GroqModel:
      title: GroqModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/GroqModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          $ref: '#/components/schemas/GroqModelModel'
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    InflectionAiModelToolsItem:
      title: InflectionAiModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    InflectionAiModel:
      title: InflectionAiModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/InflectionAiModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          type: string
          enum:
            - inflection_3_pi
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    OpenAiModelToolsItem:
      title: OpenAiModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    OpenAiModelModel:
      title: OpenAiModelModel
      type: string
      enum:
        - gpt-4.5-preview
        - chatgpt-4o-latest
        - o3-mini
        - o1-preview
        - o1-preview-2024-09-12
        - o1-mini
        - o1-mini-2024-09-12
        - gpt-4o-realtime-preview-2024-10-01
        - gpt-4o-realtime-preview-2024-12-17
        - gpt-4o-mini-realtime-preview-2024-12-17
        - gpt-4o-mini
        - gpt-4o-mini-2024-07-18
        - gpt-4o
        - gpt-4o-2024-05-13
        - gpt-4o-2024-08-06
        - gpt-4o-2024-11-20
        - gpt-4-turbo
        - gpt-4-turbo-2024-04-09
        - gpt-4-turbo-preview
        - gpt-4-0125-preview
        - gpt-4-1106-preview
        - gpt-4
        - gpt-4-0613
        - gpt-3.5-turbo
        - gpt-3.5-turbo-0125
        - gpt-3.5-turbo-1106
        - gpt-3.5-turbo-16k
        - gpt-3.5-turbo-0613
      description: This is the OpenAI model that will be used.
    OpenAiModelFallbackModelsItem:
      title: OpenAiModelFallbackModelsItem
      type: string
      enum:
        - gpt-4.5-preview
        - chatgpt-4o-latest
        - o3-mini
        - o1-preview
        - o1-preview-2024-09-12
        - o1-mini
        - o1-mini-2024-09-12
        - gpt-4o-realtime-preview-2024-10-01
        - gpt-4o-realtime-preview-2024-12-17
        - gpt-4o-mini-realtime-preview-2024-12-17
        - gpt-4o-mini
        - gpt-4o-mini-2024-07-18
        - gpt-4o
        - gpt-4o-2024-05-13
        - gpt-4o-2024-08-06
        - gpt-4o-2024-11-20
        - gpt-4-turbo
        - gpt-4-turbo-2024-04-09
        - gpt-4-turbo-preview
        - gpt-4-0125-preview
        - gpt-4-1106-preview
        - gpt-4
        - gpt-4-0613
        - gpt-3.5-turbo
        - gpt-3.5-turbo-0125
        - gpt-3.5-turbo-1106
        - gpt-3.5-turbo-16k
        - gpt-3.5-turbo-0613
    OpenAiModel:
      title: OpenAiModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          $ref: '#/components/schemas/OpenAiModelModel'
          description: This is the OpenAI model that will be used.
        fallbackModels:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiModelFallbackModelsItem'
          nullable: true
          description: >-
            These are the fallback models that will be used if the primary model
            fails. This shouldn't be specified unless you have a specific reason
            to do so. Vapi will automatically find the fastest fallbacks that
            make sense.
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    OpenRouterModelToolsItem:
      title: OpenRouterModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    OpenRouterModel:
      title: OpenRouterModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/OpenRouterModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          type: string
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    PerplexityAiModelToolsItem:
      title: PerplexityAiModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    PerplexityAiModel:
      title: PerplexityAiModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/PerplexityAiModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          type: string
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    TogetherAiModelToolsItem:
      title: TogetherAiModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    TogetherAiModel:
      title: TogetherAiModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/TogetherAiModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          type: string
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    AiEdgeCondition:
      title: AiEdgeCondition
      type: object
      properties:
        matches:
          type: array
          items:
            type: string
      required:
        - matches
    LogicEdgeCondition:
      title: LogicEdgeCondition
      type: object
      properties:
        liquid:
          type: string
      required:
        - liquid
    FailedEdgeCondition:
      title: FailedEdgeCondition
      type: object
      properties: {}
    EdgeCondition:
      title: EdgeCondition
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ai
            - $ref: '#/components/schemas/AiEdgeCondition'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - logic
            - $ref: '#/components/schemas/LogicEdgeCondition'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - failed
            - $ref: '#/components/schemas/FailedEdgeCondition'
          required:
            - type
    Edge:
      title: Edge
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/EdgeCondition'
          nullable: true
        from:
          type: string
        to:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the edge.
      required:
        - from
        - to
    WorkflowNodesItem:
      title: WorkflowNodesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - say
            - $ref: '#/components/schemas/Say'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - gather
            - $ref: '#/components/schemas/Gather'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - apiRequest
            - $ref: '#/components/schemas/ApiRequest'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - hangup
            - $ref: '#/components/schemas/Hangup'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transfer
            - $ref: '#/components/schemas/Transfer'
          required:
            - type
    WorkflowModel:
      title: WorkflowModel
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/AnthropicModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/AnyscaleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CerebrasModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CustomLlmModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/DeepInfraModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/DeepSeekModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/GroqModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/InflectionAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/OpenRouterModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/PerplexityAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/TogetherAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/XaiModel'
          required:
            - provider
      description: These are the options for the workflow's LLM.
    Workflow:
      title: Workflow
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowNodesItem'
        model:
          $ref: '#/components/schemas/WorkflowModel'
          nullable: true
          description: These are the options for the workflow's LLM.
        id:
          type: string
          example: id
        orgId:
          type: string
          example: orgId
        createdAt:
          type: string
          format: date-time
          example: '2024-01-15T09:30:00Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-01-15T09:30:00Z'
        name:
          type: string
          example: name
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
      required:
        - nodes
        - id
        - orgId
        - createdAt
        - updatedAt
        - name
        - edges
    VapiModelToolsItem:
      title: VapiModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    VapiModel:
      title: VapiModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/VapiModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        workflowId:
          type: string
          nullable: true
          description: >-
            This is the workflow that will be used for the call. To use a
            transient workflow, use `workflow` instead.
        workflow:
          $ref: '#/components/schemas/Workflow'
          nullable: true
          description: >-
            This is the workflow that will be used for the call. To use an
            existing workflow, use `workflowId` instead.
        model:
          type: string
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    XaiModelToolsItem:
      title: XaiModelToolsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - query
            - $ref: '#/components/schemas/CreateQueryToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.availability.check
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarCheckAvailabilityToolDto
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - slack.message.send
            - $ref: '#/components/schemas/CreateSlackSendMessageToolDto'
          required:
            - type
    XaiModelModel:
      title: XaiModelModel
      type: string
      enum:
        - grok-beta
        - grok-2
        - grok-3
      description: >-
        This is the name of the model. Ex.
        cognitivecomputations/dolphin-mixtral-8x7b
    XaiModel:
      title: XaiModel
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: This is the starting state for the conversation.
        tools:
          type: array
          items:
            $ref: '#/components/schemas/XaiModelToolsItem'
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use existing tools, use `toolIds`.


            Both `tools` and `toolIds` can be used together.
        toolIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the tools that the assistant can use during the call. To
            use transient tools, use `tools`.


            Both `tools` and `toolIds` can be used together.
        knowledgeBase:
          $ref: '#/components/schemas/CreateCustomKnowledgeBaseDto'
          nullable: true
          description: These are the options for the knowledge base.
        knowledgeBaseId:
          type: string
          nullable: true
          description: This is the ID of the knowledge base the model will use.
        model:
          $ref: '#/components/schemas/XaiModelModel'
          description: >-
            This is the name of the model. Ex.
            cognitivecomputations/dolphin-mixtral-8x7b
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            This is the temperature that will be used for calls. Default is 0 to
            leverage caching for lower latency.
        maxTokens:
          type: number
          format: double
          nullable: true
          description: >-
            This is the max number of tokens that the assistant will be allowed
            to generate in each turn of the conversation. Default is 250.
        emotionRecognitionEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether we detect user's emotion while they speak
            and send it as an additional info to model.


            Default `false` because the model is usually are good at
            understanding the user's emotion from text.


            @default false
        numFastTurns:
          type: number
          format: double
          nullable: true
          description: >-
            This sets how many turns at the start of the conversation to use a
            smaller, faster model from the same provider before switching to the
            primary model. Example, gpt-3.5-turbo if provider is openai.


            Default is 0.


            @default 0
      required:
        - model
    ExactReplacement:
      title: ExactReplacement
      type: object
      properties:
        key:
          type: string
          description: This is the key to replace.
        value:
          type: string
          description: This is the value that will replace the match.
      required:
        - key
        - value
    RegexOptionType:
      title: RegexOptionType
      type: string
      enum:
        - ignore-case
        - whole-word
        - multi-line
      description: |-
        This is the type of the regex option. Options are:
        - `ignore-case`: Ignores the case of the text being matched. Add
        - `whole-word`: Matches whole words only.
        - `multi-line`: Matches across multiple lines.
    RegexOption:
      title: RegexOption
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RegexOptionType'
          description: |-
            This is the type of the regex option. Options are:
            - `ignore-case`: Ignores the case of the text being matched. Add
            - `whole-word`: Matches whole words only.
            - `multi-line`: Matches across multiple lines.
        enabled:
          type: boolean
          description: |-
            This is whether to enable the option.

            @default false
      required:
        - type
        - enabled
    RegexReplacement:
      title: RegexReplacement
      type: object
      properties:
        regex:
          type: string
          description: >-
            This is the regex pattern to replace.


            Note:

            - This works by using the `string.replace` method in Node.JS. Eg.
            `"hello there".replace(/hello/g, "hi")` will return `"hi there"`.


            Hot tip:

            - In JavaScript, escape `\` when sending the regex pattern. Eg.
            `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send
            `"hello\\sthere"` instead.
        options:
          type: array
          items:
            $ref: '#/components/schemas/RegexOption'
          nullable: true
          description: >-
            These are the options for the regex replacement. Defaults to all
            disabled.


            @default []
        value:
          type: string
          description: This is the value that will replace the match.
      required:
        - regex
        - value
    FormatPlanReplacementsItem:
      title: FormatPlanReplacementsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - exact
            - $ref: '#/components/schemas/ExactReplacement'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - regex
            - $ref: '#/components/schemas/RegexReplacement'
          required:
            - type
    FormatPlanFormattersEnabledItem:
      title: FormatPlanFormattersEnabledItem
      type: string
      enum:
        - markdown
        - asterisk
        - quote
        - dash
        - newline
        - colon
        - acronym
        - dollarAmount
        - email
        - date
        - time
        - distance
        - unit
        - percentage
        - phoneNumber
        - number
    FormatPlan:
      title: FormatPlan
      type: object
      properties:
        enabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the chunk is formatted before being sent to
            the voice provider. This helps with enunciation. This includes phone
            numbers, emails and addresses. Default `true`.


            Usage:

            - To rely on the voice provider's formatting logic, set this to
            `false`.


            If `voice.chunkPlan.enabled` is `false`, this is automatically
            `false` since there's no chunk to format.


            @default true
        numberToDigitsCutoff:
          type: number
          format: double
          nullable: true
          description: >-
            This is the cutoff after which a number is converted to individual
            digits instead of being spoken as words.


            Example:

            - If cutoff 2025, "12345" is converted to "1 2 3 4 5" while "1200"
            is converted to "twelve hundred".


            Usage:

            - If your use case doesn't involve IDs like zip codes, set this to a
            high value.

            - If your use case involves IDs that are shorter than 5 digits, set
            this to a lower value.


            @default 2025
        replacements:
          type: array
          items:
            $ref: '#/components/schemas/FormatPlanReplacementsItem'
          nullable: true
          description: >-
            These are the custom replacements you can make to the chunk before
            it is sent to the voice provider.


            Usage:

            - To replace a specific word or phrase with a different word or
            phrase, use the `ExactReplacement` type. Eg. `{ type: 'exact', key:
            'hello', value: 'hi' }`

            - To replace a word or phrase that matches a pattern, use the
            `RegexReplacement` type. Eg. `{ type: 'regex', regex:
            '\\b[a-zA-Z]{5}\\b', value: 'hi' }`


            @default []
        formattersEnabled:
          type: array
          items:
            $ref: '#/components/schemas/FormatPlanFormattersEnabledItem'
          nullable: true
          description: >-
            List of formatters to apply. If not provided, all default formatters
            will be applied.

            If provided, only the specified formatters will be applied.

            Note: Some essential formatters like angle bracket removal will
            always be applied.

            @default undefined
    ChunkPlan:
      title: ChunkPlan
      type: object
      properties:
        enabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the model output is chunked before being
            sent to the voice provider. Default `true`.


            Usage:

            - To rely on the voice provider's audio generation logic, set this
            to `false`.

            - If seeing issues with quality, set this to `true`.


            If disabled, Vapi-provided audio control tokens like <flush /> will
            not work.


            @default true
        minCharacters:
          type: number
          format: double
          nullable: true
          description: |-
            This is the minimum number of characters in a chunk.

            Usage:
            - To increase quality, set this to a higher value.
            - To decrease latency, set this to a lower value.

            @default 30
        punctuationBoundaries:
          type: array
          items:
            $ref: '#/components/schemas/PunctuationBoundary'
          nullable: true
          description: >-
            These are the punctuations that are considered valid boundaries for
            a chunk to be created.


            Usage:

            - To increase quality, constrain to fewer boundaries.

            - To decrease latency, enable all.


            Default is automatically set to balance the trade-off between
            quality and latency based on the provider.
        formatPlan:
          $ref: '#/components/schemas/FormatPlan'
          nullable: true
          description: >-
            This is the plan for formatting the chunk before it is sent to the
            voice provider.
    FallbackPlanVoicesItem:
      title: FallbackPlanVoicesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/FallbackAzureVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/FallbackCartesiaVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/FallbackHumeVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-voice
            - $ref: '#/components/schemas/FallbackCustomVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/FallbackDeepgramVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/FallbackElevenLabsVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/FallbackVapiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/FallbackLmntVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/FallbackOpenAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/FallbackPlayHtVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/FallbackRimeAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/FallbackSmallestAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/FallbackTavusVoice'
          required:
            - provider
    FallbackPlan:
      title: FallbackPlan
      type: object
      properties:
        voices:
          type: array
          items:
            $ref: '#/components/schemas/FallbackPlanVoicesItem'
          description: >-
            This is the list of voices to fallback to in the event that the
            primary voice provider fails.
      required:
        - voices
    AzureVoiceIdEnum:
      title: AzureVoiceIdEnum
      type: string
      enum:
        - andrew
        - brian
        - emma
    AzureVoiceId:
      title: AzureVoiceId
      oneOf:
        - $ref: '#/components/schemas/AzureVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    AzureVoice:
      title: AzureVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/AzureVoiceId'
          description: This is the provider-specific ID that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    CartesiaExperimentalControlsSpeed:
      title: CartesiaExperimentalControlsSpeed
      type: string
      enum:
        - slowest
        - slow
        - normal
        - fast
        - fastest
    CartesiaExperimentalControlsEmotion:
      title: CartesiaExperimentalControlsEmotion
      type: string
      enum:
        - anger:lowest
        - anger:low
        - anger:high
        - anger:highest
        - positivity:lowest
        - positivity:low
        - positivity:high
        - positivity:highest
        - surprise:lowest
        - surprise:low
        - surprise:high
        - surprise:highest
        - sadness:lowest
        - sadness:low
        - sadness:high
        - sadness:highest
        - curiosity:lowest
        - curiosity:low
        - curiosity:high
        - curiosity:highest
    CartesiaExperimentalControls:
      title: CartesiaExperimentalControls
      type: object
      properties:
        speed:
          $ref: '#/components/schemas/CartesiaExperimentalControlsSpeed'
          nullable: true
        emotion:
          $ref: '#/components/schemas/CartesiaExperimentalControlsEmotion'
          nullable: true
    CartesiaVoiceModel:
      title: CartesiaVoiceModel
      type: string
      enum:
        - sonic-2
        - sonic-english
        - sonic-multilingual
        - sonic-preview
        - sonic
      description: >-
        This is the model that will be used. This is optional and will default
        to the correct model for the voiceId.
    CartesiaVoiceLanguage:
      title: CartesiaVoiceLanguage
      type: string
      enum:
        - en
        - de
        - es
        - fr
        - ja
        - pt
        - zh
        - hi
        - it
        - ko
        - nl
        - pl
        - ru
        - sv
        - tr
      description: >-
        This is the language that will be used. This is optional and will
        default to the correct language for the voiceId.
    CartesiaVoice:
      title: CartesiaVoice
      type: object
      properties:
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        model:
          $ref: '#/components/schemas/CartesiaVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. This is optional and will
            default to the correct model for the voiceId.
        language:
          $ref: '#/components/schemas/CartesiaVoiceLanguage'
          nullable: true
          description: >-
            This is the language that will be used. This is optional and will
            default to the correct language for the voiceId.
        experimentalControls:
          $ref: '#/components/schemas/CartesiaExperimentalControls'
          nullable: true
          description: Experimental controls for Cartesia voice generation
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    CustomVoice:
      title: CustomVoice
      type: object
      properties:
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        server:
          $ref: '#/components/schemas/Server'
          description: >-
            This is where the voice request will be sent.


            Request Example:


            POST https://{server.url}

            Content-Type: application/json


            {
              "message": {
                "type": "voice-request",
                "text": "Hello, world!",
                "sampleRate": 24000,
                ...other metadata about the call...
              }
            }


            Response Expected: 1-channel 16-bit raw PCM audio at the sample rate
            specified in the request. Here is how the response will be piped to
            the transport:

            ```

            response.on('data', (chunk: Buffer) => {
              outputStream.write(chunk);
            });

            ```
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - server
    DeepgramVoiceIdEnum:
      title: DeepgramVoiceIdEnum
      type: string
      enum:
        - asteria
        - luna
        - stella
        - athena
        - hera
        - orion
        - arcas
        - perseus
        - angus
        - orpheus
        - helios
        - zeus
    DeepgramVoiceId:
      title: DeepgramVoiceId
      oneOf:
        - $ref: '#/components/schemas/DeepgramVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    DeepgramVoice:
      title: DeepgramVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/DeepgramVoiceId'
          description: This is the provider-specific ID that will be used.
        mipOptOut:
          type: boolean
          nullable: true
          description: >-
            If set to true, this will add mip_opt_out=true as a query parameter
            of all API requests. See
            https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out


            This will only be used if you are using your own Deepgram API key.


            @default false
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    ElevenLabsVoiceIdEnum:
      title: ElevenLabsVoiceIdEnum
      type: string
      enum:
        - burt
        - marissa
        - andrea
        - sarah
        - phillip
        - steve
        - joseph
        - myra
        - paula
        - ryan
        - drew
        - paul
        - mrb
        - matilda
        - mark
    ElevenLabsVoiceId:
      title: ElevenLabsVoiceId
      oneOf:
        - $ref: '#/components/schemas/ElevenLabsVoiceIdEnum'
        - type: string
      description: >-
        This is the provider-specific ID that will be used. Ensure the Voice is
        present in your 11Labs Voice Library.
    ElevenLabsVoiceModel:
      title: ElevenLabsVoiceModel
      type: string
      enum:
        - eleven_multilingual_v2
        - eleven_turbo_v2
        - eleven_turbo_v2_5
        - eleven_flash_v2
        - eleven_flash_v2_5
        - eleven_monolingual_v1
      description: >-
        This is the model that will be used. Defaults to 'eleven_turbo_v2' if
        not specified.
    ElevenLabsVoice:
      title: ElevenLabsVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/ElevenLabsVoiceId'
          description: >-
            This is the provider-specific ID that will be used. Ensure the Voice
            is present in your 11Labs Voice Library.
        stability:
          type: number
          format: double
          nullable: true
          description: Defines the stability for voice settings.
        similarityBoost:
          type: number
          format: double
          nullable: true
          description: Defines the similarity boost for voice settings.
        style:
          type: number
          format: double
          nullable: true
          description: Defines the style for voice settings.
        useSpeakerBoost:
          type: boolean
          nullable: true
          description: Defines the use speaker boost for voice settings.
        speed:
          type: number
          format: double
          nullable: true
          description: Defines the speed for voice settings.
        optimizeStreamingLatency:
          type: number
          format: double
          nullable: true
          description: >-
            Defines the optimize streaming latency for voice settings. Defaults
            to 3.
        enableSsmlParsing:
          type: boolean
          nullable: true
          description: >-
            This enables the use of
            https://elevenlabs.io/docs/speech-synthesis/prompting#pronunciation.
            Defaults to false to save latency.


            @default false
        model:
          $ref: '#/components/schemas/ElevenLabsVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. Defaults to 'eleven_turbo_v2'
            if not specified.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        language:
          type: string
          nullable: true
          description: >-
            This is the language (ISO 639-1) that is enforced for the model.
            Currently only Turbo v2.5 supports language enforcement. For other
            models, an error will be returned if language code is provided.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    HumeVoice:
      title: HumeVoice
      type: object
      properties:
        model:
          type: string
          enum:
            - octave
          nullable: true
          description: This is the model that will be used.
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        isCustomHumeVoice:
          type: boolean
          nullable: true
          description: >-
            Indicates whether the chosen voice is a preset Hume AI voice or a
            custom voice.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        description:
          type: string
          nullable: true
          description: >-
            Natural language instructions describing how the synthesized speech
            should sound, including but not limited to tone, intonation, pacing,
            and accent (e.g., 'a soft, gentle voice with a strong British
            accent').


            If a Voice is specified in the request, this description serves as
            acting instructions.

            If no Voice is specified, a new voice is generated based on this
            description.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    LMNTVoiceIdEnum:
      title: LMNTVoiceIdEnum
      type: string
      enum:
        - lily
        - daniel
    LMNTVoiceId:
      title: LMNTVoiceId
      oneOf:
        - $ref: '#/components/schemas/LMNTVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    LmntVoice:
      title: LmntVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/LMNTVoiceId'
          description: This is the provider-specific ID that will be used.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    NeuphonicVoiceModel:
      title: NeuphonicVoiceModel
      type: string
      enum:
        - neu_hq
        - neu_fast
      description: >-
        This is the model that will be used. Defaults to 'neu_fast' if not
        specified.
    NeuphonicVoice:
      title: NeuphonicVoice
      type: object
      properties:
        voiceId:
          type: string
          description: This is the provider-specific ID that will be used.
        model:
          $ref: '#/components/schemas/NeuphonicVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. Defaults to 'neu_fast' if not
            specified.
        language:
          type: object
          additionalProperties: true
          description: This is the language (ISO 639-1) that is enforced for the model.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
        - language
    OpenAIVoiceId:
      title: OpenAIVoiceId
      type: string
      enum:
        - alloy
        - echo
        - fable
        - onyx
        - nova
        - shimmer
        - ash
        - ballad
        - coral
        - sage
        - verse
      description: >-
        This is the provider-specific ID that will be used.

        Please note that ash, ballad, coral, sage, and verse may only be used
        with realtime models.
    OpenAiVoiceModel:
      title: OpenAiVoiceModel
      type: string
      enum:
        - tts-1
        - tts-1-hd
        - gpt-4o-mini-tts
      description: This is the model that will be used for text-to-speech.
    OpenAiVoice:
      title: OpenAiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/OpenAIVoiceId'
          description: >-
            This is the provider-specific ID that will be used.

            Please note that ash, ballad, coral, sage, and verse may only be
            used with realtime models.
        model:
          $ref: '#/components/schemas/OpenAiVoiceModel'
          nullable: true
          description: This is the model that will be used for text-to-speech.
        instructions:
          type: string
          nullable: true
          description: >-
            This is a prompt that allows you to control the voice of your
            generated audio.

            Does not work with 'tts-1' or 'tts-1-hd' models.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    PlayHTVoiceIdEnum:
      title: PlayHTVoiceIdEnum
      type: string
      enum:
        - jennifer
        - melissa
        - will
        - chris
        - matt
        - jack
        - ruby
        - davis
        - donna
        - michael
    PlayHTVoiceId:
      title: PlayHTVoiceId
      oneOf:
        - $ref: '#/components/schemas/PlayHTVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    PlayHtVoiceEmotion:
      title: PlayHtVoiceEmotion
      type: string
      enum:
        - female_happy
        - female_sad
        - female_angry
        - female_fearful
        - female_disgust
        - female_surprised
        - male_happy
        - male_sad
        - male_angry
        - male_fearful
        - male_disgust
        - male_surprised
      description: An emotion to be applied to the speech.
    PlayHtVoiceModel:
      title: PlayHtVoiceModel
      type: string
      enum:
        - PlayHT2.0
        - PlayHT2.0-turbo
        - Play3.0-mini
        - PlayDialog
      description: Playht voice model/engine to use.
    PlayHtVoiceLanguage:
      title: PlayHtVoiceLanguage
      type: string
      enum:
        - afrikaans
        - albanian
        - amharic
        - arabic
        - bengali
        - bulgarian
        - catalan
        - croatian
        - czech
        - danish
        - dutch
        - english
        - french
        - galician
        - german
        - greek
        - hebrew
        - hindi
        - hungarian
        - indonesian
        - italian
        - japanese
        - korean
        - malay
        - mandarin
        - polish
        - portuguese
        - russian
        - serbian
        - spanish
        - swedish
        - tagalog
        - thai
        - turkish
        - ukrainian
        - urdu
        - xhosa
      description: The language to use for the speech.
    PlayHtVoice:
      title: PlayHtVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/PlayHTVoiceId'
          description: This is the provider-specific ID that will be used.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            A floating point number between 0, exclusive, and 2, inclusive. If
            equal to null or not provided, the model's default temperature will
            be used. The temperature parameter controls variance. Lower
            temperatures result in more predictable results, higher temperatures
            allow each run to vary more, so the voice may sound less like the
            baseline voice.
        emotion:
          $ref: '#/components/schemas/PlayHtVoiceEmotion'
          nullable: true
          description: An emotion to be applied to the speech.
        voiceGuidance:
          type: number
          format: double
          nullable: true
          description: >-
            A number between 1 and 6. Use lower numbers to reduce how unique
            your chosen voice will be compared to other voices.
        styleGuidance:
          type: number
          format: double
          nullable: true
          description: >-
            A number between 1 and 30. Use lower numbers to to reduce how strong
            your chosen emotion will be. Higher numbers will create a very
            emotional performance.
        textGuidance:
          type: number
          format: double
          nullable: true
          description: >-
            A number between 1 and 2. This number influences how closely the
            generated speech adheres to the input text. Use lower values to
            create more fluid speech, but with a higher chance of deviating from
            the input text. Higher numbers will make the generated speech more
            accurate to the input text, ensuring that the words spoken align
            closely with the provided text.
        model:
          $ref: '#/components/schemas/PlayHtVoiceModel'
          nullable: true
          description: Playht voice model/engine to use.
        language:
          $ref: '#/components/schemas/PlayHtVoiceLanguage'
          nullable: true
          description: The language to use for the speech.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    RimeAIVoiceIdEnum:
      title: RimeAIVoiceIdEnum
      type: string
      enum:
        - abbie
        - allison
        - ally
        - alona
        - amber
        - ana
        - antoine
        - armon
        - brenda
        - brittany
        - carol
        - colin
        - courtney
        - elena
        - elliot
        - eva
        - geoff
        - gerald
        - hank
        - helen
        - hera
        - jen
        - joe
        - joy
        - juan
        - kendra
        - kendrick
        - kenneth
        - kevin
        - kris
        - linda
        - madison
        - marge
        - marina
        - marissa
        - marta
        - maya
        - nicholas
        - nyles
        - phil
        - reba
        - rex
        - rick
        - ritu
        - rob
        - rodney
        - rohan
        - rosco
        - samantha
        - sandy
        - selena
        - seth
        - sharon
        - stan
        - tamra
        - tanya
        - tibur
        - tj
        - tyler
        - viv
        - yadira
        - marsh
        - bayou
        - creek
        - brook
        - flower
        - spore
        - glacier
        - gulch
        - alpine
        - cove
        - lagoon
        - tundra
        - steppe
        - mesa
        - grove
        - rainforest
        - moraine
        - wildflower
        - peak
        - boulder
        - gypsum
        - zest
    RimeAIVoiceId:
      title: RimeAIVoiceId
      oneOf:
        - $ref: '#/components/schemas/RimeAIVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    RimeAiVoiceModel:
      title: RimeAiVoiceModel
      type: string
      enum:
        - v1
        - mist
        - mistv2
      description: >-
        This is the model that will be used. Defaults to 'v1' when not
        specified.
    RimeAiVoice:
      title: RimeAiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/RimeAIVoiceId'
          description: This is the provider-specific ID that will be used.
        model:
          $ref: '#/components/schemas/RimeAiVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. Defaults to 'v1' when not
            specified.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        pauseBetweenBrackets:
          type: boolean
          nullable: true
          description: >-
            This is a flag that controls whether to add slight pauses using
            angle brackets. Example: “Hi. <200> I’d love to have a conversation
            with you.” adds a 200ms pause between the first and second
            sentences.
        phonemizeBetweenBrackets:
          type: boolean
          nullable: true
          description: >-
            This is a flag that controls whether text inside brackets should be
            phonemized (converted to phonetic pronunciation) - Example:
            "{h'El.o} World" will pronounce "Hello" as expected.
        reduceLatency:
          type: boolean
          nullable: true
          description: >-
            This is a flag that controls whether to optimize for reduced latency
            in streaming.
            https://docs.rime.ai/api-reference/endpoint/websockets#param-reduce-latency
        inlineSpeedAlpha:
          type: string
          nullable: true
          description: >-
            This is a string that allows inline speed control using alpha
            notation.
            https://docs.rime.ai/api-reference/endpoint/websockets#param-inline-speed-alpha
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    SmallestAIVoiceIdEnum:
      title: SmallestAIVoiceIdEnum
      type: string
      enum:
        - emily
        - jasmine
        - arman
        - james
        - mithali
        - aravind
        - raj
        - diya
        - raman
        - ananya
        - isha
        - william
        - aarav
        - monika
        - niharika
        - deepika
        - raghav
        - kajal
        - radhika
        - mansi
        - nisha
        - saurabh
        - pooja
        - saina
        - sanya
    SmallestAIVoiceId:
      title: SmallestAIVoiceId
      oneOf:
        - $ref: '#/components/schemas/SmallestAIVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    SmallestAiVoice:
      title: SmallestAiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/SmallestAIVoiceId'
          description: This is the provider-specific ID that will be used.
        model:
          type: string
          enum:
            - lightning
          nullable: true
          description: >-
            Smallest AI voice model to use. Defaults to 'lightning' when not
            specified.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    TavusConversationProperties:
      title: TavusConversationProperties
      type: object
      properties:
        maxCallDuration:
          type: number
          format: double
          nullable: true
          description: >-
            The maximum duration of the call in seconds. The default
            `maxCallDuration` is 3600 seconds (1 hour).

            Once the time limit specified by this parameter has been reached,
            the conversation will automatically shut down.
        participantLeftTimeout:
          type: number
          format: double
          nullable: true
          description: >-
            The duration in seconds after which the call will be automatically
            shut down once the last participant leaves.
        participantAbsentTimeout:
          type: number
          format: double
          nullable: true
          description: >-
            Starting from conversation creation, the duration in seconds after
            which the call will be automatically shut down if no participant
            joins the call.

            Default is 300 seconds (5 minutes).
        enableRecording:
          type: boolean
          nullable: true
          description: If true, the user will be able to record the conversation.
        enableTranscription:
          type: boolean
          nullable: true
          description: >-
            If true, the user will be able to transcribe the conversation.

            You can find more instructions on displaying transcriptions if you
            are using your custom DailyJS components here.

            You need to have an event listener on Daily that listens for
            `app-messages`.
        applyGreenscreen:
          type: boolean
          nullable: true
          description: >-
            If true, the background will be replaced with a greenscreen (RGB
            values: `[0, 255, 155]`).

            You can use WebGL on the frontend to make the greenscreen
            transparent or change its color.
        language:
          type: string
          nullable: true
          description: >-
            The language of the conversation. Please provide the **full language
            name**, not the two-letter code.

            If you are using your own TTS voice, please ensure it supports the
            language you provide.

            If you are using a stock replica or default persona, please note
            that only ElevenLabs and Cartesia supported languages are available.

            You can find a full list of supported languages for Cartesia here,
            for ElevenLabs here, and for PlayHT here.
        recordingS3BucketName:
          type: string
          nullable: true
          description: The name of the S3 bucket where the recording will be stored.
        recordingS3BucketRegion:
          type: string
          nullable: true
          description: The region of the S3 bucket where the recording will be stored.
        awsAssumeRoleArn:
          type: string
          nullable: true
          description: The ARN of the role that will be assumed to access the S3 bucket.
    TavusVoiceVoiceId:
      title: TavusVoiceVoiceId
      oneOf:
        - type: string
          enum:
            - r52da2535a
        - type: string
      description: This is the provider-specific ID that will be used.
    TavusVoice:
      title: TavusVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/TavusVoiceVoiceId'
          description: This is the provider-specific ID that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        personaId:
          type: string
          nullable: true
          description: >-
            This is the unique identifier for the persona that the replica will
            use in the conversation.
        callbackUrl:
          type: string
          nullable: true
          description: >-
            This is the url that will receive webhooks with updates regarding
            the conversation state.
        conversationName:
          type: string
          nullable: true
          description: This is the name for the conversation.
        conversationalContext:
          type: string
          nullable: true
          description: >-
            This is the context that will be appended to any context provided in
            the persona, if one is provided.
        customGreeting:
          type: string
          nullable: true
          description: >-
            This is the custom greeting that the replica will give once a
            participant joines the conversation.
        properties:
          $ref: '#/components/schemas/TavusConversationProperties'
          nullable: true
          description: These are optional properties used to customize the conversation.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    VapiVoiceVoiceId:
      title: VapiVoiceVoiceId
      type: string
      enum:
        - Elliot
        - Rohan
        - Lily
        - Savannah
        - Hana
        - Neha
        - Cole
        - Harry
        - Paige
        - Spencer
      description: The voices provided by Vapi
    VapiVoiceLanguage:
      title: VapiVoiceLanguage
      type: string
      enum:
        - en-US
        - en-GB
        - en-AU
        - en-CA
        - ja
        - zh
        - de
        - hi
        - fr-FR
        - fr-CA
        - ko
        - pt-BR
        - pt-PT
        - it
        - es-ES
        - es-MX
        - id
        - nl
        - tr
        - fil
        - pl
        - sv
        - bg
        - ro
        - ar-SA
        - ar-AE
        - cs
        - el
        - fi
        - hr
        - ms
        - sk
        - da
        - ta
        - uk
        - ru
        - hu
        - 'no'
        - vi
      description: |-
        This is the language code (ISO 639-1) that will be used.

        @default 'en-US'
    VapiVoice:
      title: VapiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/VapiVoiceVoiceId'
          description: The voices provided by Vapi
        speed:
          type: number
          format: double
          nullable: true
          description: |-
            This is the speed multiplier that will be used.

            @default 1
        language:
          $ref: '#/components/schemas/VapiVoiceLanguage'
          nullable: true
          description: |-
            This is the language code (ISO 639-1) that will be used.

            @default 'en-US'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        fallbackPlan:
          $ref: '#/components/schemas/FallbackPlan'
          nullable: true
          description: >-
            This is the plan for voice provider fallbacks in the event that the
            primary voice provider fails.
      required:
        - voiceId
    FallbackAzureVoiceVoiceId:
      title: FallbackAzureVoiceVoiceId
      type: string
      enum:
        - andrew
        - brian
        - emma
    FallbackAzureVoiceId:
      title: FallbackAzureVoiceId
      oneOf:
        - $ref: '#/components/schemas/FallbackAzureVoiceVoiceId'
        - type: string
      description: This is the provider-specific ID that will be used.
    FallbackAzureVoice:
      title: FallbackAzureVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackAzureVoiceId'
          description: This is the provider-specific ID that will be used.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
        oneOf:
          nullable: true
      required:
        - voiceId
    FallbackCartesiaVoiceModel:
      title: FallbackCartesiaVoiceModel
      type: string
      enum:
        - sonic-2
        - sonic-english
        - sonic-multilingual
        - sonic-preview
        - sonic
      description: >-
        This is the model that will be used. This is optional and will default
        to the correct model for the voiceId.
    FallbackCartesiaVoiceLanguage:
      title: FallbackCartesiaVoiceLanguage
      type: string
      enum:
        - en
        - de
        - es
        - fr
        - ja
        - pt
        - zh
        - hi
        - it
        - ko
        - nl
        - pl
        - ru
        - sv
        - tr
      description: >-
        This is the language that will be used. This is optional and will
        default to the correct language for the voiceId.
    FallbackCartesiaVoice:
      title: FallbackCartesiaVoice
      type: object
      properties:
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        model:
          $ref: '#/components/schemas/FallbackCartesiaVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. This is optional and will
            default to the correct model for the voiceId.
        language:
          $ref: '#/components/schemas/FallbackCartesiaVoiceLanguage'
          nullable: true
          description: >-
            This is the language that will be used. This is optional and will
            default to the correct language for the voiceId.
        experimentalControls:
          $ref: '#/components/schemas/CartesiaExperimentalControls'
          nullable: true
          description: Experimental controls for Cartesia voice generation
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackCustomVoice:
      title: FallbackCustomVoice
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          description: >-
            This is where the voice request will be sent.


            Request Example:


            POST https://{server.url}

            Content-Type: application/json


            {
              "message": {
                "type": "voice-request",
                "text": "Hello, world!",
                "sampleRate": 24000,
                ...other metadata about the call...
              }
            }


            Response Expected: 1-channel 16-bit raw PCM audio at the sample rate
            specified in the request. Here is how the response will be piped to
            the transport:

            ```

            response.on('data', (chunk: Buffer) => {
              outputStream.write(chunk);
            });

            ```
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - server
    FallbackDeepgramVoiceIdEnum:
      title: FallbackDeepgramVoiceIdEnum
      type: string
      enum:
        - asteria
        - luna
        - stella
        - athena
        - hera
        - orion
        - arcas
        - perseus
        - angus
        - orpheus
        - helios
        - zeus
    FallbackDeepgramVoiceId:
      title: FallbackDeepgramVoiceId
      oneOf:
        - $ref: '#/components/schemas/FallbackDeepgramVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    FallbackDeepgramVoice:
      title: FallbackDeepgramVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackDeepgramVoiceId'
          description: This is the provider-specific ID that will be used.
        mipOptOut:
          type: boolean
          nullable: true
          description: >-
            If set to true, this will add mip_opt_out=true as a query parameter
            of all API requests. See
            https://developers.deepgram.com/docs/the-deepgram-model-improvement-partnership-program#want-to-opt-out


            This will only be used if you are using your own Deepgram API key.


            @default false
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackElevenLabsVoiceIdEnum:
      title: FallbackElevenLabsVoiceIdEnum
      type: string
      enum:
        - burt
        - marissa
        - andrea
        - sarah
        - phillip
        - steve
        - joseph
        - myra
        - paula
        - ryan
        - drew
        - paul
        - mrb
        - matilda
        - mark
    FallbackElevenLabsVoiceId:
      title: FallbackElevenLabsVoiceId
      oneOf:
        - $ref: '#/components/schemas/FallbackElevenLabsVoiceIdEnum'
        - type: string
      description: >-
        This is the provider-specific ID that will be used. Ensure the Voice is
        present in your 11Labs Voice Library.
    FallbackElevenLabsVoiceModel:
      title: FallbackElevenLabsVoiceModel
      type: string
      enum:
        - eleven_multilingual_v2
        - eleven_turbo_v2
        - eleven_turbo_v2_5
        - eleven_flash_v2
        - eleven_flash_v2_5
        - eleven_monolingual_v1
      description: >-
        This is the model that will be used. Defaults to 'eleven_turbo_v2' if
        not specified.
    FallbackElevenLabsVoice:
      title: FallbackElevenLabsVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackElevenLabsVoiceId'
          description: >-
            This is the provider-specific ID that will be used. Ensure the Voice
            is present in your 11Labs Voice Library.
        stability:
          type: number
          format: double
          nullable: true
          description: Defines the stability for voice settings.
        similarityBoost:
          type: number
          format: double
          nullable: true
          description: Defines the similarity boost for voice settings.
        style:
          type: number
          format: double
          nullable: true
          description: Defines the style for voice settings.
        useSpeakerBoost:
          type: boolean
          nullable: true
          description: Defines the use speaker boost for voice settings.
        speed:
          type: number
          format: double
          nullable: true
          description: Defines the speed for voice settings.
        optimizeStreamingLatency:
          type: number
          format: double
          nullable: true
          description: >-
            Defines the optimize streaming latency for voice settings. Defaults
            to 3.
        enableSsmlParsing:
          type: boolean
          nullable: true
          description: >-
            This enables the use of
            https://elevenlabs.io/docs/speech-synthesis/prompting#pronunciation.
            Defaults to false to save latency.


            @default false
        model:
          $ref: '#/components/schemas/FallbackElevenLabsVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. Defaults to 'eleven_turbo_v2'
            if not specified.
        language:
          type: string
          nullable: true
          description: >-
            This is the language (ISO 639-1) that is enforced for the model.
            Currently only Turbo v2.5 supports language enforcement. For other
            models, an error will be returned if language code is provided.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackHumeVoice:
      title: FallbackHumeVoice
      type: object
      properties:
        model:
          type: string
          enum:
            - octave
          nullable: true
          description: This is the model that will be used.
        voiceId:
          type: string
          description: The ID of the particular voice you want to use.
        isCustomHumeVoice:
          type: boolean
          nullable: true
          description: >-
            Indicates whether the chosen voice is a preset Hume AI voice or a
            custom voice.
        description:
          type: string
          nullable: true
          description: >-
            Natural language instructions describing how the synthesized speech
            should sound, including but not limited to tone, intonation, pacing,
            and accent (e.g., 'a soft, gentle voice with a strong British
            accent').


            If a Voice is specified in the request, this description serves as
            acting instructions.

            If no Voice is specified, a new voice is generated based on this
            description.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackLMNTVoiceIdEnum:
      title: FallbackLMNTVoiceIdEnum
      type: string
      enum:
        - lily
        - daniel
    FallbackLMNTVoiceId:
      title: FallbackLMNTVoiceId
      oneOf:
        - $ref: '#/components/schemas/FallbackLMNTVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    FallbackLmntVoice:
      title: FallbackLmntVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackLMNTVoiceId'
          description: This is the provider-specific ID that will be used.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackNeuphonicVoiceModel:
      title: FallbackNeuphonicVoiceModel
      type: string
      enum:
        - neu_hq
        - neu_fast
      description: >-
        This is the model that will be used. Defaults to 'neu_fast' if not
        specified.
    FallbackNeuphonicVoice:
      title: FallbackNeuphonicVoice
      type: object
      properties:
        provider:
          type: string
          enum:
            - neuphonic
          description: This is the voice provider that will be used.
        voiceId:
          type: string
          description: This is the provider-specific ID that will be used.
        model:
          $ref: '#/components/schemas/FallbackNeuphonicVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. Defaults to 'neu_fast' if not
            specified.
        language:
          type: object
          additionalProperties: true
          description: This is the language (ISO 639-1) that is enforced for the model.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - provider
        - voiceId
        - language
    FallbackOpenAIVoiceId:
      title: FallbackOpenAIVoiceId
      type: string
      enum:
        - alloy
        - echo
        - fable
        - onyx
        - nova
        - shimmer
        - ash
        - ballad
        - coral
        - sage
        - verse
      description: >-
        This is the provider-specific ID that will be used.

        Please note that ash, ballad, coral, sage, and verse may only be used
        with realtime models.
    FallbackOpenAiVoiceModel:
      title: FallbackOpenAiVoiceModel
      type: string
      enum:
        - tts-1
        - tts-1-hd
        - gpt-4o-mini-tts
      description: This is the model that will be used for text-to-speech.
    FallbackOpenAiVoice:
      title: FallbackOpenAiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackOpenAIVoiceId'
          description: >-
            This is the provider-specific ID that will be used.

            Please note that ash, ballad, coral, sage, and verse may only be
            used with realtime models.
        model:
          $ref: '#/components/schemas/FallbackOpenAiVoiceModel'
          nullable: true
          description: This is the model that will be used for text-to-speech.
        instructions:
          type: string
          nullable: true
          description: >-
            This is a prompt that allows you to control the voice of your
            generated audio.

            Does not work with 'tts-1' or 'tts-1-hd' models.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackPlayHTVoiceIdEnum:
      title: FallbackPlayHTVoiceIdEnum
      type: string
      enum:
        - jennifer
        - melissa
        - will
        - chris
        - matt
        - jack
        - ruby
        - davis
        - donna
        - michael
    FallbackPlayHTVoiceId:
      title: FallbackPlayHTVoiceId
      oneOf:
        - $ref: '#/components/schemas/FallbackPlayHTVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    FallbackPlayHtVoiceEmotion:
      title: FallbackPlayHtVoiceEmotion
      type: string
      enum:
        - female_happy
        - female_sad
        - female_angry
        - female_fearful
        - female_disgust
        - female_surprised
        - male_happy
        - male_sad
        - male_angry
        - male_fearful
        - male_disgust
        - male_surprised
      description: An emotion to be applied to the speech.
    FallbackPlayHtVoiceModel:
      title: FallbackPlayHtVoiceModel
      type: string
      enum:
        - PlayHT2.0
        - PlayHT2.0-turbo
        - Play3.0-mini
        - PlayDialog
      description: Playht voice model/engine to use.
    FallbackPlayHtVoiceLanguage:
      title: FallbackPlayHtVoiceLanguage
      type: string
      enum:
        - afrikaans
        - albanian
        - amharic
        - arabic
        - bengali
        - bulgarian
        - catalan
        - croatian
        - czech
        - danish
        - dutch
        - english
        - french
        - galician
        - german
        - greek
        - hebrew
        - hindi
        - hungarian
        - indonesian
        - italian
        - japanese
        - korean
        - malay
        - mandarin
        - polish
        - portuguese
        - russian
        - serbian
        - spanish
        - swedish
        - tagalog
        - thai
        - turkish
        - ukrainian
        - urdu
        - xhosa
      description: The language to use for the speech.
    FallbackPlayHtVoice:
      title: FallbackPlayHtVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackPlayHTVoiceId'
          description: This is the provider-specific ID that will be used.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        temperature:
          type: number
          format: double
          nullable: true
          description: >-
            A floating point number between 0, exclusive, and 2, inclusive. If
            equal to null or not provided, the model's default temperature will
            be used. The temperature parameter controls variance. Lower
            temperatures result in more predictable results, higher temperatures
            allow each run to vary more, so the voice may sound less like the
            baseline voice.
        emotion:
          $ref: '#/components/schemas/FallbackPlayHtVoiceEmotion'
          nullable: true
          description: An emotion to be applied to the speech.
        voiceGuidance:
          type: number
          format: double
          nullable: true
          description: >-
            A number between 1 and 6. Use lower numbers to reduce how unique
            your chosen voice will be compared to other voices.
        styleGuidance:
          type: number
          format: double
          nullable: true
          description: >-
            A number between 1 and 30. Use lower numbers to to reduce how strong
            your chosen emotion will be. Higher numbers will create a very
            emotional performance.
        textGuidance:
          type: number
          format: double
          nullable: true
          description: >-
            A number between 1 and 2. This number influences how closely the
            generated speech adheres to the input text. Use lower values to
            create more fluid speech, but with a higher chance of deviating from
            the input text. Higher numbers will make the generated speech more
            accurate to the input text, ensuring that the words spoken align
            closely with the provided text.
        model:
          $ref: '#/components/schemas/FallbackPlayHtVoiceModel'
          nullable: true
          description: Playht voice model/engine to use.
        language:
          $ref: '#/components/schemas/FallbackPlayHtVoiceLanguage'
          nullable: true
          description: The language to use for the speech.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackRimeAIVoiceIdEnum:
      title: FallbackRimeAIVoiceIdEnum
      type: string
      enum:
        - abbie
        - allison
        - ally
        - alona
        - amber
        - ana
        - antoine
        - armon
        - brenda
        - brittany
        - carol
        - colin
        - courtney
        - elena
        - elliot
        - eva
        - geoff
        - gerald
        - hank
        - helen
        - hera
        - jen
        - joe
        - joy
        - juan
        - kendra
        - kendrick
        - kenneth
        - kevin
        - kris
        - linda
        - madison
        - marge
        - marina
        - marissa
        - marta
        - maya
        - nicholas
        - nyles
        - phil
        - reba
        - rex
        - rick
        - ritu
        - rob
        - rodney
        - rohan
        - rosco
        - samantha
        - sandy
        - selena
        - seth
        - sharon
        - stan
        - tamra
        - tanya
        - tibur
        - tj
        - tyler
        - viv
        - yadira
        - marsh
        - bayou
        - creek
        - brook
        - flower
        - spore
        - glacier
        - gulch
        - alpine
        - cove
        - lagoon
        - tundra
        - steppe
        - mesa
        - grove
        - rainforest
        - moraine
        - wildflower
        - peak
        - boulder
        - gypsum
        - zest
    FallbackRimeAIVoiceId:
      title: FallbackRimeAIVoiceId
      oneOf:
        - $ref: '#/components/schemas/FallbackRimeAIVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    FallbackRimeAiVoiceModel:
      title: FallbackRimeAiVoiceModel
      type: string
      enum:
        - v1
        - mist
        - mistv2
      description: >-
        This is the model that will be used. Defaults to 'v1' when not
        specified.
    FallbackRimeAiVoice:
      title: FallbackRimeAiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackRimeAIVoiceId'
          description: This is the provider-specific ID that will be used.
        model:
          $ref: '#/components/schemas/FallbackRimeAiVoiceModel'
          nullable: true
          description: >-
            This is the model that will be used. Defaults to 'v1' when not
            specified.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        pauseBetweenBrackets:
          type: boolean
          nullable: true
          description: >-
            This is a flag that controls whether to add slight pauses using
            angle brackets. Example: “Hi. <200> I’d love to have a conversation
            with you.” adds a 200ms pause between the first and second
            sentences.
        phonemizeBetweenBrackets:
          type: boolean
          nullable: true
          description: >-
            This is a flag that controls whether text inside brackets should be
            phonemized (converted to phonetic pronunciation) - Example:
            "{h'El.o} World" will pronounce "Hello" as expected.
        reduceLatency:
          type: boolean
          nullable: true
          description: >-
            This is a flag that controls whether to optimize for reduced latency
            in streaming.
            https://docs.rime.ai/api-reference/endpoint/websockets#param-reduce-latency
        inlineSpeedAlpha:
          type: string
          nullable: true
          description: >-
            This is a string that allows inline speed control using alpha
            notation.
            https://docs.rime.ai/api-reference/endpoint/websockets#param-inline-speed-alpha
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackSmallestAIVoiceIdEnum:
      title: FallbackSmallestAIVoiceIdEnum
      type: string
      enum:
        - emily
        - jasmine
        - arman
        - james
        - mithali
        - aravind
        - raj
        - diya
        - raman
        - ananya
        - isha
        - william
        - aarav
        - monika
        - niharika
        - deepika
        - raghav
        - kajal
        - radhika
        - mansi
        - nisha
        - saurabh
        - pooja
        - saina
        - sanya
    FallbackSmallestAIVoiceId:
      title: FallbackSmallestAIVoiceId
      oneOf:
        - $ref: '#/components/schemas/FallbackSmallestAIVoiceIdEnum'
        - type: string
      description: This is the provider-specific ID that will be used.
    FallbackSmallestAiVoice:
      title: FallbackSmallestAiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackSmallestAIVoiceId'
          description: This is the provider-specific ID that will be used.
        model:
          type: string
          enum:
            - lightning
          nullable: true
          description: >-
            Smallest AI voice model to use. Defaults to 'lightning' when not
            specified.
        speed:
          type: number
          format: double
          nullable: true
          description: This is the speed multiplier that will be used.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackTavusVoiceVoiceId:
      title: FallbackTavusVoiceVoiceId
      oneOf:
        - type: string
          enum:
            - r52da2535a
        - type: string
      description: This is the provider-specific ID that will be used.
    FallbackTavusVoice:
      title: FallbackTavusVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackTavusVoiceVoiceId'
          description: This is the provider-specific ID that will be used.
        personaId:
          type: string
          nullable: true
          description: >-
            This is the unique identifier for the persona that the replica will
            use in the conversation.
        callbackUrl:
          type: string
          nullable: true
          description: >-
            This is the url that will receive webhooks with updates regarding
            the conversation state.
        conversationName:
          type: string
          nullable: true
          description: This is the name for the conversation.
        conversationalContext:
          type: string
          nullable: true
          description: >-
            This is the context that will be appended to any context provided in
            the persona, if one is provided.
        customGreeting:
          type: string
          nullable: true
          description: >-
            This is the custom greeting that the replica will give once a
            participant joines the conversation.
        properties:
          $ref: '#/components/schemas/TavusConversationProperties'
          nullable: true
          description: These are optional properties used to customize the conversation.
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    FallbackVapiVoiceVoiceId:
      title: FallbackVapiVoiceVoiceId
      type: string
      enum:
        - Elliot
        - Rohan
        - Lily
        - Savannah
        - Hana
        - Neha
        - Cole
        - Harry
        - Paige
        - Spencer
      description: The voices provided by Vapi
    FallbackVapiVoiceLanguage:
      title: FallbackVapiVoiceLanguage
      type: string
      enum:
        - en-US
        - en-GB
        - en-AU
        - en-CA
        - ja
        - zh
        - de
        - hi
        - fr-FR
        - fr-CA
        - ko
        - pt-BR
        - pt-PT
        - it
        - es-ES
        - es-MX
        - id
        - nl
        - tr
        - fil
        - pl
        - sv
        - bg
        - ro
        - ar-SA
        - ar-AE
        - cs
        - el
        - fi
        - hr
        - ms
        - sk
        - da
        - ta
        - uk
        - ru
        - hu
        - 'no'
        - vi
      description: |-
        This is the language code (ISO 639-1) that will be used.

        @default 'en-US'
    FallbackVapiVoice:
      title: FallbackVapiVoice
      type: object
      properties:
        voiceId:
          $ref: '#/components/schemas/FallbackVapiVoiceVoiceId'
          description: The voices provided by Vapi
        speed:
          type: number
          format: double
          nullable: true
          description: |-
            This is the speed multiplier that will be used.

            @default 1
        language:
          $ref: '#/components/schemas/FallbackVapiVoiceLanguage'
          nullable: true
          description: |-
            This is the language code (ISO 639-1) that will be used.

            @default 'en-US'
        chunkPlan:
          $ref: '#/components/schemas/ChunkPlan'
          nullable: true
          description: >-
            This is the plan for chunking the model output before it is sent to
            the voice provider.
      required:
        - voiceId
    TransportConfigurationTwilioRecordingChannels:
      title: TransportConfigurationTwilioRecordingChannels
      type: string
      enum:
        - mono
        - dual
      description: >-
        The number of channels in the final recording.

        Can be: `mono` or `dual`.

        The default is `mono`.

        `mono` records both legs of the call in a single channel of the
        recording file.

        `dual` records each leg to a separate channel of the recording file.

        The first channel of a dual-channel recording contains the parent call
        and the second channel contains the child call.


        @default 'mono'
    TransportConfigurationTwilio:
      title: TransportConfigurationTwilio
      type: object
      properties:
        provider:
          type: string
          enum:
            - twilio
        timeout:
          type: number
          format: double
          nullable: true
          description: >-
            The integer number of seconds that we should allow the phone to ring
            before assuming there is no answer.

            The default is `60` seconds and the maximum is `600` seconds.

            For some call flows, we will add a 5-second buffer to the timeout
            value you provide.

            For this reason, a timeout value of 10 seconds could result in an
            actual timeout closer to 15 seconds.

            You can set this to a short time, such as `15` seconds, to hang up
            before reaching an answering machine or voicemail.


            @default 60
        record:
          type: boolean
          nullable: true
          description: |-
            Whether to record the call.
            Can be `true` to record the phone call, or `false` to not.
            The default is `false`.

            @default false
        recordingChannels:
          $ref: '#/components/schemas/TransportConfigurationTwilioRecordingChannels'
          nullable: true
          description: >-
            The number of channels in the final recording.

            Can be: `mono` or `dual`.

            The default is `mono`.

            `mono` records both legs of the call in a single channel of the
            recording file.

            `dual` records each leg to a separate channel of the recording file.

            The first channel of a dual-channel recording contains the parent
            call and the second channel contains the child call.


            @default 'mono'
      required:
        - provider
    CreateAnthropicCredentialDto:
      title: CreateAnthropicCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateAnyscaleCredentialDto:
      title: CreateAnyscaleCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateAssemblyAiCredentialDto:
      title: CreateAssemblyAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    AzureBlobStorageBucketPlan:
      title: AzureBlobStorageBucketPlan
      type: object
      properties:
        connectionString:
          type: string
          description: This is the blob storage connection string for the Azure resource.
        containerName:
          type: string
          description: This is the container name for the Azure blob storage.
        path:
          type: string
          nullable: true
          description: >-
            This is the path where call artifacts will be stored.


            Usage:

            - To store call artifacts in a specific folder, set this to the full
            path. Eg. "/folder-name1/folder-name2".

            - To store call artifacts in the root of the bucket, leave this
            blank.


            @default "/"
      required:
        - connectionString
        - containerName
    CreateAzureCredentialDtoService:
      title: CreateAzureCredentialDtoService
      type: string
      enum:
        - speech
        - blob_storage
      description: This is the service being used in Azure.
    CreateAzureCredentialDtoRegion:
      title: CreateAzureCredentialDtoRegion
      type: string
      enum:
        - australia
        - canadaeast
        - canadacentral
        - eastus2
        - eastus
        - france
        - india
        - japaneast
        - japanwest
        - uaenorth
        - northcentralus
        - norway
        - southcentralus
        - swedencentral
        - switzerland
        - uk
        - westus
        - westus3
      description: This is the region of the Azure resource.
    CreateAzureCredentialDto:
      title: CreateAzureCredentialDto
      type: object
      properties:
        service:
          $ref: '#/components/schemas/CreateAzureCredentialDtoService'
          description: This is the service being used in Azure.
        region:
          $ref: '#/components/schemas/CreateAzureCredentialDtoRegion'
          nullable: true
          description: This is the region of the Azure resource.
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        bucketPlan:
          $ref: '#/components/schemas/AzureBlobStorageBucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in Azure Blob Storage.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - service
    CreateAzureOpenAiCredentialDtoRegion:
      title: CreateAzureOpenAiCredentialDtoRegion
      type: string
      enum:
        - australia
        - canadaeast
        - canadacentral
        - eastus2
        - eastus
        - france
        - india
        - japaneast
        - japanwest
        - uaenorth
        - northcentralus
        - norway
        - southcentralus
        - swedencentral
        - switzerland
        - uk
        - westus
        - westus3
    CreateAzureOpenAiCredentialDtoModelsItem:
      title: CreateAzureOpenAiCredentialDtoModelsItem
      type: string
      enum:
        - gpt-4o-2024-11-20
        - gpt-4o-2024-08-06
        - gpt-4o-mini-2024-07-18
        - gpt-4o-2024-05-13
        - gpt-4-turbo-2024-04-09
        - gpt-4-0125-preview
        - gpt-4-1106-preview
        - gpt-4-0613
        - gpt-35-turbo-0125
        - gpt-35-turbo-1106
    CreateAzureOpenAiCredentialDto:
      title: CreateAzureOpenAiCredentialDto
      type: object
      properties:
        region:
          $ref: '#/components/schemas/CreateAzureOpenAiCredentialDtoRegion'
        models:
          type: array
          items:
            $ref: '#/components/schemas/CreateAzureOpenAiCredentialDtoModelsItem'
        openAIKey:
          type: string
          description: This is not returned in the API.
        ocpApimSubscriptionKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        openAIEndpoint:
          type: string
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - region
        - models
        - openAIKey
        - openAIEndpoint
    SipTrunkGatewayOutboundProtocol:
      title: SipTrunkGatewayOutboundProtocol
      type: string
      enum:
        - tls/srtp
        - tcp
        - tls
        - udp
      description: >-
        This is the protocol to use for SIP signaling outbound calls. Default is
        udp.


        @default udp
    SipTrunkGateway:
      title: SipTrunkGateway
      type: object
      properties:
        ip:
          type: string
          description: >-
            This is the address of the gateway. It can be an IPv4 address like
            1.1.1.1 or a fully qualified domain name like
            my-sip-trunk.pstn.twilio.com.
        port:
          type: number
          format: double
          nullable: true
          description: |-
            This is the port number of the gateway. Default is 5060.

            @default 5060
        netmask:
          type: number
          format: double
          nullable: true
          description: |-
            This is the netmask of the gateway. Defaults to 32.

            @default 32
        inboundEnabled:
          type: boolean
          nullable: true
          description: >-
            This is whether inbound calls are allowed from this gateway. Default
            is true.


            @default true
        outboundEnabled:
          type: boolean
          nullable: true
          description: >-
            This is whether outbound calls should be sent to this gateway.
            Default is true.


            Note, if netmask is less than 32, it doesn't affect the outbound IPs
            that are tried. 1 attempt is made to `ip:port`.


            @default true
        outboundProtocol:
          $ref: '#/components/schemas/SipTrunkGatewayOutboundProtocol'
          nullable: true
          description: >-
            This is the protocol to use for SIP signaling outbound calls.
            Default is udp.


            @default udp
        optionsPingEnabled:
          type: boolean
          nullable: true
          description: >-
            This is whether to send options ping to the gateway. This can be
            used to check if the gateway is reachable. Default is false.


            This is useful for high availability setups where you want to check
            if the gateway is reachable before routing calls to it. Note, if no
            gateway for a trunk is reachable, outbound calls will be rejected.


            @default false
      required:
        - ip
    SipTrunkOutboundSipRegisterPlan:
      title: SipTrunkOutboundSipRegisterPlan
      type: object
      properties:
        domain:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        realm:
          type: string
          nullable: true
    SipTrunkOutboundAuthenticationPlan:
      title: SipTrunkOutboundAuthenticationPlan
      type: object
      properties:
        authPassword:
          type: string
          nullable: true
          description: This is not returned in the API.
        authUsername:
          type: string
          nullable: true
        sipRegisterPlan:
          $ref: '#/components/schemas/SipTrunkOutboundSipRegisterPlan'
          nullable: true
          description: >-
            This can be used to configure if SIP register is required by the SIP
            trunk. If not provided, no SIP registration will be attempted.
    SbcConfiguration:
      title: SbcConfiguration
      type: object
      properties: {}
    CreateByoSipTrunkCredentialDto:
      title: CreateByoSipTrunkCredentialDto
      type: object
      properties:
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/SipTrunkGateway'
          description: This is the list of SIP trunk's gateways.
        outboundAuthenticationPlan:
          $ref: '#/components/schemas/SipTrunkOutboundAuthenticationPlan'
          nullable: true
          description: >-
            This can be used to configure the outbound authentication if
            required by the SIP trunk.
        outboundLeadingPlusEnabled:
          type: boolean
          nullable: true
          description: >-
            This ensures the outbound origination attempts have a leading plus.
            Defaults to false to match conventional telecom behavior.


            Usage:

            - Vonage/Twilio requires leading plus for all outbound calls. Set
            this to true.


            @default false
        techPrefix:
          type: string
          nullable: true
          description: >-
            This can be used to configure the tech prefix on outbound calls.
            This is an advanced property.
        sipDiversionHeader:
          type: string
          nullable: true
          description: >-
            This can be used to enable the SIP diversion header for
            authenticating the calling number if the SIP trunk supports it. This
            is an advanced property.
        sbcConfiguration:
          $ref: '#/components/schemas/SbcConfiguration'
          nullable: true
          description: >-
            This is an advanced configuration for enterprise deployments. This
            uses the onprem SBC to trunk into the SIP trunk's `gateways`, rather
            than the managed SBC provided by Vapi.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - gateways
    CreateCartesiaCredentialDto:
      title: CreateCartesiaCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CloudflareR2BucketPlan:
      title: CloudflareR2BucketPlan
      type: object
      properties:
        accessKeyId:
          type: string
          nullable: true
          description: Cloudflare R2 Access key ID.
        secretAccessKey:
          type: string
          nullable: true
          description: Cloudflare R2 access key secret. This is not returned in the API.
        url:
          type: string
          nullable: true
          description: Cloudflare R2 base url.
        name:
          type: string
          description: This is the name of the bucket.
        path:
          type: string
          nullable: true
          description: >-
            This is the path where call artifacts will be stored.


            Usage:

            - To store call artifacts in a specific folder, set this to the full
            path. Eg. "/folder-name1/folder-name2".

            - To store call artifacts in the root of the bucket, leave this
            blank.


            @default "/"
      required:
        - name
    CreateCloudflareCredentialDto:
      title: CreateCloudflareCredentialDto
      type: object
      properties:
        accountId:
          type: string
          nullable: true
          description: Cloudflare Account Id.
        apiKey:
          type: string
          nullable: true
          description: Cloudflare API Key / Token.
        accountEmail:
          type: string
          nullable: true
          description: Cloudflare Account Email.
        bucketPlan:
          $ref: '#/components/schemas/CloudflareR2BucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in R2
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    OAuth2AuthenticationPlan:
      title: OAuth2AuthenticationPlan
      type: object
      properties:
        type:
          type: string
          enum:
            - oauth2
        url:
          type: string
          description: This is the OAuth2 URL.
        clientId:
          type: string
          description: This is the OAuth2 client ID.
        clientSecret:
          type: string
          description: This is the OAuth2 client secret.
        scope:
          type: string
          nullable: true
          description: This is the scope of the OAuth2 token.
      required:
        - type
        - url
        - clientId
        - clientSecret
    CreateCustomLlmCredentialDto:
      title: CreateCustomLlmCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
          nullable: true
          description: >-
            This is the authentication plan. Currently supports OAuth2 RFC 6749.
            To use Bearer authentication, use apiKey
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateDeepgramCredentialDto:
      title: CreateDeepgramCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        apiUrl:
          type: string
          nullable: true
          description: >-
            This can be used to point to an onprem Deepgram instance. Defaults
            to api.deepgram.com.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateDeepInfraCredentialDto:
      title: CreateDeepInfraCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateDeepSeekCredentialDto:
      title: CreateDeepSeekCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateElevenLabsCredentialDto:
      title: CreateElevenLabsCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    GcpKey:
      title: GcpKey
      type: object
      properties:
        type:
          type: string
          description: This is the type of the key. Most likely, this is "service_account".
        projectId:
          type: string
          description: This is the ID of the Google Cloud project associated with this key.
        privateKeyId:
          type: string
          description: This is the unique identifier for the private key.
        privateKey:
          type: string
          description: |-
            This is the private key in PEM format.

            Note: This is not returned in the API.
        clientEmail:
          type: string
          description: This is the email address associated with the service account.
        clientId:
          type: string
          description: This is the unique identifier for the client.
        authUri:
          type: string
          description: This is the URI for the auth provider's authorization endpoint.
        tokenUri:
          type: string
          description: This is the URI for the auth provider's token endpoint.
        authProviderX509CertUrl:
          type: string
          description: >-
            This is the URL of the public x509 certificate for the auth
            provider.
        clientX509CertUrl:
          type: string
          description: This is the URL of the public x509 certificate for the client.
        universeDomain:
          type: string
          description: >-
            This is the domain associated with the universe this service account
            belongs to.
      required:
        - type
        - projectId
        - privateKeyId
        - privateKey
        - clientEmail
        - clientId
        - authUri
        - tokenUri
        - authProviderX509CertUrl
        - clientX509CertUrl
        - universeDomain
    BucketPlan:
      title: BucketPlan
      type: object
      properties:
        name:
          type: string
          description: This is the name of the bucket.
        region:
          type: string
          nullable: true
          description: >-
            This is the region of the bucket.


            Usage:

            - If `credential.type` is `aws`, then this is required.

            - If `credential.type` is `gcp`, then this is optional since GCP
            allows buckets to be accessed without a region but region is
            required for data residency requirements. Read here:
            https://cloud.google.com/storage/docs/request-endpoints
        path:
          type: string
          nullable: true
          description: >-
            This is the path where call artifacts will be stored.


            Usage:

            - To store call artifacts in a specific folder, set this to the full
            path. Eg. "/folder-name1/folder-name2".

            - To store call artifacts in the root of the bucket, leave this
            blank.


            @default "/"
        hmacAccessKey:
          type: string
          nullable: true
          description: >-
            This is the HMAC access key offered by GCP for interoperability with
            S3 clients. Here is the guide on how to create:
            https://cloud.google.com/storage/docs/authentication/managing-hmackeys#console


            Usage:

            - If `credential.type` is `gcp`, then this is required.

            - If `credential.type` is `aws`, then this is not required since
            credential.awsAccessKeyId is used instead.
        hmacSecret:
          type: string
          nullable: true
          description: >-
            This is the secret for the HMAC access key. Here is the guide on how
            to create:
            https://cloud.google.com/storage/docs/authentication/managing-hmackeys#console


            Usage:

            - If `credential.type` is `gcp`, then this is required.

            - If `credential.type` is `aws`, then this is not required since
            credential.awsSecretAccessKey is used instead.


            Note: This is not returned in the API.
      required:
        - name
    CreateGcpCredentialDto:
      title: CreateGcpCredentialDto
      type: object
      properties:
        gcpKey:
          $ref: '#/components/schemas/GcpKey'
          description: >-
            This is the GCP key. This is the JSON that can be generated in the
            Google Cloud Console at
            https://console.cloud.google.com/iam-admin/serviceaccounts/details/<service-account-id>/keys.


            The schema is identical to the JSON that GCP outputs.
        bucketPlan:
          $ref: '#/components/schemas/BucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in GCP.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - gcpKey
    CreateGladiaCredentialDto:
      title: CreateGladiaCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateGoHighLevelCredentialDto:
      title: CreateGoHighLevelCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateGroqCredentialDto:
      title: CreateGroqCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateLangfuseCredentialDto:
      title: CreateLangfuseCredentialDto
      type: object
      properties:
        publicKey:
          type: string
          description: 'The public key for Langfuse project. Eg: pk-lf-...'
        apiKey:
          type: string
          description: >-
            The secret key for Langfuse project. Eg: sk-lf-... .This is not
            returned in the API.
        apiUrl:
          type: string
          description: 'The host URL for Langfuse project. Eg: https://cloud.langfuse.com'
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - publicKey
        - apiKey
        - apiUrl
    CreateLmntCredentialDto:
      title: CreateLmntCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateMakeCredentialDto:
      title: CreateMakeCredentialDto
      type: object
      properties:
        teamId:
          type: string
          description: Team ID
        region:
          type: string
          description: 'Region of your application. For example: eu1, eu2, us1, us2'
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - teamId
        - region
        - apiKey
    CreateOpenAiCredentialDto:
      title: CreateOpenAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateOpenRouterCredentialDto:
      title: CreateOpenRouterCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreatePerplexityAiCredentialDto:
      title: CreatePerplexityAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreatePlayHtCredentialDto:
      title: CreatePlayHtCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        userId:
          type: string
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
        - userId
    CreateRimeAiCredentialDto:
      title: CreateRimeAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateRunpodCredentialDto:
      title: CreateRunpodCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateS3CredentialDto:
      title: CreateS3CredentialDto
      type: object
      properties:
        awsAccessKeyId:
          type: string
          description: AWS access key ID.
        awsSecretAccessKey:
          type: string
          description: AWS access key secret. This is not returned in the API.
        region:
          type: string
          description: AWS region in which the S3 bucket is located.
        s3BucketName:
          type: string
          description: AWS S3 bucket name.
        s3PathPrefix:
          type: string
          description: The path prefix for the uploaded recording. Ex. "recordings/"
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - awsAccessKeyId
        - awsSecretAccessKey
        - region
        - s3BucketName
        - s3PathPrefix
    SupabaseBucketPlanRegion:
      title: SupabaseBucketPlanRegion
      type: string
      enum:
        - us-west-1
        - us-east-1
        - us-east-2
        - ca-central-1
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - eu-central-1
        - eu-central-2
        - eu-north-1
        - ap-south-1
        - ap-southeast-1
        - ap-northeast-1
        - ap-northeast-2
        - ap-southeast-2
        - sa-east-1
      description: >-
        This is the S3 Region. It should look like us-east-1

        It should be one of the supabase regions defined in the SUPABASE_REGION
        enum

        Check https://supabase.com/docs/guides/platform/regions for up to date
        regions
    SupabaseBucketPlan:
      title: SupabaseBucketPlan
      type: object
      properties:
        region:
          $ref: '#/components/schemas/SupabaseBucketPlanRegion'
          description: >-
            This is the S3 Region. It should look like us-east-1

            It should be one of the supabase regions defined in the
            SUPABASE_REGION enum

            Check https://supabase.com/docs/guides/platform/regions for up to
            date regions
        url:
          type: string
          description: |-
            This is the S3 compatible URL for Supabase S3
            This should look like https://<project-ID>.supabase.co/storage/v1/s3
        accessKeyId:
          type: string
          description: |-
            This is the Supabase S3 Access Key ID.
            The user creates this in the Supabase project Storage settings
        secretAccessKey:
          type: string
          description: >-
            This is the Supabase S3 Secret Access Key.

            The user creates this in the Supabase project Storage settings along
            with the access key id
        name:
          type: string
          description: >-
            This is the Supabase S3 Bucket Name.

            The user must create this in Supabase under Storage > Buckets

            A bucket that does not exist will not be checked now, but file
            uploads will fail
        path:
          type: string
          nullable: true
          description: >-
            This is the Supabase S3 Bucket Folder Path.

            The user can create this in Supabase under Storage > Buckets

            A path that does not exist will not be checked now, but file uploads
            will fail

            A Path is like a folder in the bucket

            Eg. If the bucket is called "my-bucket" and the path is "my-folder",
            the full path is "my-bucket/my-folder"
      required:
        - region
        - url
        - accessKeyId
        - secretAccessKey
        - name
    CreateSupabaseCredentialDto:
      title: CreateSupabaseCredentialDto
      type: object
      properties:
        bucketPlan:
          $ref: '#/components/schemas/SupabaseBucketPlan'
          nullable: true
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    CreateSmallestAiCredentialDto:
      title: CreateSmallestAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateTavusCredentialDto:
      title: CreateTavusCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateTogetherAiCredentialDto:
      title: CreateTogetherAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateTwilioCredentialDto:
      title: CreateTwilioCredentialDto
      type: object
      properties:
        authToken:
          type: string
          description: This is not returned in the API.
        accountSid:
          type: string
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - authToken
        - accountSid
    CreateVonageCredentialDto:
      title: CreateVonageCredentialDto
      type: object
      properties:
        apiSecret:
          type: string
          description: This is not returned in the API.
        apiKey:
          type: string
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiSecret
        - apiKey
    CreateWebhookCredentialDto:
      title: CreateWebhookCredentialDto
      type: object
      properties:
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
          description: This is the authentication plan. Currently supports OAuth2 RFC 6749.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - authenticationPlan
    CreateXAiCredentialDto:
      title: CreateXAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateGoogleCalendarOAuth2ClientCredentialDto:
      title: CreateGoogleCalendarOAuth2ClientCredentialDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    CreateGoogleCalendarOAuth2AuthorizationCredentialDto:
      title: CreateGoogleCalendarOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - authorizationId
    CreateGoogleSheetsOAuth2AuthorizationCredentialDto:
      title: CreateGoogleSheetsOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - authorizationId
    CreateSlackOAuth2AuthorizationCredentialDto:
      title: CreateSlackOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - authorizationId
    TransferAssistantHookActionDestination:
      title: TransferAssistantHookActionDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the destination details for the transfer - can be a phone number
        or SIP URI
    TransferAssistantHookAction:
      title: TransferAssistantHookAction
      type: object
      properties:
        type:
          type: string
          enum:
            - transfer
          description: This is the type of action - must be "transfer"
        destination:
          $ref: '#/components/schemas/TransferAssistantHookActionDestination'
          nullable: true
          description: >-
            This is the destination details for the transfer - can be a phone
            number or SIP URI
      required:
        - type
    GoogleVoicemailDetectionPlan:
      title: GoogleVoicemailDetectionPlan
      type: object
      properties:
        voicemailExpectedDurationSeconds:
          type: number
          format: double
          description: >-
            This is how long should we listen in order to determine if we were
            sent to voicemail or not?


            @default 15
      required:
        - voicemailExpectedDurationSeconds
    OpenAiVoicemailDetectionPlan:
      title: OpenAiVoicemailDetectionPlan
      type: object
      properties:
        voicemailExpectedDurationSeconds:
          type: number
          format: double
          description: >-
            This is how long should we listen in order to determine if we were
            sent to voicemail or not?


            @default 15
      required:
        - voicemailExpectedDurationSeconds
    TwilioVoicemailDetectionPlanVoicemailDetectionTypesItem:
      title: TwilioVoicemailDetectionPlanVoicemailDetectionTypesItem
      type: string
      enum:
        - machine_start
        - human
        - fax
        - unknown
        - machine_end_beep
        - machine_end_silence
        - machine_end_other
    TwilioVoicemailDetectionPlan:
      title: TwilioVoicemailDetectionPlan
      type: object
      properties:
        voicemailDetectionTypes:
          type: array
          items:
            $ref: >-
              #/components/schemas/TwilioVoicemailDetectionPlanVoicemailDetectionTypesItem
          nullable: true
          description: >-
            These are the AMD messages from Twilio that are considered as
            voicemail. Default is ['machine_end_beep', 'machine_end_silence'].


            @default {Array} ['machine_end_beep', 'machine_end_silence']
        enabled:
          type: boolean
          nullable: true
          description: >-
            This sets whether the assistant should detect voicemail. Defaults to
            true.


            @default true
        machineDetectionTimeout:
          type: number
          format: double
          nullable: true
          description: >-
            The number of seconds that Twilio should attempt to perform
            answering machine detection before timing out and returning
            AnsweredBy as unknown. Default is 30 seconds.


            Increasing this value will provide the engine more time to make a
            determination. This can be useful when DetectMessageEnd is provided
            in the MachineDetection parameter and there is an expectation of
            long answering machine greetings that can exceed 30 seconds.


            Decreasing this value will reduce the amount of time the engine has
            to make a determination. This can be particularly useful when the
            Enable option is provided in the MachineDetection parameter and you
            want to limit the time for initial detection.


            Check the [Twilio
            docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters)
            for more info.


            @default 30
        machineDetectionSpeechThreshold:
          type: number
          format: double
          nullable: true
          description: >-
            The number of milliseconds that is used as the measuring stick for
            the length of the speech activity. Durations lower than this value
            will be interpreted as a human, longer as a machine. Default is 2400
            milliseconds.


            Increasing this value will reduce the chance of a False Machine
            (detected machine, actually human) for a long human greeting (e.g.,
            a business greeting) but increase the time it takes to detect a
            machine.


            Decreasing this value will reduce the chances of a False Human
            (detected human, actually machine) for short voicemail greetings.
            The value of this parameter may need to be reduced by more than
            1000ms to detect very short voicemail greetings. A reduction of that
            significance can result in increased False Machine detections.
            Adjusting the MachineDetectionSpeechEndThreshold is likely the
            better approach for short voicemails. Decreasing
            MachineDetectionSpeechThreshold will also reduce the time it takes
            to detect a machine.


            Check the [Twilio
            docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters)
            for more info.


            @default 2400
        machineDetectionSpeechEndThreshold:
          type: number
          format: double
          nullable: true
          description: >-
            The number of milliseconds of silence after speech activity at which
            point the speech activity is considered complete. Default is 1200
            milliseconds.


            Increasing this value will typically be used to better address the
            short voicemail greeting scenarios. For short voicemails, there is
            typically 1000-2000ms of audio followed by 1200-2400ms of silence
            and then additional audio before the beep. Increasing the
            MachineDetectionSpeechEndThreshold to ~2500ms will treat the
            1200-2400ms of silence as a gap in the greeting but not the end of
            the greeting and will result in a machine detection. The downsides
            of such a change include:

            - Increasing the delay for human detection by the amount you
            increase this parameter, e.g., a change of 1200ms to 2500ms
            increases human detection delay by 1300ms.

            - Cases where a human has two utterances separated by a period of
            silence (e.g. a "Hello", then 2000ms of silence, and another
            "Hello") may be interpreted as a machine.


            Decreasing this value will result in faster human detection. The
            consequence is that it can lead to increased False Human (detected
            human, actually machine) detections because a silence gap in a
            voicemail greeting (not necessarily just in short voicemail
            scenarios) can be incorrectly interpreted as the end of speech.


            Check the [Twilio
            docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters)
            for more info.


            @default 1200
        machineDetectionSilenceTimeout:
          type: number
          format: double
          nullable: true
          description: >-
            The number of milliseconds of initial silence after which an unknown
            AnsweredBy result will be returned. Default is 5000 milliseconds.


            Increasing this value will result in waiting for a longer period of
            initial silence before returning an 'unknown' AMD result.


            Decreasing this value will result in waiting for a shorter period of
            initial silence before returning an 'unknown' AMD result.


            Check the [Twilio
            docs](https://www.twilio.com/docs/voice/answering-machine-detection#optional-api-tuning-parameters)
            for more info.


            @default 5000
    CompliancePlan:
      title: CompliancePlan
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          nullable: true
          description: >-
            When this is enabled, no logs, recordings, or transcriptions will be
            stored.

            At the end of the call, you will still receive an end-of-call-report
            message to store on your server. Defaults to false.
        pciEnabled:
          type: boolean
          nullable: true
          description: >-
            When this is enabled, the user will be restricted to use
            PCI-compliant providers, and no logs or transcripts are stored.

            At the end of the call, you will receive an end-of-call-report
            message to store on your server. Defaults to false.
    StructuredDataPlan:
      title: StructuredDataPlan
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            additionalProperties: true
          nullable: true
          description: >-
            These are the messages used to generate the structured data.


            @default: ```

            [
              {
                "role": "system",
                "content": "You are an expert data extractor. You will be given a transcript of a call. Extract structured data per the JSON Schema. DO NOT return anything except the structured data.\n\nJson Schema:\\n{{schema}}\n\nOnly respond with the JSON."
              },
              {
                "role": "user",
                "content": "Here is the transcript:\n\n{{transcript}}\n\n"
              }
            ]```


            You can customize by providing any messages you want.


            Here are the template variables available:

            - {{transcript}}: the transcript of the call from
            `call.artifact.transcript`- {{systemPrompt}}: the system prompt of
            the call from `assistant.model.messages[type=system].content`-
            {{schema}}: the schema of the structured data from
            `structuredDataPlan.schema`
        enabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether structured data is generated and stored in
            `call.analysis.structuredData`. Defaults to false.


            Usage:

            - If you want to extract structured data, set this to true and
            provide a `schema`.


            @default false
        schema:
          $ref: '#/components/schemas/JsonSchema'
          nullable: true
          description: >-
            This is the schema of the structured data. The output is stored in
            `call.analysis.structuredData`.


            Complete guide on JSON Schema can be found
            [here](https://ajv.js.org/json-schema.html#json-data-type).
        timeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is how long the request is tried before giving up. When request
            times out, `call.analysis.structuredData` will be empty.


            Usage:

            - To guarantee the structured data is generated, set this value
            high. Note, this will delay the end of call report in cases where
            model is slow to respond.


            @default 5 seconds
    StructuredDataMultiPlan:
      title: StructuredDataMultiPlan
      type: object
      properties:
        key:
          type: string
          description: This is the key of the structured data plan in the catalog.
        plan:
          $ref: '#/components/schemas/StructuredDataPlan'
          description: This is an individual structured data plan in the catalog.
      required:
        - key
        - plan
    SuccessEvaluationPlanRubric:
      title: SuccessEvaluationPlanRubric
      type: string
      enum:
        - NumericScale
        - DescriptiveScale
        - Checklist
        - Matrix
        - PercentageScale
        - LikertScale
        - AutomaticRubric
        - PassFail
      description: >-
        This enforces the rubric of the evaluation. The output is stored in
        `call.analysis.successEvaluation`.


        Options include:

        - 'NumericScale': A scale of 1 to 10.

        - 'DescriptiveScale': A scale of Excellent, Good, Fair, Poor.

        - 'Checklist': A checklist of criteria and their status.

        - 'Matrix': A grid that evaluates multiple criteria across different
        performance levels.

        - 'PercentageScale': A scale of 0% to 100%.

        - 'LikertScale': A scale of Strongly Agree, Agree, Neutral, Disagree,
        Strongly Disagree.

        - 'AutomaticRubric': Automatically break down evaluation into several
        criteria, each with its own score.

        - 'PassFail': A simple 'true' if call passed, 'false' if not.


        Default is 'PassFail'.
    SuccessEvaluationPlan:
      title: SuccessEvaluationPlan
      type: object
      properties:
        rubric:
          $ref: '#/components/schemas/SuccessEvaluationPlanRubric'
          nullable: true
          description: >-
            This enforces the rubric of the evaluation. The output is stored in
            `call.analysis.successEvaluation`.


            Options include:

            - 'NumericScale': A scale of 1 to 10.

            - 'DescriptiveScale': A scale of Excellent, Good, Fair, Poor.

            - 'Checklist': A checklist of criteria and their status.

            - 'Matrix': A grid that evaluates multiple criteria across different
            performance levels.

            - 'PercentageScale': A scale of 0% to 100%.

            - 'LikertScale': A scale of Strongly Agree, Agree, Neutral,
            Disagree, Strongly Disagree.

            - 'AutomaticRubric': Automatically break down evaluation into
            several criteria, each with its own score.

            - 'PassFail': A simple 'true' if call passed, 'false' if not.


            Default is 'PassFail'.
        messages:
          type: array
          items:
            type: object
            additionalProperties: true
          nullable: true
          description: >-
            These are the messages used to generate the success evaluation.


            @default: ```

            [
              {
                "role": "system",
                "content": "You are an expert call evaluator. You will be given a transcript of a call and the system prompt of the AI participant. Determine if the call was successful based on the objectives inferred from the system prompt. DO NOT return anything except the result.\n\nRubric:\\n{{rubric}}\n\nOnly respond with the result."
              },
              {
                "role": "user",
                "content": "Here is the transcript:\n\n{{transcript}}\n\n"
              },
              {
                "role": "user",
                "content": "Here was the system prompt of the call:\n\n{{systemPrompt}}\n\n"
              }
            ]```


            You can customize by providing any messages you want.


            Here are the template variables available:

            - {{transcript}}: the transcript of the call from
            `call.artifact.transcript`- {{systemPrompt}}: the system prompt of
            the call from `assistant.model.messages[type=system].content`-
            {{rubric}}: the rubric of the success evaluation from
            `successEvaluationPlan.rubric`
        enabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether a success evaluation is generated and stored
            in `call.analysis.successEvaluation`. Defaults to true.


            Usage:

            - If you want to disable the success evaluation, set this to false.


            @default true
        timeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is how long the request is tried before giving up. When request
            times out, `call.analysis.successEvaluation` will be empty.


            Usage:

            - To guarantee the success evaluation is generated, set this value
            high. Note, this will delay the end of call report in cases where
            model is slow to respond.


            @default 5 seconds
    AnalysisPlan:
      title: AnalysisPlan
      type: object
      properties:
        summaryPlan:
          $ref: '#/components/schemas/SummaryPlan'
          nullable: true
          description: >-
            This is the plan for generating the summary of the call. This
            outputs to `call.analysis.summary`.
        structuredDataPlan:
          $ref: '#/components/schemas/StructuredDataPlan'
          nullable: true
          description: >-
            This is the plan for generating the structured data from the call.
            This outputs to `call.analysis.structuredData`.
        structuredDataMultiPlan:
          type: array
          items:
            $ref: '#/components/schemas/StructuredDataMultiPlan'
          nullable: true
          description: >-
            This is an array of structured data plan catalogs. Each entry
            includes a `key` and a `plan` for generating the structured data
            from the call. This outputs to `call.analysis.structuredDataMulti`.
        successEvaluationPlan:
          $ref: '#/components/schemas/SuccessEvaluationPlan'
          nullable: true
          description: >-
            This is the plan for generating the success evaluation of the call.
            This outputs to `call.analysis.successEvaluation`.
    MessagePlan:
      title: MessagePlan
      type: object
      properties:
        idleMessages:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This are the messages that the assistant will speak when the user
            hasn't responded for `idleTimeoutSeconds`. Each time the timeout is
            triggered, a random message will be chosen from this array.


            Usage:

            - If user gets distracted and doesn't respond for a while, this can
            be used to grab their attention.

            - If the transcriber doesn't pick up what the user said, this can be
            used to ask the user to repeat themselves. (From the perspective of
            the assistant, the conversation is idle since it didn't "hear" any
            user messages.)


            @default null (no idle message is spoken)
        idleMessageMaxSpokenCount:
          type: number
          format: double
          nullable: true
          description: >-
            This determines the maximum number of times `idleMessages` can be
            spoken during the call.


            @default 3
        idleTimeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timeout in seconds before a message from `idleMessages`
            is spoken. The clock starts when the assistant finishes speaking and
            remains active until the user speaks.


            @default 10
        silenceTimeoutMessage:
          type: string
          nullable: true
          description: >-
            This is the message that the assistant will say if the call ends due
            to silence.


            If unspecified, it will hang up without saying anything.
    AssistantCustomEndpointingRule:
      title: AssistantCustomEndpointingRule
      type: object
      properties:
        regex:
          type: string
          description: >-
            This is the regex pattern to match.


            Note:

            - This works by using the `RegExp.test` method in Node.JS. Eg.
            `/hello/.test("hello there")` will return `true`.


            Hot tip:

            - In JavaScript, escape `\` when sending the regex pattern. Eg.
            `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send
            `"hello\\sthere"` instead.

            - `RegExp.test` does substring matching, so `/cat/.test("I love
            cats")` will return `true`. To do full string matching, send
            "^cat$".
        regexOptions:
          type: array
          items:
            $ref: '#/components/schemas/RegexOption'
          nullable: true
          description: |-
            These are the options for the regex match. Defaults to all disabled.

            @default []
        timeoutSeconds:
          type: number
          format: double
          description: This is the endpointing timeout in seconds, if the rule is matched.
      required:
        - regex
        - timeoutSeconds
    CustomerCustomEndpointingRule:
      title: CustomerCustomEndpointingRule
      type: object
      properties:
        regex:
          type: string
          description: >-
            This is the regex pattern to match.


            Note:

            - This works by using the `RegExp.test` method in Node.JS. Eg.
            `/hello/.test("hello there")` will return `true`.


            Hot tip:

            - In JavaScript, escape `\` when sending the regex pattern. Eg.
            `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send
            `"hello\\sthere"` instead.

            - `RegExp.test` does substring matching, so `/cat/.test("I love
            cats")` will return `true`. To do full string matching, send
            "^cat$".
        regexOptions:
          type: array
          items:
            $ref: '#/components/schemas/RegexOption'
          nullable: true
          description: |-
            These are the options for the regex match. Defaults to all disabled.

            @default []
        timeoutSeconds:
          type: number
          format: double
          description: This is the endpointing timeout in seconds, if the rule is matched.
      required:
        - regex
        - timeoutSeconds
    BothCustomEndpointingRule:
      title: BothCustomEndpointingRule
      type: object
      properties:
        assistantRegex:
          type: string
          description: >-
            This is the regex pattern to match the assistant's message.


            Note:

            - This works by using the `RegExp.test` method in Node.JS. Eg.
            `/hello/.test("hello there")` will return `true`.


            Hot tip:

            - In JavaScript, escape `\` when sending the regex pattern. Eg.
            `"hello\sthere"` will be sent over the wire as `"hellosthere"`. Send
            `"hello\\sthere"` instead.

            - `RegExp.test` does substring matching, so `/cat/.test("I love
            cats")` will return `true`. To do full string matching, send
            "^cat$".
        assistantRegexOptions:
          type: array
          items:
            $ref: '#/components/schemas/RegexOption'
          nullable: true
          description: >-
            These are the options for the assistant's message regex match.
            Defaults to all disabled.


            @default []
        customerRegex:
          type: string
        customerRegexOptions:
          type: array
          items:
            $ref: '#/components/schemas/RegexOption'
          nullable: true
          description: >-
            These are the options for the customer's message regex match.
            Defaults to all disabled.


            @default []
        timeoutSeconds:
          type: number
          format: double
          description: This is the endpointing timeout in seconds, if the rule is matched.
      required:
        - assistantRegex
        - customerRegex
        - timeoutSeconds
    VapiSmartEndpointingPlanProvider:
      title: VapiSmartEndpointingPlanProvider
      type: string
      enum:
        - vapi
        - livekit
      description: This is the provider for the smart endpointing plan.
    VapiSmartEndpointingPlan:
      title: VapiSmartEndpointingPlan
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/VapiSmartEndpointingPlanProvider'
          description: This is the provider for the smart endpointing plan.
      required:
        - provider
    LivekitSmartEndpointingPlanProvider:
      title: LivekitSmartEndpointingPlanProvider
      type: string
      enum:
        - vapi
        - livekit
      description: This is the provider for the smart endpointing plan.
    LivekitSmartEndpointingPlan:
      title: LivekitSmartEndpointingPlan
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/LivekitSmartEndpointingPlanProvider'
          description: This is the provider for the smart endpointing plan.
        waitFunction:
          type: string
          nullable: true
          description: >-
            This expression describes how long the bot will wait to start
            speaking based on the likelihood that the user has reached an
            endpoint.


            This is a millisecond valued function. It maps probabilities (real
            numbers on [0,1]) to milliseconds that the bot should wait before
            speaking ([0, \infty]). Any negative values that are returned are
            set to zero (the bot can't start talking in the past).


            A probability of zero represents very high confidence that the
            caller has stopped speaking, and would like the bot to speak to
            them. A probability of one represents very high confidence that the
            caller is still speaking.


            Under the hood, this is parsed into a mathjs expression. Whatever
            you use to write your expression needs to be valid with respect to
            mathjs


            @default "70 + 4000 * x"
      required:
        - provider
    TranscriptionEndpointingPlan:
      title: TranscriptionEndpointingPlan
      type: object
      properties:
        onPunctuationSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            The minimum number of seconds to wait after transcription ending
            with punctuation before sending a request to the model. Defaults to
            0.1.


            This setting exists because the transcriber punctuates the
            transcription when it's more confident that customer has completed a
            thought.


            @default 0.1
        onNoPunctuationSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            The minimum number of seconds to wait after transcription ending
            without punctuation before sending a request to the model. Defaults
            to 1.5.


            This setting exists to catch the cases where the transcriber was not
            confident enough to punctuate the transcription, but the customer is
            done and has been silent for a long time.


            @default 1.5
        onNumberSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            The minimum number of seconds to wait after transcription ending
            with a number before sending a request to the model. Defaults to
            0.4.


            This setting exists because the transcriber will sometimes punctuate
            the transcription ending with a number, even though the customer
            hasn't uttered the full number. This happens commonly for long
            numbers when the customer reads the number in chunks.


            @default 0.5
    StartSpeakingPlanSmartEndpointingPlan:
      title: StartSpeakingPlanSmartEndpointingPlan
      oneOf:
        - $ref: '#/components/schemas/VapiSmartEndpointingPlan'
        - $ref: '#/components/schemas/LivekitSmartEndpointingPlan'
      description: >-
        This is the plan for smart endpointing. Pick between Vapi smart
        endpointing or LiveKit smart endpointing (or nothing). We strongly
        recommend using livekit endpointing when working in English. LiveKit
        endpointing is not supported in other languages, yet.


        If this is set, it will override and take precedence over
        `transcriptionEndpointingPlan`.

        This plan will still be overridden by any matching
        `customEndpointingRules`.
    StartSpeakingPlanCustomEndpointingRulesItem:
      title: StartSpeakingPlanCustomEndpointingRulesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - assistant
            - $ref: '#/components/schemas/AssistantCustomEndpointingRule'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - customer
            - $ref: '#/components/schemas/CustomerCustomEndpointingRule'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - both
            - $ref: '#/components/schemas/BothCustomEndpointingRule'
          required:
            - type
    StartSpeakingPlan:
      title: StartSpeakingPlan
      type: object
      properties:
        waitSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is how long assistant waits before speaking. Defaults to 0.4.


            This is the minimum it will wait but if there is latency is the
            pipeline, this minimum will be exceeded. This is intended as a
            stopgap in case the pipeline is moving too fast.


            Example:

            - If model generates tokens and voice generates bytes within 100ms,
            the pipeline still waits 300ms before outputting speech.


            Usage:

            - If the customer is taking long pauses, set this to a higher value.

            - If the assistant is accidentally jumping in too much, set this to
            a higher value.


            @default 0.4
        smartEndpointingEnabled:
          type: object
          additionalProperties: true
          nullable: true
        smartEndpointingPlan:
          $ref: '#/components/schemas/StartSpeakingPlanSmartEndpointingPlan'
          nullable: true
          description: >-
            This is the plan for smart endpointing. Pick between Vapi smart
            endpointing or LiveKit smart endpointing (or nothing). We strongly
            recommend using livekit endpointing when working in English. LiveKit
            endpointing is not supported in other languages, yet.


            If this is set, it will override and take precedence over
            `transcriptionEndpointingPlan`.

            This plan will still be overridden by any matching
            `customEndpointingRules`.
        customEndpointingRules:
          type: array
          items:
            $ref: '#/components/schemas/StartSpeakingPlanCustomEndpointingRulesItem'
          nullable: true
          description: >-
            These are the custom endpointing rules to set an endpointing timeout
            based on a regex on the customer's speech or the assistant's last
            message.


            Usage:

            - If you have yes/no questions like "are you interested in a loan?",
            you can set a shorter timeout.

            - If you have questions where the customer may pause to look up
            information like "what's my account number?", you can set a longer
            timeout.

            - If you want to wait longer while customer is enumerating a list of
            numbers, you can set a longer timeout.


            These rules have the highest precedence and will override both
            `smartEndpointingPlan` and `transcriptionEndpointingPlan` when a
            rule is matched.


            The rules are evaluated in order and the first one that matches will
            be used.


            Order of precedence for endpointing:

            1. customEndpointingRules (if any match)

            2. smartEndpointingPlan (if set)

            3. transcriptionEndpointingPlan


            @default []
        transcriptionEndpointingPlan:
          $ref: '#/components/schemas/TranscriptionEndpointingPlan'
          nullable: true
          description: >-
            This determines how a customer speech is considered done
            (endpointing) using the transcription of customer's speech.


            Once an endpoint is triggered, the request is sent to
            `assistant.model`.


            Note: This plan is only used if `smartEndpointingPlan` is not set.
            If both are provided, `smartEndpointingPlan` takes precedence.

            This plan will also be overridden by any matching
            `customEndpointingRules`.
    StopSpeakingPlan:
      title: StopSpeakingPlan
      type: object
      properties:
        numWords:
          type: number
          format: double
          nullable: true
          description: >-
            This is the number of words that the customer has to say before the
            assistant will stop talking.


            Words like "stop", "actually", "no", etc. will always interrupt
            immediately regardless of this value.


            Words like "okay", "yeah", "right" will never interrupt.


            When set to 0, `voiceSeconds` is used in addition to the
            transcriptions to determine the customer has started speaking.


            Defaults to 0.


            @default 0
        voiceSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the seconds customer has to speak before the assistant stops
            talking. This uses the VAD (Voice Activity Detection) spike to
            determine if the customer has started speaking.


            Considerations:

            - A lower value might be more responsive but could potentially pick
            up non-speech sounds.

            - A higher value reduces false positives but might slightly delay
            the detection of speech onset.


            This is only used if `numWords` is set to 0.


            Defaults to 0.2


            @default 0.2
        backoffSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the seconds to wait before the assistant will start talking
            again after being interrupted.


            Defaults to 1.


            @default 1
        acknowledgementPhrases:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the phrases that will never interrupt the assistant, even
            if numWords threshold is met.

            These are typically acknowledgement or backchanneling phrases.
        interruptionPhrases:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the phrases that will always interrupt the assistant
            immediately, regardless of numWords.

            These are typically phrases indicating disagreement or desire to
            stop.
    MonitorPlan:
      title: MonitorPlan
      type: object
      properties:
        listenEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the assistant's calls allow live listening.
            Defaults to true.


            Fetch `call.monitor.listenUrl` to get the live listening URL.


            @default true
        controlEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the assistant's calls allow live control.
            Defaults to true.


            Fetch `call.monitor.controlUrl` to get the live control URL.


            To use, send any control message via a POST request to
            `call.monitor.controlUrl`. Here are the types of controls supported:
            https://docs.vapi.ai/api-reference/messages/client-inbound-message


            @default true
    AssistantHookFilter:
      title: AssistantHookFilter
      type: object
      properties:
        type:
          type: string
          enum:
            - oneOf
          description: This is the type of filter - currently only "oneOf" is supported
        key:
          type: string
          description: This is the key to filter on (e.g. "call.endedReason")
        oneOf:
          type: array
          items:
            type: string
          description: This is the array of possible values to match against
      required:
        - type
        - key
        - oneOf
    AssistantHookActionBase:
      title: AssistantHookActionBase
      type: object
      properties: {}
    AssistantHooks:
      title: AssistantHooks
      type: object
      properties:
        'on':
          type: string
          enum:
            - call.ending
          description: This is the event that triggers this hook
        filters:
          type: array
          items:
            $ref: '#/components/schemas/AssistantHookFilter'
          nullable: true
          description: This is the set of filters that must match for the hook to trigger
        do:
          type: array
          items:
            $ref: '#/components/schemas/AssistantHookActionBase'
          description: This is the set of actions to perform when the hook triggers
      required:
        - 'on'
        - do
    KeypadInputPlanDelimiters:
      title: KeypadInputPlanDelimiters
      type: string
      enum:
        - '#'
        - '*'
        - ''
      description: |-
        This is the delimiter(s) that will be used to process the input.
        Can be '#', '*', or an empty array.
    KeypadInputPlan:
      title: KeypadInputPlan
      type: object
      properties:
        enabled:
          type: boolean
          nullable: true
          description: |-
            This keeps track of whether the user has enabled keypad input.
            By default, it is off.

            @default false
        timeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the time in seconds to wait before processing the input.

            If the input is not received within this time, the input will be
            ignored.

            If set to "off", the input will be processed when the user enters a
            delimiter or immediately if no delimiter is used.


            @default 2
        delimiters:
          $ref: '#/components/schemas/KeypadInputPlanDelimiters'
          nullable: true
          description: |-
            This is the delimiter(s) that will be used to process the input.
            Can be '#', '*', or an empty array.
    CreateAssistantDtoTranscriber:
      title: CreateAssistantDtoTranscriber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/AssemblyAiTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureSpeechTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-transcriber
            - $ref: '#/components/schemas/CustomTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/GladiaTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/SpeechmaticsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - talkscriber
            - $ref: '#/components/schemas/TalkscriberTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiTranscriber'
          required:
            - provider
      description: These are the options for the assistant's transcriber.
    CreateAssistantDtoModel:
      title: CreateAssistantDtoModel
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/AnyscaleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/AnthropicModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CerebrasModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CustomLlmModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/DeepInfraModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/DeepSeekModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/GroqModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/InflectionAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/OpenRouterModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/PerplexityAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/TogetherAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/XaiModel'
          required:
            - provider
      description: These are the options for the assistant's LLM.
    CreateAssistantDtoVoice:
      title: CreateAssistantDtoVoice
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CartesiaVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-voice
            - $ref: '#/components/schemas/CustomVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/HumeVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/LmntVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/NeuphonicVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/PlayHtVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/RimeAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/SmallestAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/TavusVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiVoice'
          required:
            - provider
      description: These are the options for the assistant's voice.
    CreateAssistantDtoFirstMessageMode:
      title: CreateAssistantDtoFirstMessageMode
      type: string
      enum:
        - assistant-speaks-first
        - assistant-speaks-first-with-model-generated-message
        - assistant-waits-for-user
      description: >-
        This is the mode for the first message. Default is
        'assistant-speaks-first'.


        Use:

        - 'assistant-speaks-first' to have the assistant speak first.

        - 'assistant-waits-for-user' to have the assistant wait for the user to
        speak first.

        - 'assistant-speaks-first-with-model-generated-message' to have the
        assistant speak first with a message generated by the model based on the
        conversation state. (`assistant.model.messages` at call start,
        `call.messages` at squad transfer points).


        @default 'assistant-speaks-first'
    CreateAssistantDtoVoicemailDetection:
      title: CreateAssistantDtoVoicemailDetection
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
          required:
            - provider
      description: >-
        These are the settings to configure or disable voicemail detection.
        Alternatively, voicemail detection can be configured using the
        model.tools=[VoicemailTool].

        This uses Twilio's built-in detection while the VoicemailTool relies on
        the model to detect if a voicemail was reached.

        You can use neither of them, one of them, or both of them. By default,
        Twilio built-in detection is enabled while VoicemailTool is not.
    CreateAssistantDtoClientMessagesItem:
      title: CreateAssistantDtoClientMessagesItem
      type: string
      enum:
        - conversation-update
        - function-call
        - function-call-result
        - hang
        - language-changed
        - metadata
        - model-output
        - speech-update
        - status-update
        - transcript
        - tool-calls
        - tool-calls-result
        - transfer-update
        - user-interrupted
        - voice-input
        - workflow.node.started
    CreateAssistantDtoServerMessagesItem:
      title: CreateAssistantDtoServerMessagesItem
      type: string
      enum:
        - conversation-update
        - end-of-call-report
        - function-call
        - hang
        - language-changed
        - language-change-detected
        - model-output
        - phone-call-control
        - speech-update
        - status-update
        - transcript
        - transcript[transcriptType='final']
        - tool-calls
        - transfer-destination-request
        - transfer-update
        - user-interrupted
        - voice-input
    CreateAssistantDtoBackgroundSoundZero:
      title: CreateAssistantDtoBackgroundSoundZero
      type: string
      enum:
        - 'off'
        - office
    CreateAssistantDtoBackgroundSound:
      title: CreateAssistantDtoBackgroundSound
      oneOf:
        - $ref: '#/components/schemas/CreateAssistantDtoBackgroundSoundZero'
        - type: string
      description: >-
        This is the background sound in the call. Default for phone calls is
        'office' and default for web calls is 'off'.

        You can also provide a custom sound by providing a URL to an audio file.
    CreateAssistantDtoCredentialsItem:
      title: CreateAssistantDtoCredentialsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure-openai
            - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/CreateAzureCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-sip-trunk
            - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cloudflare
            - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gcp
            - $ref: '#/components/schemas/CreateGcpCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/CreateGladiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gohighlevel
            - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/CreateGoogleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/CreateGroqCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - langfuse
            - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/CreateLmntCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - runpod
            - $ref: '#/components/schemas/CreateRunpodCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - s3
            - $ref: '#/components/schemas/CreateS3CredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - supabase
            - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/CreateTavusCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonageCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - webhook
            - $ref: '#/components/schemas/CreateWebhookCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/CreateXAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/CreateHumeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - mistral
            - $ref: '#/components/schemas/CreateMistralCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/CreateTrieveCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-client
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.sheets.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - slack.oauth2-authorization
            - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
          required:
            - provider
    CreateAssistantDto:
      title: CreateAssistantDto
      type: object
      properties:
        transcriber:
          $ref: '#/components/schemas/CreateAssistantDtoTranscriber'
          nullable: true
          description: These are the options for the assistant's transcriber.
        model:
          $ref: '#/components/schemas/CreateAssistantDtoModel'
          nullable: true
          description: These are the options for the assistant's LLM.
        voice:
          $ref: '#/components/schemas/CreateAssistantDtoVoice'
          nullable: true
          description: These are the options for the assistant's voice.
        firstMessage:
          type: string
          nullable: true
          description: >-
            This is the first message that the assistant will say. This can also
            be a URL to a containerized audio file (mp3, wav, etc.).


            If unspecified, assistant will wait for user to speak and use the
            model to respond once they speak.
        firstMessageInterruptionsEnabled:
          type: boolean
          nullable: true
        firstMessageMode:
          $ref: '#/components/schemas/CreateAssistantDtoFirstMessageMode'
          nullable: true
          description: >-
            This is the mode for the first message. Default is
            'assistant-speaks-first'.


            Use:

            - 'assistant-speaks-first' to have the assistant speak first.

            - 'assistant-waits-for-user' to have the assistant wait for the user
            to speak first.

            - 'assistant-speaks-first-with-model-generated-message' to have the
            assistant speak first with a message generated by the model based on
            the conversation state. (`assistant.model.messages` at call start,
            `call.messages` at squad transfer points).


            @default 'assistant-speaks-first'
        voicemailDetection:
          $ref: '#/components/schemas/CreateAssistantDtoVoicemailDetection'
          nullable: true
          description: >-
            These are the settings to configure or disable voicemail detection.
            Alternatively, voicemail detection can be configured using the
            model.tools=[VoicemailTool].

            This uses Twilio's built-in detection while the VoicemailTool relies
            on the model to detect if a voicemail was reached.

            You can use neither of them, one of them, or both of them. By
            default, Twilio built-in detection is enabled while VoicemailTool is
            not.
        clientMessages:
          type: array
          items:
            $ref: '#/components/schemas/CreateAssistantDtoClientMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be sent to your Client SDKs.
            Default is
            conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started.
            You can check the shape of the messages in ClientMessage schema.
        serverMessages:
          type: array
          items:
            $ref: '#/components/schemas/CreateAssistantDtoServerMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be sent to your Server URL. Default
            is
            conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted.
            You can check the shape of the messages in ServerMessage schema.
        silenceTimeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            How many seconds of silence to wait before ending the call. Defaults
            to 30.


            @default 30
        maxDurationSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the maximum number of seconds that the call will last. When
            the call reaches this duration, it will be ended.


            @default 600 (10 minutes)
        backgroundSound:
          $ref: '#/components/schemas/CreateAssistantDtoBackgroundSound'
          nullable: true
          description: >-
            This is the background sound in the call. Default for phone calls is
            'office' and default for web calls is 'off'.

            You can also provide a custom sound by providing a URL to an audio
            file.
        backgroundDenoisingEnabled:
          type: boolean
          nullable: true
          description: >-
            This enables filtering of noise and background speech while the user
            is talking.


            Default `false` while in beta.


            @default false
        modelOutputInMessagesEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the model's output is used in conversation
            history rather than the transcription of assistant's speech.


            Default `false` while in beta.


            @default false
        transportConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/TransportConfigurationTwilio'
          nullable: true
          description: >-
            These are the configurations to be passed to the transport providers
            of assistant's calls, like Twilio. You can store multiple
            configurations for different transport providers. For a call, only
            the configuration matching the call transport provider is used.
        observabilityPlan:
          $ref: '#/components/schemas/LangfuseObservabilityPlan'
          nullable: true
          description: >-
            This is the plan for observability configuration of assistant's
            calls.

            Currently supports Langfuse for tracing and monitoring.
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/CreateAssistantDtoCredentialsItem'
          nullable: true
          description: >-
            These are dynamic credentials that will be used for the assistant
            calls. By default, all the credentials are available for use in the
            call but you can supplement an additional credentials using this.
            Dynamic credentials override existing credentials.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the assistant.


            This is required when you want to transfer between assistants in a
            call.
        voicemailMessage:
          type: string
          nullable: true
          description: >-
            This is the message that the assistant will say if the call is
            forwarded to voicemail.


            If unspecified, it will hang up.
        endCallMessage:
          type: string
          nullable: true
          description: |-
            This is the message that the assistant will say if it ends the call.

            If unspecified, it will hang up without saying anything.
        endCallPhrases:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This list contains phrases that, if spoken by the assistant, will
            trigger the call to be hung up. Case insensitive.
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the assistant.
        analysisPlan:
          $ref: '#/components/schemas/AnalysisPlan'
          nullable: true
          description: >-
            This is the plan for analysis of assistant's calls. Stored in
            `call.analysis`.
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
          nullable: true
          description: >-
            This is the plan for artifacts generated during assistant's calls.
            Stored in `call.artifact`.


            Note: `recordingEnabled` is currently at the root level. It will be
            moved to `artifactPlan` in the future, but will remain backwards
            compatible.
        messagePlan:
          $ref: '#/components/schemas/MessagePlan'
          nullable: true
          description: >-
            This is the plan for static predefined messages that can be spoken
            by the assistant during the call, like `idleMessages`.


            Note: `firstMessage`, `voicemailMessage`, and `endCallMessage` are
            currently at the root level. They will be moved to `messagePlan` in
            the future, but will remain backwards compatible.
        startSpeakingPlan:
          $ref: '#/components/schemas/StartSpeakingPlan'
          nullable: true
          description: >-
            This is the plan for when the assistant should start talking.


            You should configure this if you're running into these issues:

            - The assistant is too slow to start talking after the customer is
            done speaking.

            - The assistant is too fast to start talking after the customer is
            done speaking.

            - The assistant is so fast that it's actually interrupting the
            customer.
        stopSpeakingPlan:
          $ref: '#/components/schemas/StopSpeakingPlan'
          nullable: true
          description: >-
            This is the plan for when assistant should stop talking on customer
            interruption.


            You should configure this if you're running into these issues:

            - The assistant is too slow to recognize customer's interruption.

            - The assistant is too fast to recognize customer's interruption.

            - The assistant is getting interrupted by phrases that are just
            acknowledgments.

            - The assistant is getting interrupted by background noises.

            - The assistant is not properly stopping -- it starts talking right
            after getting interrupted.
        monitorPlan:
          $ref: '#/components/schemas/MonitorPlan'
          nullable: true
          description: >-
            This is the plan for real-time monitoring of the assistant's calls.


            Usage:

            - To enable live listening of the assistant's calls, set
            `monitorPlan.listenEnabled` to `true`.

            - To enable live control of the assistant's calls, set
            `monitorPlan.controlEnabled` to `true`.


            Note, `serverMessages`, `clientMessages`, `serverUrl` and
            `serverUrlSecret` are currently at the root level but will be moved
            to `monitorPlan` in the future. Will remain backwards compatible
        credentialIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the credentials that will be used for the assistant calls.
            By default, all the credentials are available for use in the call
            but you can provide a subset using this.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server.url

            2. phoneNumber.serverUrl

            3. org.serverUrl
        hooks:
          type: array
          items:
            $ref: '#/components/schemas/AssistantHooks'
          nullable: true
          description: This is a set of actions that will be performed on certain events.
        keypadInputPlan:
          $ref: '#/components/schemas/KeypadInputPlan'
          nullable: true
    AssistantOverridesTranscriber:
      title: AssistantOverridesTranscriber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/AssemblyAiTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureSpeechTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-transcriber
            - $ref: '#/components/schemas/CustomTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/GladiaTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/SpeechmaticsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - talkscriber
            - $ref: '#/components/schemas/TalkscriberTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiTranscriber'
          required:
            - provider
      description: These are the options for the assistant's transcriber.
    AssistantOverridesModel:
      title: AssistantOverridesModel
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/AnyscaleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/AnthropicModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CerebrasModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CustomLlmModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/DeepInfraModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/DeepSeekModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/GroqModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/InflectionAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/OpenRouterModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/PerplexityAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/TogetherAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/XaiModel'
          required:
            - provider
      description: These are the options for the assistant's LLM.
    AssistantOverridesVoice:
      title: AssistantOverridesVoice
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CartesiaVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-voice
            - $ref: '#/components/schemas/CustomVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/HumeVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/LmntVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/NeuphonicVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/PlayHtVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/RimeAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/SmallestAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/TavusVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiVoice'
          required:
            - provider
      description: These are the options for the assistant's voice.
    AssistantOverridesFirstMessageMode:
      title: AssistantOverridesFirstMessageMode
      type: string
      enum:
        - assistant-speaks-first
        - assistant-speaks-first-with-model-generated-message
        - assistant-waits-for-user
      description: >-
        This is the mode for the first message. Default is
        'assistant-speaks-first'.


        Use:

        - 'assistant-speaks-first' to have the assistant speak first.

        - 'assistant-waits-for-user' to have the assistant wait for the user to
        speak first.

        - 'assistant-speaks-first-with-model-generated-message' to have the
        assistant speak first with a message generated by the model based on the
        conversation state. (`assistant.model.messages` at call start,
        `call.messages` at squad transfer points).


        @default 'assistant-speaks-first'
    AssistantOverridesVoicemailDetection:
      title: AssistantOverridesVoicemailDetection
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
          required:
            - provider
      description: >-
        These are the settings to configure or disable voicemail detection.
        Alternatively, voicemail detection can be configured using the
        model.tools=[VoicemailTool].

        This uses Twilio's built-in detection while the VoicemailTool relies on
        the model to detect if a voicemail was reached.

        You can use neither of them, one of them, or both of them. By default,
        Twilio built-in detection is enabled while VoicemailTool is not.
    AssistantOverridesClientMessagesItem:
      title: AssistantOverridesClientMessagesItem
      type: string
      enum:
        - conversation-update
        - function-call
        - function-call-result
        - hang
        - language-changed
        - metadata
        - model-output
        - speech-update
        - status-update
        - transcript
        - tool-calls
        - tool-calls-result
        - transfer-update
        - user-interrupted
        - voice-input
        - workflow.node.started
    AssistantOverridesServerMessagesItem:
      title: AssistantOverridesServerMessagesItem
      type: string
      enum:
        - conversation-update
        - end-of-call-report
        - function-call
        - hang
        - language-changed
        - language-change-detected
        - model-output
        - phone-call-control
        - speech-update
        - status-update
        - transcript
        - transcript[transcriptType='final']
        - tool-calls
        - transfer-destination-request
        - transfer-update
        - user-interrupted
        - voice-input
    AssistantOverridesBackgroundSoundZero:
      title: AssistantOverridesBackgroundSoundZero
      type: string
      enum:
        - 'off'
        - office
    AssistantOverridesBackgroundSound:
      title: AssistantOverridesBackgroundSound
      oneOf:
        - $ref: '#/components/schemas/AssistantOverridesBackgroundSoundZero'
        - type: string
      description: >-
        This is the background sound in the call. Default for phone calls is
        'office' and default for web calls is 'off'.

        You can also provide a custom sound by providing a URL to an audio file.
    AssistantOverridesCredentialsItem:
      title: AssistantOverridesCredentialsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure-openai
            - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/CreateAzureCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-sip-trunk
            - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cloudflare
            - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gcp
            - $ref: '#/components/schemas/CreateGcpCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/CreateGladiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gohighlevel
            - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/CreateGoogleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/CreateGroqCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - langfuse
            - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/CreateLmntCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - runpod
            - $ref: '#/components/schemas/CreateRunpodCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - s3
            - $ref: '#/components/schemas/CreateS3CredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - supabase
            - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/CreateTavusCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonageCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - webhook
            - $ref: '#/components/schemas/CreateWebhookCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/CreateXAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/CreateHumeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - mistral
            - $ref: '#/components/schemas/CreateMistralCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/CreateTrieveCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-client
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.sheets.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - slack.oauth2-authorization
            - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
          required:
            - provider
    AssistantOverrides:
      title: AssistantOverrides
      type: object
      properties:
        transcriber:
          $ref: '#/components/schemas/AssistantOverridesTranscriber'
          nullable: true
          description: These are the options for the assistant's transcriber.
        model:
          $ref: '#/components/schemas/AssistantOverridesModel'
          nullable: true
          description: These are the options for the assistant's LLM.
        voice:
          $ref: '#/components/schemas/AssistantOverridesVoice'
          nullable: true
          description: These are the options for the assistant's voice.
        firstMessage:
          type: string
          nullable: true
          description: >-
            This is the first message that the assistant will say. This can also
            be a URL to a containerized audio file (mp3, wav, etc.).


            If unspecified, assistant will wait for user to speak and use the
            model to respond once they speak.
        firstMessageInterruptionsEnabled:
          type: boolean
          nullable: true
        firstMessageMode:
          $ref: '#/components/schemas/AssistantOverridesFirstMessageMode'
          nullable: true
          description: >-
            This is the mode for the first message. Default is
            'assistant-speaks-first'.


            Use:

            - 'assistant-speaks-first' to have the assistant speak first.

            - 'assistant-waits-for-user' to have the assistant wait for the user
            to speak first.

            - 'assistant-speaks-first-with-model-generated-message' to have the
            assistant speak first with a message generated by the model based on
            the conversation state. (`assistant.model.messages` at call start,
            `call.messages` at squad transfer points).


            @default 'assistant-speaks-first'
        voicemailDetection:
          $ref: '#/components/schemas/AssistantOverridesVoicemailDetection'
          nullable: true
          description: >-
            These are the settings to configure or disable voicemail detection.
            Alternatively, voicemail detection can be configured using the
            model.tools=[VoicemailTool].

            This uses Twilio's built-in detection while the VoicemailTool relies
            on the model to detect if a voicemail was reached.

            You can use neither of them, one of them, or both of them. By
            default, Twilio built-in detection is enabled while VoicemailTool is
            not.
        clientMessages:
          type: array
          items:
            $ref: '#/components/schemas/AssistantOverridesClientMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be sent to your Client SDKs.
            Default is
            conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started.
            You can check the shape of the messages in ClientMessage schema.
        serverMessages:
          type: array
          items:
            $ref: '#/components/schemas/AssistantOverridesServerMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be sent to your Server URL. Default
            is
            conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted.
            You can check the shape of the messages in ServerMessage schema.
        silenceTimeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            How many seconds of silence to wait before ending the call. Defaults
            to 30.


            @default 30
        maxDurationSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the maximum number of seconds that the call will last. When
            the call reaches this duration, it will be ended.


            @default 600 (10 minutes)
        backgroundSound:
          $ref: '#/components/schemas/AssistantOverridesBackgroundSound'
          nullable: true
          description: >-
            This is the background sound in the call. Default for phone calls is
            'office' and default for web calls is 'off'.

            You can also provide a custom sound by providing a URL to an audio
            file.
        backgroundDenoisingEnabled:
          type: boolean
          nullable: true
          description: >-
            This enables filtering of noise and background speech while the user
            is talking.


            Default `false` while in beta.


            @default false
        modelOutputInMessagesEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the model's output is used in conversation
            history rather than the transcription of assistant's speech.


            Default `false` while in beta.


            @default false
        transportConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/TransportConfigurationTwilio'
          nullable: true
          description: >-
            These are the configurations to be passed to the transport providers
            of assistant's calls, like Twilio. You can store multiple
            configurations for different transport providers. For a call, only
            the configuration matching the call transport provider is used.
        observabilityPlan:
          $ref: '#/components/schemas/LangfuseObservabilityPlan'
          nullable: true
          description: >-
            This is the plan for observability configuration of assistant's
            calls.

            Currently supports Langfuse for tracing and monitoring.
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/AssistantOverridesCredentialsItem'
          nullable: true
          description: >-
            These are dynamic credentials that will be used for the assistant
            calls. By default, all the credentials are available for use in the
            call but you can supplement an additional credentials using this.
            Dynamic credentials override existing credentials.
        variableValues:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            These are values that will be used to replace the template variables
            in the assistant messages and other text-based fields.

            This uses LiquidJS syntax.
            https://liquidjs.com/tutorials/intro-to-liquid.html


            So for example, `{{ name }}` will be replaced with the value of
            `name` in `variableValues`.

            `{{"now" | date: "%b %d, %Y, %I:%M %p", "America/New_York"}}` will
            be replaced with the current date and time in New York.
             Some VAPI reserved defaults:
             - *customer* - the customer object
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the assistant.


            This is required when you want to transfer between assistants in a
            call.
        voicemailMessage:
          type: string
          nullable: true
          description: >-
            This is the message that the assistant will say if the call is
            forwarded to voicemail.


            If unspecified, it will hang up.
        endCallMessage:
          type: string
          nullable: true
          description: |-
            This is the message that the assistant will say if it ends the call.

            If unspecified, it will hang up without saying anything.
        endCallPhrases:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This list contains phrases that, if spoken by the assistant, will
            trigger the call to be hung up. Case insensitive.
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the assistant.
        analysisPlan:
          $ref: '#/components/schemas/AnalysisPlan'
          nullable: true
          description: >-
            This is the plan for analysis of assistant's calls. Stored in
            `call.analysis`.
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
          nullable: true
          description: >-
            This is the plan for artifacts generated during assistant's calls.
            Stored in `call.artifact`.


            Note: `recordingEnabled` is currently at the root level. It will be
            moved to `artifactPlan` in the future, but will remain backwards
            compatible.
        messagePlan:
          $ref: '#/components/schemas/MessagePlan'
          nullable: true
          description: >-
            This is the plan for static predefined messages that can be spoken
            by the assistant during the call, like `idleMessages`.


            Note: `firstMessage`, `voicemailMessage`, and `endCallMessage` are
            currently at the root level. They will be moved to `messagePlan` in
            the future, but will remain backwards compatible.
        startSpeakingPlan:
          $ref: '#/components/schemas/StartSpeakingPlan'
          nullable: true
          description: >-
            This is the plan for when the assistant should start talking.


            You should configure this if you're running into these issues:

            - The assistant is too slow to start talking after the customer is
            done speaking.

            - The assistant is too fast to start talking after the customer is
            done speaking.

            - The assistant is so fast that it's actually interrupting the
            customer.
        stopSpeakingPlan:
          $ref: '#/components/schemas/StopSpeakingPlan'
          nullable: true
          description: >-
            This is the plan for when assistant should stop talking on customer
            interruption.


            You should configure this if you're running into these issues:

            - The assistant is too slow to recognize customer's interruption.

            - The assistant is too fast to recognize customer's interruption.

            - The assistant is getting interrupted by phrases that are just
            acknowledgments.

            - The assistant is getting interrupted by background noises.

            - The assistant is not properly stopping -- it starts talking right
            after getting interrupted.
        monitorPlan:
          $ref: '#/components/schemas/MonitorPlan'
          nullable: true
          description: >-
            This is the plan for real-time monitoring of the assistant's calls.


            Usage:

            - To enable live listening of the assistant's calls, set
            `monitorPlan.listenEnabled` to `true`.

            - To enable live control of the assistant's calls, set
            `monitorPlan.controlEnabled` to `true`.


            Note, `serverMessages`, `clientMessages`, `serverUrl` and
            `serverUrlSecret` are currently at the root level but will be moved
            to `monitorPlan` in the future. Will remain backwards compatible
        credentialIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the credentials that will be used for the assistant calls.
            By default, all the credentials are available for use in the call
            but you can provide a subset using this.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server.url

            2. phoneNumber.serverUrl

            3. org.serverUrl
        hooks:
          type: array
          items:
            $ref: '#/components/schemas/AssistantHooks'
          nullable: true
          description: This is a set of actions that will be performed on certain events.
        keypadInputPlan:
          $ref: '#/components/schemas/KeypadInputPlan'
          nullable: true
    SquadMemberDto:
      title: SquadMemberDto
      type: object
      properties:
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use a
            transient assistant, use `assistant` instead.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use an
            existing assistant, use `assistantId` instead.
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            This can be used to override the assistant's settings and provide
            values for it's template variables.
        assistantDestinations:
          type: array
          items:
            $ref: '#/components/schemas/TransferDestinationAssistant'
          nullable: true
          description: >-
            These are the others assistants that this assistant can transfer to.


            If the assistant already has transfer call tool, these destinations
            are just appended to existing ones.
    CreateSquadDto:
      title: CreateSquadDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of the squad.
        members:
          type: array
          items:
            $ref: '#/components/schemas/SquadMemberDto'
          description: |-
            This is the list of assistants that make up the squad.

            The call will start with the first assistant in the list.
        membersOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            This can be used to override all the assistants' settings and
            provide values for their template variables.


            Both `membersOverrides` and `members[n].assistantOverrides` can be
            used together. First, `members[n].assistantOverrides` is applied.
            Then, `membersOverrides` is applied as a global override.
      required:
        - members
    ImportTwilioPhoneNumberDtoFallbackDestination:
      title: ImportTwilioPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    ImportTwilioPhoneNumberDto:
      title: ImportTwilioPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/ImportTwilioPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        twilioPhoneNumber:
          type: string
          description: These are the digits of the phone number you own on your Twilio.
        twilioAccountSid:
          type: string
          description: >-
            This is your Twilio Account SID that will be used to handle this
            phone number.
        twilioAuthToken:
          type: string
          description: >-
            This is the Twilio Auth Token that will be used to handle this phone
            number.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
      required:
        - twilioPhoneNumber
        - twilioAccountSid
        - twilioAuthToken
    CreateCustomerDto:
      title: CreateCustomerDto
      type: object
      properties:
        numberE164CheckEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the flag to toggle the E164 check for the `number` field.
            This is an advanced property which should be used if you know your
            use case requires it.


            Use cases:

            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`,
            or `abc`. This is useful for dialing out to non-E164 numbers on your
            SIP trunks.

            - `true` (default): To allow only E164 numbers like `+14155551234`.
            This is standard for PSTN calls.


            If `false`, the `number` is still required to only contain
            alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).


            @default true (E164 check is enabled)
        extension:
          type: string
          nullable: true
          description: >-
            This is the extension that will be dialed after the call is
            answered.
        number:
          type: string
          nullable: true
          description: This is the number of the customer.
        sipUri:
          type: string
          nullable: true
          description: This is the SIP URI of the customer.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the customer. This is just for your own
            reference.


            For SIP inbound calls, this is extracted from the `From` SIP header
            with format `"Display Name" <sip:username@domain>`.
    SchedulePlan:
      title: SchedulePlan
      type: object
      properties:
        earliestAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of the earliest time the call
            can be scheduled.
        latestAt:
          type: string
          format: date-time
          nullable: true
          description: >-
            This is the ISO 8601 date-time string of the latest time the call
            can be scheduled.
      required:
        - earliestAt
    CallType:
      title: CallType
      type: string
      enum:
        - inboundPhoneCall
        - outboundPhoneCall
        - webCall
      description: This is the type of call.
    CallCostsItem:
      title: CallCostsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transport
            - $ref: '#/components/schemas/TransportCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transcriber
            - $ref: '#/components/schemas/TranscriberCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - model
            - $ref: '#/components/schemas/ModelCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/VoiceCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail-detection
            - $ref: '#/components/schemas/VoicemailDetectionCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - analysis
            - $ref: '#/components/schemas/AnalysisCost'
          required:
            - type
    CallMessagesItem:
      title: CallMessagesItem
      oneOf:
        - $ref: '#/components/schemas/UserMessage'
        - $ref: '#/components/schemas/SystemMessage'
        - $ref: '#/components/schemas/BotMessage'
        - $ref: '#/components/schemas/ToolCallMessage'
        - $ref: '#/components/schemas/ToolCallResultMessage'
    CallPhoneCallProvider:
      title: CallPhoneCallProvider
      type: string
      enum:
        - twilio
        - vonage
        - vapi
        - telnyx
      description: |-
        This is the provider of the call.

        Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
    CallPhoneCallTransport:
      title: CallPhoneCallTransport
      type: string
      enum:
        - sip
        - pstn
      description: |-
        This is the transport of the phone call.

        Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
    CallStatus:
      title: CallStatus
      type: string
      enum:
        - scheduled
        - queued
        - ringing
        - in-progress
        - forwarding
        - ended
      description: This is the status of the call.
    CallEndedReason:
      title: CallEndedReason
      type: string
      enum:
        - call-start-error-neither-assistant-nor-server-set
        - assistant-request-failed
        - assistant-request-returned-error
        - assistant-request-returned-unspeakable-error
        - assistant-request-returned-invalid-assistant
        - assistant-request-returned-no-assistant
        - assistant-request-returned-forwarding-phone-number
        - call.start.error-get-org
        - call.start.error-get-subscription
        - call.start.error-get-assistant
        - call.start.error-get-phone-number
        - call.start.error-get-customer
        - call.start.error-get-resources-validation
        - call.start.error-vapi-number-international
        - call.start.error-vapi-number-outbound-daily-limit
        - call.start.error-get-transport
        - assistant-not-valid
        - database-error
        - assistant-not-found
        - pipeline-error-openai-voice-failed
        - pipeline-error-cartesia-voice-failed
        - pipeline-error-deepgram-voice-failed
        - pipeline-error-eleven-labs-voice-failed
        - pipeline-error-playht-voice-failed
        - pipeline-error-lmnt-voice-failed
        - pipeline-error-azure-voice-failed
        - pipeline-error-rime-ai-voice-failed
        - pipeline-error-smallest-ai-voice-failed
        - pipeline-error-neuphonic-voice-failed
        - pipeline-error-hume-voice-failed
        - pipeline-error-sesame-voice-failed
        - pipeline-error-tavus-video-failed
        - call.in-progress.error-vapifault-openai-voice-failed
        - call.in-progress.error-vapifault-cartesia-voice-failed
        - call.in-progress.error-vapifault-deepgram-voice-failed
        - call.in-progress.error-vapifault-eleven-labs-voice-failed
        - call.in-progress.error-vapifault-playht-voice-failed
        - call.in-progress.error-vapifault-lmnt-voice-failed
        - call.in-progress.error-vapifault-azure-voice-failed
        - call.in-progress.error-vapifault-rime-ai-voice-failed
        - call.in-progress.error-vapifault-smallest-ai-voice-failed
        - call.in-progress.error-vapifault-neuphonic-voice-failed
        - call.in-progress.error-vapifault-hume-voice-failed
        - call.in-progress.error-vapifault-sesame-voice-failed
        - call.in-progress.error-vapifault-tavus-video-failed
        - pipeline-error-vapi-llm-failed
        - pipeline-error-vapi-400-bad-request-validation-failed
        - pipeline-error-vapi-401-unauthorized
        - pipeline-error-vapi-403-model-access-denied
        - pipeline-error-vapi-429-exceeded-quota
        - pipeline-error-vapi-500-server-error
        - pipeline-error-vapi-503-server-overloaded-error
        - call.in-progress.error-vapifault-vapi-llm-failed
        - >-
          call.in-progress.error-vapifault-vapi-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-vapi-401-unauthorized
        - call.in-progress.error-vapifault-vapi-403-model-access-denied
        - call.in-progress.error-vapifault-vapi-429-exceeded-quota
        - call.in-progress.error-providerfault-vapi-500-server-error
        - call.in-progress.error-providerfault-vapi-503-server-overloaded-error
        - pipeline-error-deepgram-transcriber-failed
        - call.in-progress.error-vapifault-deepgram-transcriber-failed
        - pipeline-error-gladia-transcriber-failed
        - call.in-progress.error-vapifault-gladia-transcriber-failed
        - pipeline-error-speechmatics-transcriber-failed
        - call.in-progress.error-vapifault-speechmatics-transcriber-failed
        - pipeline-error-assembly-ai-transcriber-failed
        - pipeline-error-assembly-ai-returning-400-insufficent-funds
        - pipeline-error-assembly-ai-returning-400-paid-only-feature
        - pipeline-error-assembly-ai-returning-401-invalid-credentials
        - pipeline-error-assembly-ai-returning-500-invalid-schema
        - pipeline-error-assembly-ai-returning-500-word-boost-parsing-failed
        - call.in-progress.error-vapifault-assembly-ai-transcriber-failed
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-400-insufficent-funds
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-400-paid-only-feature
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-401-invalid-credentials
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-500-invalid-schema
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-500-word-boost-parsing-failed
        - pipeline-error-talkscriber-transcriber-failed
        - call.in-progress.error-vapifault-talkscriber-transcriber-failed
        - pipeline-error-azure-speech-transcriber-failed
        - call.in-progress.error-vapifault-azure-speech-transcriber-failed
        - call.in-progress.error-pipeline-no-available-llm-model
        - worker-shutdown
        - unknown-error
        - vonage-disconnected
        - vonage-failed-to-connect-call
        - vonage-completed
        - phone-call-provider-bypass-enabled-but-no-call-received
        - call.in-progress.error-vapifault-transport-never-connected
        - >-
          call.in-progress.error-vapifault-transport-connected-but-call-not-active
        - >-
          call.in-progress.error-vapifault-call-started-but-connection-to-transport-missing
        - call.in-progress.error-vapifault-openai-llm-failed
        - call.in-progress.error-vapifault-azure-openai-llm-failed
        - call.in-progress.error-vapifault-groq-llm-failed
        - call.in-progress.error-vapifault-google-llm-failed
        - call.in-progress.error-vapifault-xai-llm-failed
        - call.in-progress.error-vapifault-mistral-llm-failed
        - call.in-progress.error-vapifault-inflection-ai-llm-failed
        - call.in-progress.error-vapifault-cerebras-llm-failed
        - call.in-progress.error-vapifault-deep-seek-llm-failed
        - pipeline-error-openai-400-bad-request-validation-failed
        - pipeline-error-openai-401-unauthorized
        - pipeline-error-openai-401-incorrect-api-key
        - pipeline-error-openai-401-account-not-in-organization
        - pipeline-error-openai-403-model-access-denied
        - pipeline-error-openai-429-exceeded-quota
        - pipeline-error-openai-429-rate-limit-reached
        - pipeline-error-openai-500-server-error
        - pipeline-error-openai-503-server-overloaded-error
        - pipeline-error-openai-llm-failed
        - >-
          call.in-progress.error-vapifault-openai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-openai-401-unauthorized
        - call.in-progress.error-vapifault-openai-401-incorrect-api-key
        - >-
          call.in-progress.error-vapifault-openai-401-account-not-in-organization
        - call.in-progress.error-vapifault-openai-403-model-access-denied
        - call.in-progress.error-vapifault-openai-429-exceeded-quota
        - call.in-progress.error-vapifault-openai-429-rate-limit-reached
        - call.in-progress.error-providerfault-openai-500-server-error
        - >-
          call.in-progress.error-providerfault-openai-503-server-overloaded-error
        - pipeline-error-azure-openai-400-bad-request-validation-failed
        - pipeline-error-azure-openai-401-unauthorized
        - pipeline-error-azure-openai-403-model-access-denied
        - pipeline-error-azure-openai-429-exceeded-quota
        - pipeline-error-azure-openai-500-server-error
        - pipeline-error-azure-openai-503-server-overloaded-error
        - pipeline-error-azure-openai-llm-failed
        - >-
          call.in-progress.error-vapifault-azure-openai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-azure-openai-401-unauthorized
        - call.in-progress.error-vapifault-azure-openai-403-model-access-denied
        - call.in-progress.error-vapifault-azure-openai-429-exceeded-quota
        - call.in-progress.error-providerfault-azure-openai-500-server-error
        - >-
          call.in-progress.error-providerfault-azure-openai-503-server-overloaded-error
        - pipeline-error-google-400-bad-request-validation-failed
        - pipeline-error-google-401-unauthorized
        - pipeline-error-google-403-model-access-denied
        - pipeline-error-google-429-exceeded-quota
        - pipeline-error-google-500-server-error
        - pipeline-error-google-503-server-overloaded-error
        - pipeline-error-google-llm-failed
        - >-
          call.in-progress.error-vapifault-google-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-google-401-unauthorized
        - call.in-progress.error-vapifault-google-403-model-access-denied
        - call.in-progress.error-vapifault-google-429-exceeded-quota
        - call.in-progress.error-providerfault-google-500-server-error
        - >-
          call.in-progress.error-providerfault-google-503-server-overloaded-error
        - pipeline-error-xai-400-bad-request-validation-failed
        - pipeline-error-xai-401-unauthorized
        - pipeline-error-xai-403-model-access-denied
        - pipeline-error-xai-429-exceeded-quota
        - pipeline-error-xai-500-server-error
        - pipeline-error-xai-503-server-overloaded-error
        - pipeline-error-xai-llm-failed
        - call.in-progress.error-vapifault-xai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-xai-401-unauthorized
        - call.in-progress.error-vapifault-xai-403-model-access-denied
        - call.in-progress.error-vapifault-xai-429-exceeded-quota
        - call.in-progress.error-providerfault-xai-500-server-error
        - call.in-progress.error-providerfault-xai-503-server-overloaded-error
        - pipeline-error-mistral-400-bad-request-validation-failed
        - pipeline-error-mistral-401-unauthorized
        - pipeline-error-mistral-403-model-access-denied
        - pipeline-error-mistral-429-exceeded-quota
        - pipeline-error-mistral-500-server-error
        - pipeline-error-mistral-503-server-overloaded-error
        - pipeline-error-mistral-llm-failed
        - >-
          call.in-progress.error-vapifault-mistral-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-mistral-401-unauthorized
        - call.in-progress.error-vapifault-mistral-403-model-access-denied
        - call.in-progress.error-vapifault-mistral-429-exceeded-quota
        - call.in-progress.error-providerfault-mistral-500-server-error
        - >-
          call.in-progress.error-providerfault-mistral-503-server-overloaded-error
        - pipeline-error-inflection-ai-400-bad-request-validation-failed
        - pipeline-error-inflection-ai-401-unauthorized
        - pipeline-error-inflection-ai-403-model-access-denied
        - pipeline-error-inflection-ai-429-exceeded-quota
        - pipeline-error-inflection-ai-500-server-error
        - pipeline-error-inflection-ai-503-server-overloaded-error
        - pipeline-error-inflection-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-inflection-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-inflection-ai-401-unauthorized
        - call.in-progress.error-vapifault-inflection-ai-403-model-access-denied
        - call.in-progress.error-vapifault-inflection-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-inflection-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-inflection-ai-503-server-overloaded-error
        - pipeline-error-deep-seek-400-bad-request-validation-failed
        - pipeline-error-deep-seek-401-unauthorized
        - pipeline-error-deep-seek-403-model-access-denied
        - pipeline-error-deep-seek-429-exceeded-quota
        - pipeline-error-deep-seek-500-server-error
        - pipeline-error-deep-seek-503-server-overloaded-error
        - pipeline-error-deep-seek-llm-failed
        - >-
          call.in-progress.error-vapifault-deep-seek-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-deep-seek-401-unauthorized
        - call.in-progress.error-vapifault-deep-seek-403-model-access-denied
        - call.in-progress.error-vapifault-deep-seek-429-exceeded-quota
        - call.in-progress.error-providerfault-deep-seek-500-server-error
        - >-
          call.in-progress.error-providerfault-deep-seek-503-server-overloaded-error
        - pipeline-error-groq-400-bad-request-validation-failed
        - pipeline-error-groq-401-unauthorized
        - pipeline-error-groq-403-model-access-denied
        - pipeline-error-groq-429-exceeded-quota
        - pipeline-error-groq-500-server-error
        - pipeline-error-groq-503-server-overloaded-error
        - pipeline-error-groq-llm-failed
        - >-
          call.in-progress.error-vapifault-groq-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-groq-401-unauthorized
        - call.in-progress.error-vapifault-groq-403-model-access-denied
        - call.in-progress.error-vapifault-groq-429-exceeded-quota
        - call.in-progress.error-providerfault-groq-500-server-error
        - call.in-progress.error-providerfault-groq-503-server-overloaded-error
        - pipeline-error-cerebras-400-bad-request-validation-failed
        - pipeline-error-cerebras-401-unauthorized
        - pipeline-error-cerebras-403-model-access-denied
        - pipeline-error-cerebras-429-exceeded-quota
        - pipeline-error-cerebras-500-server-error
        - pipeline-error-cerebras-503-server-overloaded-error
        - pipeline-error-cerebras-llm-failed
        - >-
          call.in-progress.error-vapifault-cerebras-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-cerebras-401-unauthorized
        - call.in-progress.error-vapifault-cerebras-403-model-access-denied
        - call.in-progress.error-vapifault-cerebras-429-exceeded-quota
        - call.in-progress.error-providerfault-cerebras-500-server-error
        - >-
          call.in-progress.error-providerfault-cerebras-503-server-overloaded-error
        - pipeline-error-anthropic-400-bad-request-validation-failed
        - pipeline-error-anthropic-401-unauthorized
        - pipeline-error-anthropic-403-model-access-denied
        - pipeline-error-anthropic-429-exceeded-quota
        - pipeline-error-anthropic-500-server-error
        - pipeline-error-anthropic-503-server-overloaded-error
        - pipeline-error-anthropic-llm-failed
        - call.in-progress.error-vapifault-anthropic-llm-failed
        - >-
          call.in-progress.error-vapifault-anthropic-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-anthropic-401-unauthorized
        - call.in-progress.error-vapifault-anthropic-403-model-access-denied
        - call.in-progress.error-vapifault-anthropic-429-exceeded-quota
        - call.in-progress.error-providerfault-anthropic-500-server-error
        - >-
          call.in-progress.error-providerfault-anthropic-503-server-overloaded-error
        - pipeline-error-together-ai-400-bad-request-validation-failed
        - pipeline-error-together-ai-401-unauthorized
        - pipeline-error-together-ai-403-model-access-denied
        - pipeline-error-together-ai-429-exceeded-quota
        - pipeline-error-together-ai-500-server-error
        - pipeline-error-together-ai-503-server-overloaded-error
        - pipeline-error-together-ai-llm-failed
        - call.in-progress.error-vapifault-together-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-together-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-together-ai-401-unauthorized
        - call.in-progress.error-vapifault-together-ai-403-model-access-denied
        - call.in-progress.error-vapifault-together-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-together-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-together-ai-503-server-overloaded-error
        - pipeline-error-anyscale-400-bad-request-validation-failed
        - pipeline-error-anyscale-401-unauthorized
        - pipeline-error-anyscale-403-model-access-denied
        - pipeline-error-anyscale-429-exceeded-quota
        - pipeline-error-anyscale-500-server-error
        - pipeline-error-anyscale-503-server-overloaded-error
        - pipeline-error-anyscale-llm-failed
        - call.in-progress.error-vapifault-anyscale-llm-failed
        - >-
          call.in-progress.error-vapifault-anyscale-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-anyscale-401-unauthorized
        - call.in-progress.error-vapifault-anyscale-403-model-access-denied
        - call.in-progress.error-vapifault-anyscale-429-exceeded-quota
        - call.in-progress.error-providerfault-anyscale-500-server-error
        - >-
          call.in-progress.error-providerfault-anyscale-503-server-overloaded-error
        - pipeline-error-openrouter-400-bad-request-validation-failed
        - pipeline-error-openrouter-401-unauthorized
        - pipeline-error-openrouter-403-model-access-denied
        - pipeline-error-openrouter-429-exceeded-quota
        - pipeline-error-openrouter-500-server-error
        - pipeline-error-openrouter-503-server-overloaded-error
        - pipeline-error-openrouter-llm-failed
        - call.in-progress.error-vapifault-openrouter-llm-failed
        - >-
          call.in-progress.error-vapifault-openrouter-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-openrouter-401-unauthorized
        - call.in-progress.error-vapifault-openrouter-403-model-access-denied
        - call.in-progress.error-vapifault-openrouter-429-exceeded-quota
        - call.in-progress.error-providerfault-openrouter-500-server-error
        - >-
          call.in-progress.error-providerfault-openrouter-503-server-overloaded-error
        - pipeline-error-perplexity-ai-400-bad-request-validation-failed
        - pipeline-error-perplexity-ai-401-unauthorized
        - pipeline-error-perplexity-ai-403-model-access-denied
        - pipeline-error-perplexity-ai-429-exceeded-quota
        - pipeline-error-perplexity-ai-500-server-error
        - pipeline-error-perplexity-ai-503-server-overloaded-error
        - pipeline-error-perplexity-ai-llm-failed
        - call.in-progress.error-vapifault-perplexity-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-perplexity-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-perplexity-ai-401-unauthorized
        - call.in-progress.error-vapifault-perplexity-ai-403-model-access-denied
        - call.in-progress.error-vapifault-perplexity-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-perplexity-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-perplexity-ai-503-server-overloaded-error
        - pipeline-error-deepinfra-400-bad-request-validation-failed
        - pipeline-error-deepinfra-401-unauthorized
        - pipeline-error-deepinfra-403-model-access-denied
        - pipeline-error-deepinfra-429-exceeded-quota
        - pipeline-error-deepinfra-500-server-error
        - pipeline-error-deepinfra-503-server-overloaded-error
        - pipeline-error-deepinfra-llm-failed
        - call.in-progress.error-vapifault-deepinfra-llm-failed
        - >-
          call.in-progress.error-vapifault-deepinfra-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-deepinfra-401-unauthorized
        - call.in-progress.error-vapifault-deepinfra-403-model-access-denied
        - call.in-progress.error-vapifault-deepinfra-429-exceeded-quota
        - call.in-progress.error-providerfault-deepinfra-500-server-error
        - >-
          call.in-progress.error-providerfault-deepinfra-503-server-overloaded-error
        - pipeline-error-runpod-400-bad-request-validation-failed
        - pipeline-error-runpod-401-unauthorized
        - pipeline-error-runpod-403-model-access-denied
        - pipeline-error-runpod-429-exceeded-quota
        - pipeline-error-runpod-500-server-error
        - pipeline-error-runpod-503-server-overloaded-error
        - pipeline-error-runpod-llm-failed
        - call.in-progress.error-vapifault-runpod-llm-failed
        - >-
          call.in-progress.error-vapifault-runpod-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-runpod-401-unauthorized
        - call.in-progress.error-vapifault-runpod-403-model-access-denied
        - call.in-progress.error-vapifault-runpod-429-exceeded-quota
        - call.in-progress.error-providerfault-runpod-500-server-error
        - >-
          call.in-progress.error-providerfault-runpod-503-server-overloaded-error
        - pipeline-error-custom-llm-400-bad-request-validation-failed
        - pipeline-error-custom-llm-401-unauthorized
        - pipeline-error-custom-llm-403-model-access-denied
        - pipeline-error-custom-llm-429-exceeded-quota
        - pipeline-error-custom-llm-500-server-error
        - pipeline-error-custom-llm-503-server-overloaded-error
        - pipeline-error-custom-llm-llm-failed
        - call.in-progress.error-vapifault-custom-llm-llm-failed
        - >-
          call.in-progress.error-vapifault-custom-llm-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-custom-llm-401-unauthorized
        - call.in-progress.error-vapifault-custom-llm-403-model-access-denied
        - call.in-progress.error-vapifault-custom-llm-429-exceeded-quota
        - call.in-progress.error-providerfault-custom-llm-500-server-error
        - >-
          call.in-progress.error-providerfault-custom-llm-503-server-overloaded-error
        - pipeline-error-custom-voice-failed
        - pipeline-error-cartesia-socket-hang-up
        - pipeline-error-cartesia-requested-payment
        - pipeline-error-cartesia-500-server-error
        - pipeline-error-cartesia-503-server-error
        - pipeline-error-cartesia-522-server-error
        - call.in-progress.error-vapifault-cartesia-socket-hang-up
        - call.in-progress.error-vapifault-cartesia-requested-payment
        - call.in-progress.error-providerfault-cartesia-500-server-error
        - call.in-progress.error-providerfault-cartesia-503-server-error
        - call.in-progress.error-providerfault-cartesia-522-server-error
        - pipeline-error-eleven-labs-voice-not-found
        - pipeline-error-eleven-labs-quota-exceeded
        - pipeline-error-eleven-labs-unauthorized-access
        - pipeline-error-eleven-labs-unauthorized-to-access-model
        - pipeline-error-eleven-labs-professional-voices-only-for-creator-plus
        - pipeline-error-eleven-labs-blocked-free-plan-and-requested-upgrade
        - >-
          pipeline-error-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
        - >-
          pipeline-error-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
        - pipeline-error-eleven-labs-system-busy-and-requested-upgrade
        - pipeline-error-eleven-labs-voice-not-fine-tuned
        - pipeline-error-eleven-labs-invalid-api-key
        - pipeline-error-eleven-labs-invalid-voice-samples
        - pipeline-error-eleven-labs-voice-disabled-by-owner
        - pipeline-error-eleven-labs-blocked-account-in-probation
        - pipeline-error-eleven-labs-blocked-content-against-their-policy
        - pipeline-error-eleven-labs-missing-samples-for-voice-clone
        - pipeline-error-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
        - pipeline-error-eleven-labs-voice-not-allowed-for-free-users
        - pipeline-error-eleven-labs-max-character-limit-exceeded
        - >-
          pipeline-error-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
        - pipeline-error-eleven-labs-500-server-error
        - call.in-progress.error-vapifault-eleven-labs-voice-not-found
        - call.in-progress.error-vapifault-eleven-labs-quota-exceeded
        - call.in-progress.error-vapifault-eleven-labs-unauthorized-access
        - >-
          call.in-progress.error-vapifault-eleven-labs-unauthorized-to-access-model
        - >-
          call.in-progress.error-vapifault-eleven-labs-professional-voices-only-for-creator-plus
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-free-plan-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-system-busy-and-requested-upgrade
        - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned
        - call.in-progress.error-vapifault-eleven-labs-invalid-api-key
        - call.in-progress.error-vapifault-eleven-labs-invalid-voice-samples
        - call.in-progress.error-vapifault-eleven-labs-voice-disabled-by-owner
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-account-in-probation
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-content-against-their-policy
        - >-
          call.in-progress.error-vapifault-eleven-labs-missing-samples-for-voice-clone
        - >-
          call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
        - >-
          call.in-progress.error-vapifault-eleven-labs-voice-not-allowed-for-free-users
        - >-
          call.in-progress.error-vapifault-eleven-labs-max-character-limit-exceeded
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
        - call.in-progress.error-providerfault-eleven-labs-500-server-error
        - pipeline-error-playht-request-timed-out
        - pipeline-error-playht-invalid-voice
        - pipeline-error-playht-unexpected-error
        - pipeline-error-playht-out-of-credits
        - pipeline-error-playht-invalid-emotion
        - pipeline-error-playht-voice-must-be-a-valid-voice-manifest-uri
        - pipeline-error-playht-401-unauthorized
        - pipeline-error-playht-403-forbidden-out-of-characters
        - pipeline-error-playht-403-forbidden-api-access-not-available
        - pipeline-error-playht-429-exceeded-quota
        - pipeline-error-playht-502-gateway-error
        - pipeline-error-playht-504-gateway-error
        - call.in-progress.error-vapifault-playht-request-timed-out
        - call.in-progress.error-vapifault-playht-invalid-voice
        - call.in-progress.error-vapifault-playht-unexpected-error
        - call.in-progress.error-vapifault-playht-out-of-credits
        - call.in-progress.error-vapifault-playht-invalid-emotion
        - >-
          call.in-progress.error-vapifault-playht-voice-must-be-a-valid-voice-manifest-uri
        - call.in-progress.error-vapifault-playht-401-unauthorized
        - >-
          call.in-progress.error-vapifault-playht-403-forbidden-out-of-characters
        - >-
          call.in-progress.error-vapifault-playht-403-forbidden-api-access-not-available
        - call.in-progress.error-vapifault-playht-429-exceeded-quota
        - call.in-progress.error-providerfault-playht-502-gateway-error
        - call.in-progress.error-providerfault-playht-504-gateway-error
        - pipeline-error-custom-transcriber-failed
        - call.in-progress.error-vapifault-custom-transcriber-failed
        - pipeline-error-11labs-transcriber-failed
        - call.in-progress.error-vapifault-11labs-transcriber-failed
        - >-
          pipeline-error-deepgram-returning-400-no-such-model-language-tier-combination
        - pipeline-error-deepgram-returning-401-invalid-credentials
        - pipeline-error-deepgram-returning-403-model-access-denied
        - pipeline-error-deepgram-returning-404-not-found
        - pipeline-error-deepgram-returning-500-invalid-json
        - pipeline-error-deepgram-returning-502-network-error
        - pipeline-error-deepgram-returning-502-bad-gateway-ehostunreach
        - >-
          call.in-progress.error-vapifault-deepgram-returning-400-no-such-model-language-tier-combination
        - >-
          call.in-progress.error-vapifault-deepgram-returning-401-invalid-credentials
        - call.in-progress.error-vapifault-deepgram-returning-404-not-found
        - >-
          call.in-progress.error-vapifault-deepgram-returning-403-model-access-denied
        - >-
          call.in-progress.error-providerfault-deepgram-returning-500-invalid-json
        - >-
          call.in-progress.error-providerfault-deepgram-returning-502-network-error
        - >-
          call.in-progress.error-providerfault-deepgram-returning-502-bad-gateway-ehostunreach
        - pipeline-error-google-transcriber-failed
        - call.in-progress.error-vapifault-google-transcriber-failed
        - pipeline-error-openai-transcriber-failed
        - call.in-progress.error-vapifault-openai-transcriber-failed
        - assistant-ended-call
        - assistant-said-end-call-phrase
        - assistant-ended-call-with-hangup-task
        - assistant-ended-call-after-message-spoken
        - assistant-forwarded-call
        - assistant-join-timed-out
        - call.in-progress.error-assistant-did-not-receive-customer-audio
        - customer-busy
        - customer-ended-call
        - customer-did-not-answer
        - customer-did-not-give-microphone-permission
        - exceeded-max-duration
        - manually-canceled
        - phone-call-provider-closed-websocket
        - silence-timed-out
        - call.in-progress.error-sip-telephony-provider-failed-to-connect-call
        - twilio-failed-to-connect-call
        - twilio-reported-customer-misdialed
        - vonage-rejected
        - voicemail
      description: This is the explanation for how the call ended.
    CallDestination:
      title: CallDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the destination where the call ended up being transferred to. If
        the call was not transferred, this will be empty.
    Call:
      title: Call
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CallType'
          nullable: true
          description: This is the type of call.
        costs:
          type: array
          items:
            $ref: '#/components/schemas/CallCostsItem'
          nullable: true
          description: These are the costs of individual components of the call in USD.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CallMessagesItem'
          nullable: true
        phoneCallProvider:
          $ref: '#/components/schemas/CallPhoneCallProvider'
          nullable: true
          description: |-
            This is the provider of the call.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        phoneCallTransport:
          $ref: '#/components/schemas/CallPhoneCallTransport'
          nullable: true
          description: |-
            This is the transport of the phone call.

            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        status:
          $ref: '#/components/schemas/CallStatus'
          nullable: true
          description: This is the status of the call.
        endedReason:
          $ref: '#/components/schemas/CallEndedReason'
          nullable: true
          description: This is the explanation for how the call ended.
        destination:
          $ref: '#/components/schemas/CallDestination'
          nullable: true
          description: >-
            This is the destination where the call ended up being transferred
            to. If the call was not transferred, this will be empty.
        id:
          type: string
          description: This is the unique identifier for the call.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the org that this call belongs to.
          example: orgId
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the call was created.
          example: '2024-01-15T09:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the call was last
            updated.
          example: '2024-01-15T09:30:00Z'
        startedAt:
          type: string
          format: date-time
          nullable: true
          description: This is the ISO 8601 date-time string of when the call was started.
        endedAt:
          type: string
          format: date-time
          nullable: true
          description: This is the ISO 8601 date-time string of when the call was ended.
        cost:
          type: number
          format: double
          nullable: true
          description: This is the cost of the call in USD.
        costBreakdown:
          $ref: '#/components/schemas/CostBreakdown'
          nullable: true
          description: This is the cost of the call in USD.
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
          nullable: true
          description: >-
            This is a copy of assistant artifact plan. This isn't actually
            stored on the call but rather just returned in POST /call/web to
            enable artifact creation client side.
        analysis:
          $ref: '#/components/schemas/Analysis'
          nullable: true
          description: >-
            This is the analysis of the call. Configure in
            `assistant.analysisPlan`.
        monitor:
          $ref: '#/components/schemas/Monitor'
          nullable: true
          description: >-
            This is to real-time monitor the call. Configure in
            `assistant.monitorPlan`.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: >-
            These are the artifacts created from the call. Configure in
            `assistant.artifactPlan`.
        transport:
          $ref: '#/components/schemas/Transport'
          nullable: true
          description: This is the transport used for the call.
        phoneCallProviderId:
          type: string
          nullable: true
          description: >-
            The ID of the call as provided by the phone number service. callSid
            in Twilio. conversationUuid in Vonage. callControlId in Telnyx.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use a
            transient assistant, use `assistant` instead.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use an
            existing assistant, use `assistantId` instead.
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            These are the overrides for the `assistant` or `assistantId`'s
            settings and template variables.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for the call. To use a transient
            squad, use `squad` instead.
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
          nullable: true
          description: >-
            This is a squad that will be used for the call. To use an existing
            squad, use `squadId` instead.
        phoneNumberId:
          type: string
          nullable: true
          description: >-
            This is the phone number that will be used for the call. To use a
            transient number, use `phoneNumber` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        phoneNumber:
          $ref: '#/components/schemas/ImportTwilioPhoneNumberDto'
          nullable: true
          description: >-
            This is the phone number that will be used for the call. To use an
            existing number, use `phoneNumberId` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        customerId:
          type: string
          nullable: true
          description: >-
            This is the customer that will be called. To call a transient
            customer , use `customer` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: >-
            This is the customer that will be called. To call an existing
            customer, use `customerId` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        name:
          type: string
          nullable: true
          description: This is the name of the call. This is just for your own reference.
        schedulePlan:
          $ref: '#/components/schemas/SchedulePlan'
          nullable: true
          description: This is the schedule plan of the call.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    CallBatchError:
      title: CallBatchError
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
        error:
          type: string
      required:
        - customer
        - error
    CallBatchResponse:
      title: CallBatchResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Call'
          description: This is the list of calls that were created.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/CallBatchError'
          description: This is the list of calls that failed to be created.
      required:
        - results
        - errors
    PaginationMeta:
      title: PaginationMeta
      type: object
      properties:
        itemsPerPage:
          type: number
          format: double
        totalItems:
          type: number
          format: double
        currentPage:
          type: number
          format: double
      required:
        - itemsPerPage
        - totalItems
        - currentPage
    CallPaginatedResponse:
      title: CallPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Call'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
      required:
        - results
        - metadata
    CreateOutboundCallDto:
      title: CreateOutboundCallDto
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: >-
            This is used to issue batch calls to multiple customers.


            Only relevant for `outboundPhoneCall`. To call a single customer,
            use `customer` instead.
        name:
          type: string
          nullable: true
          description: This is the name of the call. This is just for your own reference.
        schedulePlan:
          $ref: '#/components/schemas/SchedulePlan'
          nullable: true
          description: This is the schedule plan of the call.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use a
            transient assistant, use `assistant` instead.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use an
            existing assistant, use `assistantId` instead.
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            These are the overrides for the `assistant` or `assistantId`'s
            settings and template variables.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for the call. To use a transient
            squad, use `squad` instead.
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
          nullable: true
          description: >-
            This is a squad that will be used for the call. To use an existing
            squad, use `squadId` instead.
        phoneNumberId:
          type: string
          nullable: true
          description: >-
            This is the phone number that will be used for the call. To use a
            transient number, use `phoneNumber` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        phoneNumber:
          $ref: '#/components/schemas/ImportTwilioPhoneNumberDto'
          nullable: true
          description: >-
            This is the phone number that will be used for the call. To use an
            existing number, use `phoneNumberId` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        customerId:
          type: string
          nullable: true
          description: >-
            This is the customer that will be called. To call a transient
            customer , use `customer` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: >-
            This is the customer that will be called. To call an existing
            customer, use `customerId` instead.


            Only relevant for `outboundPhoneCall` and `inboundPhoneCall` type.
    CreateWebCallDto:
      title: CreateWebCallDto
      type: object
      properties:
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use a
            transient assistant, use `assistant` instead.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use an
            existing assistant, use `assistantId` instead.
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            These are the overrides for the `assistant` or `assistantId`'s
            settings and template variables.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for the call. To use a transient
            squad, use `squad` instead.
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
          nullable: true
          description: >-
            This is a squad that will be used for the call. To use an existing
            squad, use `squadId` instead.
    ChatServiceResponse:
      title: ChatServiceResponse
      type: object
      properties: {}
    ChatCompletionMessageMetadata:
      title: ChatCompletionMessageMetadata
      type: object
      properties:
        taskName:
          type: string
        taskType:
          type: string
        taskOutput:
          type: string
        taskState:
          type: object
          additionalProperties: true
          nullable: true
        nodeTrace:
          type: array
          items:
            type: string
          nullable: true
      required:
        - taskName
        - taskType
        - taskOutput
    ChatCompletionMessageWorkflows:
      title: ChatCompletionMessageWorkflows
      type: object
      properties:
        role:
          type: object
          additionalProperties: true
        content:
          type: string
          nullable: true
        metadata:
          $ref: '#/components/schemas/ChatCompletionMessageMetadata'
          nullable: true
      required:
        - role
    Say:
      title: Say
      type: object
      properties:
        exact:
          type: string
          nullable: true
        prompt:
          type: string
          nullable: true
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the task.
      required:
        - name
    SayHook:
      title: SayHook
      type: object
      properties:
        type:
          type: string
          enum:
            - say
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the task.
        exact:
          type: string
          nullable: true
        prompt:
          type: string
          nullable: true
      required:
        - type
    HookOn:
      title: HookOn
      type: string
      enum:
        - task.start
        - task.output.confirmation
        - task.delayed
    Hook:
      title: Hook
      type: object
      properties:
        'on':
          $ref: '#/components/schemas/HookOn'
        do:
          type: array
          items:
            $ref: '#/components/schemas/SayHook'
      required:
        - 'on'
        - do
    Gather:
      title: Gather
      type: object
      properties:
        output:
          $ref: '#/components/schemas/JsonSchema'
        confirmContent:
          type: boolean
          nullable: true
          description: >-
            This is whether or not the workflow should read back the gathered
            data to the user, and ask about its correctness.
        hooks:
          type: array
          items:
            $ref: '#/components/schemas/Hook'
          nullable: true
          description: >-
            This is a list of hooks for a task.

            Each hook is a list of tasks to run on a trigger (such as on start,
            on failure, etc).

            Only Say is supported for now.
        maxRetries:
          type: number
          format: double
          nullable: true
          description: >-
            This is the number of times we should try to gather the information
            from the user before we failover to the fail path. An example of
            this would be a user refusing to give their phone number for privacy
            reasons, and then going down a different path on account of this
        literalTemplate:
          type: string
          nullable: true
          description: >-
            This is a liquid templating string. On the first call to Gather, the
            template will be filled out with variables from the context, and
            will be spoken verbatim to the user. An example would be "Base on
            your zipcode, it looks like you could be in one of these counties:
            {{ counties | join: ", " }}. Which one do you live in?"
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the task.
      required:
        - output
        - name
    ApiRequestMethod:
      title: ApiRequestMethod
      type: string
      enum:
        - POST
        - GET
    ApiRequestMode:
      title: ApiRequestMode
      type: string
      enum:
        - blocking
        - background
      description: |-
        This is the mode of the Api Request.
        We only support BLOCKING and BACKGROUND for now.
    ApiRequest:
      title: ApiRequest
      type: object
      properties:
        method:
          $ref: '#/components/schemas/ApiRequestMethod'
        url:
          type: string
          description: Api endpoint to send requests to.
        headers:
          $ref: '#/components/schemas/JsonSchema'
          nullable: true
          description: |-
            These are the custom headers to include in the Api Request sent.

            Each key-value pair represents a header name and its value.
        body:
          $ref: '#/components/schemas/JsonSchema'
          nullable: true
          description: >-
            This defined the JSON body of your Api Request. For example, if
            `body_schema`

            included "my_field": "my_gather_statement.user_age", then the json
            body sent to the server would have that particular value assign to
            it.

            Right now, only data from gather statements are supported.
        mode:
          $ref: '#/components/schemas/ApiRequestMode'
          description: |-
            This is the mode of the Api Request.
            We only support BLOCKING and BACKGROUND for now.
        hooks:
          type: array
          items:
            $ref: '#/components/schemas/Hook'
          nullable: true
          description: >-
            This is a list of hooks for a task.

            Each hook is a list of tasks to run on a trigger (such as on start,
            on failure, etc).

            Only Say is supported for now.
        output:
          $ref: '#/components/schemas/JsonSchema'
          nullable: true
          description: This is the schema for the outputs of the Api Request.
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the task.
      required:
        - method
        - url
        - mode
        - name
    Hangup:
      title: Hangup
      type: object
      properties:
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the task.
      required:
        - name
    Transfer:
      title: Transfer
      type: object
      properties:
        destination:
          type: object
          additionalProperties: true
        name:
          type: string
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the task.
      required:
        - destination
        - name
    CreateWorkflowDtoNodesItem:
      title: CreateWorkflowDtoNodesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - say
            - $ref: '#/components/schemas/Say'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - gather
            - $ref: '#/components/schemas/Gather'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - apiRequest
            - $ref: '#/components/schemas/ApiRequest'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - hangup
            - $ref: '#/components/schemas/Hangup'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transfer
            - $ref: '#/components/schemas/Transfer'
          required:
            - type
    CreateWorkflowDtoModel:
      title: CreateWorkflowDtoModel
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/AnthropicModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/AnyscaleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CerebrasModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CustomLlmModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/DeepInfraModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/DeepSeekModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/GroqModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/InflectionAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/OpenRouterModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/PerplexityAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/TogetherAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/XaiModel'
          required:
            - provider
      description: These are the options for the workflow's LLM.
    CreateWorkflowDto:
      title: CreateWorkflowDto
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/CreateWorkflowDtoNodesItem'
        model:
          $ref: '#/components/schemas/CreateWorkflowDtoModel'
          nullable: true
          description: These are the options for the workflow's LLM.
        name:
          type: string
          example: name
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
      required:
        - nodes
        - name
        - edges
    ChatCompletionsDto:
      title: ChatCompletionsDto
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionMessageWorkflows'
        workflowId:
          type: string
          nullable: true
        workflow:
          $ref: '#/components/schemas/CreateWorkflowDto'
          nullable: true
      required:
        - messages
    AssistantTranscriber:
      title: AssistantTranscriber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/AssemblyAiTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureSpeechTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-transcriber
            - $ref: '#/components/schemas/CustomTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/GladiaTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/SpeechmaticsTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - talkscriber
            - $ref: '#/components/schemas/TalkscriberTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleTranscriber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiTranscriber'
          required:
            - provider
      description: These are the options for the assistant's transcriber.
    AssistantModel:
      title: AssistantModel
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/AnyscaleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/AnthropicModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CerebrasModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CustomLlmModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/DeepInfraModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/DeepSeekModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/GroqModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/InflectionAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/OpenRouterModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/PerplexityAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/TogetherAiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiModel'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/XaiModel'
          required:
            - provider
      description: These are the options for the assistant's LLM.
    AssistantVoice:
      title: AssistantVoice
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/AzureVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CartesiaVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-voice
            - $ref: '#/components/schemas/CustomVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/DeepgramVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/ElevenLabsVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/HumeVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/LmntVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/NeuphonicVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/PlayHtVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/RimeAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/SmallestAiVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/TavusVoice'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiVoice'
          required:
            - provider
      description: These are the options for the assistant's voice.
    AssistantFirstMessageMode:
      title: AssistantFirstMessageMode
      type: string
      enum:
        - assistant-speaks-first
        - assistant-speaks-first-with-model-generated-message
        - assistant-waits-for-user
      description: >-
        This is the mode for the first message. Default is
        'assistant-speaks-first'.


        Use:

        - 'assistant-speaks-first' to have the assistant speak first.

        - 'assistant-waits-for-user' to have the assistant wait for the user to
        speak first.

        - 'assistant-speaks-first-with-model-generated-message' to have the
        assistant speak first with a message generated by the model based on the
        conversation state. (`assistant.model.messages` at call start,
        `call.messages` at squad transfer points).


        @default 'assistant-speaks-first'
    AssistantVoicemailDetection:
      title: AssistantVoicemailDetection
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/GoogleVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/OpenAiVoicemailDetectionPlan'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioVoicemailDetectionPlan'
          required:
            - provider
      description: >-
        These are the settings to configure or disable voicemail detection.
        Alternatively, voicemail detection can be configured using the
        model.tools=[VoicemailTool].

        This uses Twilio's built-in detection while the VoicemailTool relies on
        the model to detect if a voicemail was reached.

        You can use neither of them, one of them, or both of them. By default,
        Twilio built-in detection is enabled while VoicemailTool is not.
    AssistantClientMessagesItem:
      title: AssistantClientMessagesItem
      type: string
      enum:
        - conversation-update
        - function-call
        - function-call-result
        - hang
        - language-changed
        - metadata
        - model-output
        - speech-update
        - status-update
        - transcript
        - tool-calls
        - tool-calls-result
        - transfer-update
        - user-interrupted
        - voice-input
        - workflow.node.started
    AssistantServerMessagesItem:
      title: AssistantServerMessagesItem
      type: string
      enum:
        - conversation-update
        - end-of-call-report
        - function-call
        - hang
        - language-changed
        - language-change-detected
        - model-output
        - phone-call-control
        - speech-update
        - status-update
        - transcript
        - transcript[transcriptType='final']
        - tool-calls
        - transfer-destination-request
        - transfer-update
        - user-interrupted
        - voice-input
    AssistantBackgroundSoundZero:
      title: AssistantBackgroundSoundZero
      type: string
      enum:
        - 'off'
        - office
    AssistantBackgroundSound:
      title: AssistantBackgroundSound
      oneOf:
        - $ref: '#/components/schemas/AssistantBackgroundSoundZero'
        - type: string
      description: >-
        This is the background sound in the call. Default for phone calls is
        'office' and default for web calls is 'off'.

        You can also provide a custom sound by providing a URL to an audio file.
    AssistantCredentialsItem:
      title: AssistantCredentialsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - 11labs
            - $ref: '#/components/schemas/CreateElevenLabsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anthropic
            - $ref: '#/components/schemas/CreateAnthropicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - anyscale
            - $ref: '#/components/schemas/CreateAnyscaleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - assembly-ai
            - $ref: '#/components/schemas/CreateAssemblyAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure-openai
            - $ref: '#/components/schemas/CreateAzureOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - azure
            - $ref: '#/components/schemas/CreateAzureCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-sip-trunk
            - $ref: '#/components/schemas/CreateByoSipTrunkCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cartesia
            - $ref: '#/components/schemas/CreateCartesiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cerebras
            - $ref: '#/components/schemas/CreateCerebrasCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - cloudflare
            - $ref: '#/components/schemas/CreateCloudflareCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - custom-llm
            - $ref: '#/components/schemas/CreateCustomLlmCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepgram
            - $ref: '#/components/schemas/CreateDeepgramCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deepinfra
            - $ref: '#/components/schemas/CreateDeepInfraCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - deep-seek
            - $ref: '#/components/schemas/CreateDeepSeekCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gcp
            - $ref: '#/components/schemas/CreateGcpCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gladia
            - $ref: '#/components/schemas/CreateGladiaCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - gohighlevel
            - $ref: '#/components/schemas/CreateGoHighLevelCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google
            - $ref: '#/components/schemas/CreateGoogleCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - groq
            - $ref: '#/components/schemas/CreateGroqCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - inflection-ai
            - $ref: '#/components/schemas/CreateInflectionAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - langfuse
            - $ref: '#/components/schemas/CreateLangfuseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - lmnt
            - $ref: '#/components/schemas/CreateLmntCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openai
            - $ref: '#/components/schemas/CreateOpenAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - openrouter
            - $ref: '#/components/schemas/CreateOpenRouterCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - perplexity-ai
            - $ref: '#/components/schemas/CreatePerplexityAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - playht
            - $ref: '#/components/schemas/CreatePlayHtCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - rime-ai
            - $ref: '#/components/schemas/CreateRimeAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - runpod
            - $ref: '#/components/schemas/CreateRunpodCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - s3
            - $ref: '#/components/schemas/CreateS3CredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - supabase
            - $ref: '#/components/schemas/CreateSupabaseCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - smallest-ai
            - $ref: '#/components/schemas/CreateSmallestAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - tavus
            - $ref: '#/components/schemas/CreateTavusCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - together-ai
            - $ref: '#/components/schemas/CreateTogetherAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonageCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - webhook
            - $ref: '#/components/schemas/CreateWebhookCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - xai
            - $ref: '#/components/schemas/CreateXAiCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - neuphonic
            - $ref: '#/components/schemas/CreateNeuphonicCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - hume
            - $ref: '#/components/schemas/CreateHumeCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - mistral
            - $ref: '#/components/schemas/CreateMistralCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - speechmatics
            - $ref: '#/components/schemas/CreateSpeechmaticsCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - trieve
            - $ref: '#/components/schemas/CreateTrieveCredentialDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-client
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2ClientCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.calendar.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleCalendarOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - google.sheets.oauth2-authorization
            - $ref: >-
                #/components/schemas/CreateGoogleSheetsOAuth2AuthorizationCredentialDto
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - slack.oauth2-authorization
            - $ref: '#/components/schemas/CreateSlackOAuth2AuthorizationCredentialDto'
          required:
            - provider
    Assistant:
      title: Assistant
      type: object
      properties:
        transcriber:
          $ref: '#/components/schemas/AssistantTranscriber'
          nullable: true
          description: These are the options for the assistant's transcriber.
        model:
          $ref: '#/components/schemas/AssistantModel'
          nullable: true
          description: These are the options for the assistant's LLM.
        voice:
          $ref: '#/components/schemas/AssistantVoice'
          nullable: true
          description: These are the options for the assistant's voice.
        firstMessage:
          type: string
          nullable: true
          description: >-
            This is the first message that the assistant will say. This can also
            be a URL to a containerized audio file (mp3, wav, etc.).


            If unspecified, assistant will wait for user to speak and use the
            model to respond once they speak.
        firstMessageInterruptionsEnabled:
          type: boolean
          nullable: true
        firstMessageMode:
          $ref: '#/components/schemas/AssistantFirstMessageMode'
          nullable: true
          description: >-
            This is the mode for the first message. Default is
            'assistant-speaks-first'.


            Use:

            - 'assistant-speaks-first' to have the assistant speak first.

            - 'assistant-waits-for-user' to have the assistant wait for the user
            to speak first.

            - 'assistant-speaks-first-with-model-generated-message' to have the
            assistant speak first with a message generated by the model based on
            the conversation state. (`assistant.model.messages` at call start,
            `call.messages` at squad transfer points).


            @default 'assistant-speaks-first'
        voicemailDetection:
          $ref: '#/components/schemas/AssistantVoicemailDetection'
          nullable: true
          description: >-
            These are the settings to configure or disable voicemail detection.
            Alternatively, voicemail detection can be configured using the
            model.tools=[VoicemailTool].

            This uses Twilio's built-in detection while the VoicemailTool relies
            on the model to detect if a voicemail was reached.

            You can use neither of them, one of them, or both of them. By
            default, Twilio built-in detection is enabled while VoicemailTool is
            not.
        clientMessages:
          type: array
          items:
            $ref: '#/components/schemas/AssistantClientMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be sent to your Client SDKs.
            Default is
            conversation-update,function-call,hang,model-output,speech-update,status-update,transfer-update,transcript,tool-calls,user-interrupted,voice-input,workflow.node.started.
            You can check the shape of the messages in ClientMessage schema.
        serverMessages:
          type: array
          items:
            $ref: '#/components/schemas/AssistantServerMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be sent to your Server URL. Default
            is
            conversation-update,end-of-call-report,function-call,hang,speech-update,status-update,tool-calls,transfer-destination-request,user-interrupted.
            You can check the shape of the messages in ServerMessage schema.
        silenceTimeoutSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            How many seconds of silence to wait before ending the call. Defaults
            to 30.


            @default 30
        maxDurationSeconds:
          type: number
          format: double
          nullable: true
          description: >-
            This is the maximum number of seconds that the call will last. When
            the call reaches this duration, it will be ended.


            @default 600 (10 minutes)
        backgroundSound:
          $ref: '#/components/schemas/AssistantBackgroundSound'
          nullable: true
          description: >-
            This is the background sound in the call. Default for phone calls is
            'office' and default for web calls is 'off'.

            You can also provide a custom sound by providing a URL to an audio
            file.
        backgroundDenoisingEnabled:
          type: boolean
          nullable: true
          description: >-
            This enables filtering of noise and background speech while the user
            is talking.


            Default `false` while in beta.


            @default false
        modelOutputInMessagesEnabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the model's output is used in conversation
            history rather than the transcription of assistant's speech.


            Default `false` while in beta.


            @default false
        transportConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/TransportConfigurationTwilio'
          nullable: true
          description: >-
            These are the configurations to be passed to the transport providers
            of assistant's calls, like Twilio. You can store multiple
            configurations for different transport providers. For a call, only
            the configuration matching the call transport provider is used.
        observabilityPlan:
          $ref: '#/components/schemas/LangfuseObservabilityPlan'
          nullable: true
          description: >-
            This is the plan for observability configuration of assistant's
            calls.

            Currently supports Langfuse for tracing and monitoring.
        credentials:
          type: array
          items:
            $ref: '#/components/schemas/AssistantCredentialsItem'
          nullable: true
          description: >-
            These are dynamic credentials that will be used for the assistant
            calls. By default, all the credentials are available for use in the
            call but you can supplement an additional credentials using this.
            Dynamic credentials override existing credentials.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the assistant.


            This is required when you want to transfer between assistants in a
            call.
        voicemailMessage:
          type: string
          nullable: true
          description: >-
            This is the message that the assistant will say if the call is
            forwarded to voicemail.


            If unspecified, it will hang up.
        endCallMessage:
          type: string
          nullable: true
          description: |-
            This is the message that the assistant will say if it ends the call.

            If unspecified, it will hang up without saying anything.
        endCallPhrases:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This list contains phrases that, if spoken by the assistant, will
            trigger the call to be hung up. Case insensitive.
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: This is for metadata you want to store on the assistant.
        analysisPlan:
          $ref: '#/components/schemas/AnalysisPlan'
          nullable: true
          description: >-
            This is the plan for analysis of assistant's calls. Stored in
            `call.analysis`.
        artifactPlan:
          $ref: '#/components/schemas/ArtifactPlan'
          nullable: true
          description: >-
            This is the plan for artifacts generated during assistant's calls.
            Stored in `call.artifact`.


            Note: `recordingEnabled` is currently at the root level. It will be
            moved to `artifactPlan` in the future, but will remain backwards
            compatible.
        messagePlan:
          $ref: '#/components/schemas/MessagePlan'
          nullable: true
          description: >-
            This is the plan for static predefined messages that can be spoken
            by the assistant during the call, like `idleMessages`.


            Note: `firstMessage`, `voicemailMessage`, and `endCallMessage` are
            currently at the root level. They will be moved to `messagePlan` in
            the future, but will remain backwards compatible.
        startSpeakingPlan:
          $ref: '#/components/schemas/StartSpeakingPlan'
          nullable: true
          description: >-
            This is the plan for when the assistant should start talking.


            You should configure this if you're running into these issues:

            - The assistant is too slow to start talking after the customer is
            done speaking.

            - The assistant is too fast to start talking after the customer is
            done speaking.

            - The assistant is so fast that it's actually interrupting the
            customer.
        stopSpeakingPlan:
          $ref: '#/components/schemas/StopSpeakingPlan'
          nullable: true
          description: >-
            This is the plan for when assistant should stop talking on customer
            interruption.


            You should configure this if you're running into these issues:

            - The assistant is too slow to recognize customer's interruption.

            - The assistant is too fast to recognize customer's interruption.

            - The assistant is getting interrupted by phrases that are just
            acknowledgments.

            - The assistant is getting interrupted by background noises.

            - The assistant is not properly stopping -- it starts talking right
            after getting interrupted.
        monitorPlan:
          $ref: '#/components/schemas/MonitorPlan'
          nullable: true
          description: >-
            This is the plan for real-time monitoring of the assistant's calls.


            Usage:

            - To enable live listening of the assistant's calls, set
            `monitorPlan.listenEnabled` to `true`.

            - To enable live control of the assistant's calls, set
            `monitorPlan.controlEnabled` to `true`.


            Note, `serverMessages`, `clientMessages`, `serverUrl` and
            `serverUrlSecret` are currently at the root level but will be moved
            to `monitorPlan` in the future. Will remain backwards compatible
        credentialIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the credentials that will be used for the assistant calls.
            By default, all the credentials are available for use in the call
            but you can provide a subset using this.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server.url

            2. phoneNumber.serverUrl

            3. org.serverUrl
        hooks:
          type: array
          items:
            $ref: '#/components/schemas/AssistantHooks'
          nullable: true
          description: This is a set of actions that will be performed on certain events.
        keypadInputPlan:
          $ref: '#/components/schemas/KeypadInputPlan'
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the assistant.
          example: id
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this assistant
            belongs to.
          example: orgId
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was
            created.
          example: '2024-01-15T09:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
          example: '2024-01-15T09:30:00Z'
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    AssistantPaginatedResponse:
      title: AssistantPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Assistant'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
      required:
        - results
        - metadata
    ByoPhoneNumberFallbackDestination:
      title: ByoPhoneNumberFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    ByoPhoneNumberStatus:
      title: ByoPhoneNumberStatus
      type: string
      enum:
        - active
        - activating
        - blocked
      description: This is the status of the phone number.
    ByoPhoneNumber:
      title: ByoPhoneNumber
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/ByoPhoneNumberFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        numberE164CheckEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the flag to toggle the E164 check for the `number` field.
            This is an advanced property which should be used if you know your
            use case requires it.


            Use cases:

            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`,
            or `abc`. This is useful for dialing out to non-E164 numbers on your
            SIP trunks.

            - `true` (default): To allow only E164 numbers like `+14155551234`.
            This is standard for PSTN calls.


            If `false`, the `number` is still required to only contain
            alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).


            @default true (E164 check is enabled)
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this phone number
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            last updated.
        status:
          $ref: '#/components/schemas/ByoPhoneNumberStatus'
          nullable: true
          description: This is the status of the phone number.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          nullable: true
          description: This is the number of the customer.
        credentialId:
          type: string
          description: >-
            This is the credential of your own SIP trunk or Carrier (type
            `byo-sip-trunk`) which can be used to make calls to this phone
            number.


            You can add the SIP trunk or Carrier credential in the Provider
            Credentials page on the Dashboard to get the credentialId.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - credentialId
    TwilioPhoneNumberFallbackDestination:
      title: TwilioPhoneNumberFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    TwilioPhoneNumberStatus:
      title: TwilioPhoneNumberStatus
      type: string
      enum:
        - active
        - activating
        - blocked
      description: This is the status of the phone number.
    TwilioPhoneNumber:
      title: TwilioPhoneNumber
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/TwilioPhoneNumberFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this phone number
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            last updated.
        status:
          $ref: '#/components/schemas/TwilioPhoneNumberStatus'
          nullable: true
          description: This is the status of the phone number.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          description: These are the digits of the phone number you own on your Twilio.
        twilioAccountSid:
          type: string
          description: This is the Twilio Account SID for the phone number.
        twilioAuthToken:
          type: string
          description: This is the Twilio Auth Token for the phone number.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - number
        - twilioAccountSid
        - twilioAuthToken
    VonagePhoneNumberFallbackDestination:
      title: VonagePhoneNumberFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    VonagePhoneNumberStatus:
      title: VonagePhoneNumberStatus
      type: string
      enum:
        - active
        - activating
        - blocked
      description: This is the status of the phone number.
    VonagePhoneNumber:
      title: VonagePhoneNumber
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/VonagePhoneNumberFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this phone number
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            last updated.
        status:
          $ref: '#/components/schemas/VonagePhoneNumberStatus'
          nullable: true
          description: This is the status of the phone number.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          description: These are the digits of the phone number you own on your Vonage.
        credentialId:
          type: string
          description: >-
            This is the credential you added in dashboard.vapi.ai/keys. This is
            used to configure the number to send inbound calls to Vapi, make
            outbound calls and do live call updates like transfers and hangups.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - number
        - credentialId
    SipAuthentication:
      title: SipAuthentication
      type: object
      properties:
        realm:
          type: string
          nullable: true
          description: >-
            This will be expected in the `realm` field of the `authorization`
            header of the SIP INVITE. Defaults to sip.vapi.ai.
        username:
          type: string
          description: >-
            This will be expected in the `username` field of the `authorization`
            header of the SIP INVITE.
        password:
          type: string
          description: >-
            This will be expected to generate the `response` field of the
            `authorization` header of the SIP INVITE, through digest
            authentication.
      required:
        - username
        - password
    VapiPhoneNumberFallbackDestination:
      title: VapiPhoneNumberFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    VapiPhoneNumberStatus:
      title: VapiPhoneNumberStatus
      type: string
      enum:
        - active
        - activating
        - blocked
      description: This is the status of the phone number.
    VapiPhoneNumber:
      title: VapiPhoneNumber
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/VapiPhoneNumberFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this phone number
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            last updated.
        status:
          $ref: '#/components/schemas/VapiPhoneNumberStatus'
          nullable: true
          description: This is the status of the phone number.
        number:
          type: string
          nullable: true
          description: These are the digits of the phone number you purchased from Vapi.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        numberDesiredAreaCode:
          type: string
          nullable: true
          description: This is the area code of the phone number to purchase.
        sipUri:
          type: string
          nullable: true
          description: >-
            This is the SIP URI of the phone number. You can SIP INVITE this.
            The assistant attached to this number will answer.


            This is case-insensitive.
        authentication:
          $ref: '#/components/schemas/SipAuthentication'
          nullable: true
          description: >-
            This enables authentication for incoming SIP INVITE requests to the
            `sipUri`.


            If not set, any username/password to the 401 challenge of the SIP
            INVITE will be accepted.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    TelnyxPhoneNumberFallbackDestination:
      title: TelnyxPhoneNumberFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    TelnyxPhoneNumberStatus:
      title: TelnyxPhoneNumberStatus
      type: string
      enum:
        - active
        - activating
        - blocked
      description: This is the status of the phone number.
    TelnyxPhoneNumber:
      title: TelnyxPhoneNumber
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/TelnyxPhoneNumberFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        id:
          type: string
          description: This is the unique identifier for the phone number.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this phone number
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the phone number was
            last updated.
        status:
          $ref: '#/components/schemas/TelnyxPhoneNumberStatus'
          nullable: true
          description: This is the status of the phone number.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          description: These are the digits of the phone number you own on your Telnyx.
        credentialId:
          type: string
          description: >-
            This is the credential you added in dashboard.vapi.ai/keys. This is
            used to configure the number to send inbound calls to Vapi, make
            outbound calls and do live call updates like transfers and hangups.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - number
        - credentialId
    CreateByoPhoneNumberDtoFallbackDestination:
      title: CreateByoPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    CreateByoPhoneNumberDto:
      title: CreateByoPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateByoPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        numberE164CheckEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the flag to toggle the E164 check for the `number` field.
            This is an advanced property which should be used if you know your
            use case requires it.


            Use cases:

            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`,
            or `abc`. This is useful for dialing out to non-E164 numbers on your
            SIP trunks.

            - `true` (default): To allow only E164 numbers like `+14155551234`.
            This is standard for PSTN calls.


            If `false`, the `number` is still required to only contain
            alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).


            @default true (E164 check is enabled)
        number:
          type: string
          nullable: true
          description: This is the number of the customer.
        credentialId:
          type: string
          description: >-
            This is the credential of your own SIP trunk or Carrier (type
            `byo-sip-trunk`) which can be used to make calls to this phone
            number.


            You can add the SIP trunk or Carrier credential in the Provider
            Credentials page on the Dashboard to get the credentialId.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
      required:
        - credentialId
    CreateTwilioPhoneNumberDtoFallbackDestination:
      title: CreateTwilioPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    CreateTwilioPhoneNumberDto:
      title: CreateTwilioPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateTwilioPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        number:
          type: string
          description: These are the digits of the phone number you own on your Twilio.
        twilioAccountSid:
          type: string
          description: This is the Twilio Account SID for the phone number.
        twilioAuthToken:
          type: string
          description: This is the Twilio Auth Token for the phone number.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
      required:
        - number
        - twilioAccountSid
        - twilioAuthToken
    CreateVonagePhoneNumberDtoFallbackDestination:
      title: CreateVonagePhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    CreateVonagePhoneNumberDto:
      title: CreateVonagePhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateVonagePhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        number:
          type: string
          description: These are the digits of the phone number you own on your Vonage.
        credentialId:
          type: string
          description: >-
            This is the credential you added in dashboard.vapi.ai/keys. This is
            used to configure the number to send inbound calls to Vapi, make
            outbound calls and do live call updates like transfers and hangups.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
      required:
        - number
        - credentialId
    CreateVapiPhoneNumberDtoFallbackDestination:
      title: CreateVapiPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    CreateVapiPhoneNumberDto:
      title: CreateVapiPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateVapiPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        numberDesiredAreaCode:
          type: string
          nullable: true
          description: This is the area code of the phone number to purchase.
        sipUri:
          type: string
          nullable: true
          description: >-
            This is the SIP URI of the phone number. You can SIP INVITE this.
            The assistant attached to this number will answer.


            This is case-insensitive.
        authentication:
          $ref: '#/components/schemas/SipAuthentication'
          nullable: true
          description: >-
            This enables authentication for incoming SIP INVITE requests to the
            `sipUri`.


            If not set, any username/password to the 401 challenge of the SIP
            INVITE will be accepted.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
    CreateTelnyxPhoneNumberDtoFallbackDestination:
      title: CreateTelnyxPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    CreateTelnyxPhoneNumberDto:
      title: CreateTelnyxPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/CreateTelnyxPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        number:
          type: string
          description: These are the digits of the phone number you own on your Telnyx.
        credentialId:
          type: string
          description: >-
            This is the credential you added in dashboard.vapi.ai/keys. This is
            used to configure the number to send inbound calls to Vapi, make
            outbound calls and do live call updates like transfers and hangups.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
      required:
        - number
        - credentialId
    UpdateByoPhoneNumberDtoFallbackDestination:
      title: UpdateByoPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    UpdateByoPhoneNumberDto:
      title: UpdateByoPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateByoPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        numberE164CheckEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the flag to toggle the E164 check for the `number` field.
            This is an advanced property which should be used if you know your
            use case requires it.


            Use cases:

            - `false`: To allow non-E164 numbers like `+001234567890`, `1234`,
            or `abc`. This is useful for dialing out to non-E164 numbers on your
            SIP trunks.

            - `true` (default): To allow only E164 numbers like `+14155551234`.
            This is standard for PSTN calls.


            If `false`, the `number` is still required to only contain
            alphanumeric characters (regex: `/^\+?[a-zA-Z0-9]+$/`).


            @default true (E164 check is enabled)
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          nullable: true
          description: This is the number of the customer.
        credentialId:
          type: string
          nullable: true
          description: >-
            This is the credential of your own SIP trunk or Carrier (type
            `byo-sip-trunk`) which can be used to make calls to this phone
            number.


            You can add the SIP trunk or Carrier credential in the Provider
            Credentials page on the Dashboard to get the credentialId.
    UpdateTwilioPhoneNumberDtoFallbackDestination:
      title: UpdateTwilioPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    UpdateTwilioPhoneNumberDto:
      title: UpdateTwilioPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateTwilioPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          nullable: true
          description: These are the digits of the phone number you own on your Twilio.
        twilioAccountSid:
          type: string
          nullable: true
          description: This is the Twilio Account SID for the phone number.
        twilioAuthToken:
          type: string
          nullable: true
          description: This is the Twilio Auth Token for the phone number.
    UpdateVonagePhoneNumberDtoFallbackDestination:
      title: UpdateVonagePhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    UpdateVonagePhoneNumberDto:
      title: UpdateVonagePhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateVonagePhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          nullable: true
          description: These are the digits of the phone number you own on your Vonage.
        credentialId:
          type: string
          nullable: true
          description: >-
            This is the credential you added in dashboard.vapi.ai/keys. This is
            used to configure the number to send inbound calls to Vapi, make
            outbound calls and do live call updates like transfers and hangups.
    UpdateVapiPhoneNumberDtoFallbackDestination:
      title: UpdateVapiPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    UpdateVapiPhoneNumberDto:
      title: UpdateVapiPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateVapiPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        sipUri:
          type: string
          nullable: true
          description: >-
            This is the SIP URI of the phone number. You can SIP INVITE this.
            The assistant attached to this number will answer.


            This is case-insensitive.
        authentication:
          $ref: '#/components/schemas/SipAuthentication'
          nullable: true
          description: >-
            This enables authentication for incoming SIP INVITE requests to the
            `sipUri`.


            If not set, any username/password to the 401 challenge of the SIP
            INVITE will be accepted.
    UpdateTelnyxPhoneNumberDtoFallbackDestination:
      title: UpdateTelnyxPhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    UpdateTelnyxPhoneNumberDto:
      title: UpdateTelnyxPhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/UpdateTelnyxPhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        number:
          type: string
          nullable: true
          description: These are the digits of the phone number you own on your Telnyx.
        credentialId:
          type: string
          nullable: true
          description: >-
            This is the credential you added in dashboard.vapi.ai/keys. This is
            used to configure the number to send inbound calls to Vapi, make
            outbound calls and do live call updates like transfers and hangups.
    ImportVonagePhoneNumberDtoFallbackDestination:
      title: ImportVonagePhoneNumberDtoFallbackDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the fallback destination an inbound call will be transferred to
        if:

        1. `assistantId` is not set

        2. `squadId` is not set

        3. and, `assistant-request` message to the `serverUrl` fails


        If this is not set and above conditions are met, the inbound call is
        hung up with an error message.
    ImportVonagePhoneNumberDto:
      title: ImportVonagePhoneNumberDto
      type: object
      properties:
        fallbackDestination:
          $ref: '#/components/schemas/ImportVonagePhoneNumberDtoFallbackDestination'
          nullable: true
          description: >-
            This is the fallback destination an inbound call will be transferred
            to if:

            1. `assistantId` is not set

            2. `squadId` is not set

            3. and, `assistant-request` message to the `serverUrl` fails


            If this is not set and above conditions are met, the inbound call is
            hung up with an error message.
        vonagePhoneNumber:
          type: string
          description: These are the digits of the phone number you own on your Vonage.
        credentialId:
          type: string
          description: >-
            This is the credential you added in dashboard.vapi.ai/keys. This is
            used to configure the number to send inbound calls to Vapi, make
            outbound calls and do live call updates like transfers and hangups.
        name:
          type: string
          nullable: true
          description: >-
            This is the name of the phone number. This is just for your own
            reference.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for incoming calls to this
            phone number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for incoming calls to this phone
            number.


            If neither `assistantId` nor `squadId` is set, `assistant-request`
            will be sent to your Server URL. Check `ServerMessage` and
            `ServerMessageResponse` for the shape of the message and response
            that is expected.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
      required:
        - vonagePhoneNumber
        - credentialId
    PhoneNumberPaginatedResponseResultsItem:
      title: PhoneNumberPaginatedResponseResultsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/ByoPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/TwilioPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/VonagePhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiPhoneNumber'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - telnyx
            - $ref: '#/components/schemas/TelnyxPhoneNumber'
          required:
            - provider
    PhoneNumberPaginatedResponse:
      title: PhoneNumberPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumberPaginatedResponseResultsItem'
          description: A list of phone numbers, which can be of any provider type.
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
          description: Metadata about the pagination.
      required:
        - results
        - metadata
    DtmfToolMessagesItem:
      title: DtmfToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    DtmfTool:
      title: DtmfTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/DtmfToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    EndCallToolMessagesItem:
      title: EndCallToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    EndCallTool:
      title: EndCallTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/EndCallToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    FunctionToolMessagesItem:
      title: FunctionToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    FunctionTool:
      title: FunctionTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/FunctionToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    GhlToolMessagesItem:
      title: GhlToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    GhlTool:
      title: GhlTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GhlToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - metadata
    MakeToolMessagesItem:
      title: MakeToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    MakeTool:
      title: MakeTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MakeToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - metadata
    TransferCallToolMessagesItem:
      title: TransferCallToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    TransferCallToolDestinationsItem:
      title: TransferCallToolDestinationsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - assistant
            - $ref: '#/components/schemas/TransferDestinationAssistant'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - step
            - $ref: '#/components/schemas/TransferDestinationStep'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
    TransferCallTool:
      title: TransferCallTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/TransferCallToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/TransferCallToolDestinationsItem'
          nullable: true
          description: >-
            These are the destinations that the call can be transferred to. If
            no destinations are provided, server.url will be used to get the
            transfer destination once the tool is called.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    OutputToolMessagesItem:
      title: OutputToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    OutputTool:
      title: OutputTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OutputToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    BashToolMessagesItem:
      title: BashToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    BashTool:
      title: BashTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/BashToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - bash_20241022
          description: The sub type of tool.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        name:
          type: string
          enum:
            - bash
          description: The name of the tool, fixed to 'bash'
      required:
        - subType
        - id
        - orgId
        - createdAt
        - updatedAt
        - name
    ComputerToolMessagesItem:
      title: ComputerToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    ComputerTool:
      title: ComputerTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ComputerToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - computer_20241022
          description: The sub type of tool.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        name:
          type: string
          enum:
            - computer
          description: The name of the tool, fixed to 'computer'
        displayWidthPx:
          type: number
          format: double
          description: The display width in pixels
        displayHeightPx:
          type: number
          format: double
          description: The display height in pixels
        displayNumber:
          type: number
          format: double
          nullable: true
          description: Optional display number
      required:
        - subType
        - id
        - orgId
        - createdAt
        - updatedAt
        - name
        - displayWidthPx
        - displayHeightPx
    TextEditorToolMessagesItem:
      title: TextEditorToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    TextEditorTool:
      title: TextEditorTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/TextEditorToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - text_editor_20241022
          description: The sub type of tool.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        name:
          type: string
          enum:
            - str_replace_editor
          description: The name of the tool, fixed to 'str_replace_editor'
      required:
        - subType
        - id
        - orgId
        - createdAt
        - updatedAt
        - name
    QueryToolMessagesItem:
      title: QueryToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    QueryTool:
      title: QueryTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/QueryToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        knowledgeBases:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBase'
          nullable: true
          description: The knowledge bases to query
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    GoogleCalendarCreateEventToolMessagesItem:
      title: GoogleCalendarCreateEventToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    GoogleCalendarCreateEventTool:
      title: GoogleCalendarCreateEventTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleCalendarCreateEventToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    GoogleSheetsRowAppendToolMessagesItem:
      title: GoogleSheetsRowAppendToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    GoogleSheetsRowAppendTool:
      title: GoogleSheetsRowAppendTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GoogleSheetsRowAppendToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    GoogleCalendarCheckAvailabilityToolMessagesItem:
      title: GoogleCalendarCheckAvailabilityToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    GoogleCalendarCheckAvailabilityTool:
      title: GoogleCalendarCheckAvailabilityTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCalendarCheckAvailabilityToolMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    SlackSendMessageToolMessagesItem:
      title: SlackSendMessageToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    SlackSendMessageTool:
      title: SlackSendMessageTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/SlackSendMessageToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    McpToolMessagesItem:
      title: McpToolMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    McpTool:
      title: McpTool
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/McpToolMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        id:
          type: string
          description: This is the unique identifier for the tool.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization that this tool
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the tool was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the tool was last
            updated.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    CreateOutputToolDtoMessagesItem:
      title: CreateOutputToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateOutputToolDto:
      title: CreateOutputToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateOutputToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    CreateBashToolDtoMessagesItem:
      title: CreateBashToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateBashToolDto:
      title: CreateBashToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateBashToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - bash_20241022
          description: The sub type of tool.
        name:
          type: string
          enum:
            - bash
          description: The name of the tool, fixed to 'bash'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - subType
        - name
    CreateComputerToolDtoMessagesItem:
      title: CreateComputerToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateComputerToolDto:
      title: CreateComputerToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateComputerToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - computer_20241022
          description: The sub type of tool.
        name:
          type: string
          enum:
            - computer
          description: The name of the tool, fixed to 'computer'
        displayWidthPx:
          type: number
          format: double
          description: The display width in pixels
        displayHeightPx:
          type: number
          format: double
          description: The display height in pixels
        displayNumber:
          type: number
          format: double
          nullable: true
          description: Optional display number
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - subType
        - name
        - displayWidthPx
        - displayHeightPx
    CreateTextEditorToolDtoMessagesItem:
      title: CreateTextEditorToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateTextEditorToolDto:
      title: CreateTextEditorToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateTextEditorToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - text_editor_20241022
          description: The sub type of tool.
        name:
          type: string
          enum:
            - str_replace_editor
          description: The name of the tool, fixed to 'str_replace_editor'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - subType
        - name
    CreateMcpToolDtoMessagesItem:
      title: CreateMcpToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    CreateMcpToolDto:
      title: CreateMcpToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/CreateMcpToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateDtmfToolDtoMessagesItem:
      title: UpdateDtmfToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateDtmfToolDto:
      title: UpdateDtmfToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateDtmfToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateEndCallToolDtoMessagesItem:
      title: UpdateEndCallToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateEndCallToolDto:
      title: UpdateEndCallToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateEndCallToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateFunctionToolDtoMessagesItem:
      title: UpdateFunctionToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateFunctionToolDto:
      title: UpdateFunctionToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFunctionToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateGhlToolDtoMessagesItem:
      title: UpdateGhlToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateGhlToolDto:
      title: UpdateGhlToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateGhlToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
          nullable: true
    UpdateMakeToolDtoMessagesItem:
      title: UpdateMakeToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateMakeToolDto:
      title: UpdateMakeToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateMakeToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
          nullable: true
    UpdateTransferCallToolDtoMessagesItem:
      title: UpdateTransferCallToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateTransferCallToolDtoDestinationsItem:
      title: UpdateTransferCallToolDtoDestinationsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - assistant
            - $ref: '#/components/schemas/TransferDestinationAssistant'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - step
            - $ref: '#/components/schemas/TransferDestinationStep'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
    UpdateTransferCallToolDto:
      title: UpdateTransferCallToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTransferCallToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTransferCallToolDtoDestinationsItem'
          nullable: true
          description: >-
            These are the destinations that the call can be transferred to. If
            no destinations are provided, server.url will be used to get the
            transfer destination once the tool is called.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateOutputToolDtoMessagesItem:
      title: UpdateOutputToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateOutputToolDto:
      title: UpdateOutputToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateOutputToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateBashToolDtoMessagesItem:
      title: UpdateBashToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateBashToolDto:
      title: UpdateBashToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateBashToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - bash_20241022
          nullable: true
          description: The sub type of tool.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        name:
          type: string
          enum:
            - bash
          nullable: true
          description: The name of the tool, fixed to 'bash'
    UpdateComputerToolDtoMessagesItem:
      title: UpdateComputerToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateComputerToolDto:
      title: UpdateComputerToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateComputerToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - computer_20241022
          nullable: true
          description: The sub type of tool.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        name:
          type: string
          enum:
            - computer
          nullable: true
          description: The name of the tool, fixed to 'computer'
        displayWidthPx:
          type: number
          format: double
          nullable: true
          description: The display width in pixels
        displayHeightPx:
          type: number
          format: double
          nullable: true
          description: The display height in pixels
        displayNumber:
          type: number
          format: double
          nullable: true
          description: Optional display number
    UpdateTextEditorToolDtoMessagesItem:
      title: UpdateTextEditorToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateTextEditorToolDto:
      title: UpdateTextEditorToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTextEditorToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - text_editor_20241022
          nullable: true
          description: The sub type of tool.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
        name:
          type: string
          enum:
            - str_replace_editor
          nullable: true
          description: The name of the tool, fixed to 'str_replace_editor'
    UpdateQueryToolDtoMessagesItem:
      title: UpdateQueryToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateQueryToolDto:
      title: UpdateQueryToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateQueryToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        knowledgeBases:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBase'
          nullable: true
          description: The knowledge bases to query
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateGoogleCalendarCreateEventToolDtoMessagesItem:
      title: UpdateGoogleCalendarCreateEventToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateGoogleCalendarCreateEventToolDto:
      title: UpdateGoogleCalendarCreateEventToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/UpdateGoogleCalendarCreateEventToolDtoMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateGoogleSheetsRowAppendToolDtoMessagesItem:
      title: UpdateGoogleSheetsRowAppendToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateGoogleSheetsRowAppendToolDto:
      title: UpdateGoogleSheetsRowAppendToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/UpdateGoogleSheetsRowAppendToolDtoMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateGoogleCalendarCheckAvailabilityToolDtoMessagesItem:
      title: UpdateGoogleCalendarCheckAvailabilityToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateGoogleCalendarCheckAvailabilityToolDto:
      title: UpdateGoogleCalendarCheckAvailabilityToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/UpdateGoogleCalendarCheckAvailabilityToolDtoMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateSlackSendMessageToolDtoMessagesItem:
      title: UpdateSlackSendMessageToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateSlackSendMessageToolDto:
      title: UpdateSlackSendMessageToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSlackSendMessageToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    UpdateMcpToolDtoMessagesItem:
      title: UpdateMcpToolDtoMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    UpdateMcpToolDto:
      title: UpdateMcpToolDto
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateMcpToolDtoMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
    FileStatus:
      title: FileStatus
      type: string
      enum:
        - processing
        - done
        - failed
    File:
      title: File
      type: object
      properties:
        object:
          type: string
          enum:
            - file
          nullable: true
        status:
          $ref: '#/components/schemas/FileStatus'
          nullable: true
        name:
          type: string
          nullable: true
          description: This is the name of the file. This is just for your own reference.
        originalName:
          type: string
          nullable: true
        bytes:
          type: number
          format: double
          nullable: true
        purpose:
          type: string
          nullable: true
        mimetype:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        bucket:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        parsedTextUrl:
          type: string
          nullable: true
        parsedTextBytes:
          type: number
          format: double
          nullable: true
        metadata:
          type: object
          additionalProperties: true
          nullable: true
        id:
          type: string
          description: This is the unique identifier for the file.
          example: id
        orgId:
          type: string
          description: This is the unique identifier for the org that this file belongs to.
          example: orgId
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the file was created.
          example: '2024-01-15T09:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the file was last
            updated.
          example: '2024-01-15T09:30:00Z'
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    TrieveKnowledgeBaseSearchPlanSearchType:
      title: TrieveKnowledgeBaseSearchPlanSearchType
      type: string
      enum:
        - fulltext
        - semantic
        - hybrid
        - bm25
      description: >-
        This is the search method used when searching for relevant chunks from
        the vector store.
    TrieveKnowledgeBaseSearchPlan:
      title: TrieveKnowledgeBaseSearchPlan
      type: object
      properties:
        topK:
          type: number
          format: double
          nullable: true
          description: >-
            Specifies the number of top chunks to return. This corresponds to
            the `page_size` parameter in Trieve.
        removeStopWords:
          type: boolean
          nullable: true
          description: >-
            If true, stop words (specified in server/src/stop-words.txt in the
            git repo) will be removed. This will preserve queries that are
            entirely stop words.
        scoreThreshold:
          type: number
          format: double
          nullable: true
          description: >-
            This is the score threshold to filter out chunks with a score below
            the threshold for cosine distance metric. For Manhattan Distance,
            Euclidean Distance, and Dot Product, it will filter out scores above
            the threshold distance. This threshold applies before weight and
            bias modifications. If not specified, this defaults to no threshold.
            A threshold of 0 will default to no threshold.
        searchType:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlanSearchType'
          description: >-
            This is the search method used when searching for relevant chunks
            from the vector store.
      required:
        - searchType
    TrieveKnowledgeBase:
      title: TrieveKnowledgeBase
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of the knowledge base.
        searchPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlan'
          nullable: true
          description: >-
            This is the searching plan used when searching for relevant chunks
            from the vector store.


            You should configure this if you're running into these issues:

            - Too much unnecessary context is being fed as knowledge base
            context.

            - Not enough relevant context is being fed as knowledge base
            context.
        createPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseImport'
          nullable: true
          description: >-
            This is the plan if you want us to create/import a new vector store
            using Trieve.
        id:
          type: string
          description: This is the id of the knowledge base.
        orgId:
          type: string
          description: This is the org id of the knowledge base.
      required:
        - id
        - orgId
    CustomKnowledgeBase:
      title: CustomKnowledgeBase
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          description: |-
            This is where the knowledge base request will be sent.

            Request Example:

            POST https://{server.url}
            Content-Type: application/json

            {
              "messsage": {
                "type": "knowledge-base-request",
                "messages": [
                  {
                    "role": "user",
                    "content": "Why is ocean blue?"
                  }
                ],
                ...other metadata about the call...
              }
            }

            Response Expected:
            ```
            {
              "message": {
                 "role": "assistant",
                 "content": "The ocean is blue because water absorbs everything but blue.",
              }, // YOU CAN RETURN THE EXACT RESPONSE TO SPEAK
              "documents": [
                {
                  "content": "The ocean is blue primarily because water absorbs colors in the red part of the light spectrum and scatters the blue light, making it more visible to our eyes.",
                  "similarity": 1
                },
                {
                  "content": "Blue light is scattered more by the water molecules than other colors, enhancing the blue appearance of the ocean.",
                  "similarity": .5
                }
              ] // OR, YOU CAN RETURN AN ARRAY OF DOCUMENTS THAT WILL BE SENT TO THE MODEL
            }
            ```
        id:
          type: string
          description: This is the id of the knowledge base.
        orgId:
          type: string
          description: This is the org id of the knowledge base.
      required:
        - server
        - id
        - orgId
    CreateTrieveKnowledgeBaseDto:
      title: CreateTrieveKnowledgeBaseDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of the knowledge base.
        searchPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlan'
          nullable: true
          description: >-
            This is the searching plan used when searching for relevant chunks
            from the vector store.


            You should configure this if you're running into these issues:

            - Too much unnecessary context is being fed as knowledge base
            context.

            - Not enough relevant context is being fed as knowledge base
            context.
        createPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseImport'
          nullable: true
          description: >-
            This is the plan if you want us to create/import a new vector store
            using Trieve.
    UpdateTrieveKnowledgeBaseDto:
      title: UpdateTrieveKnowledgeBaseDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of the knowledge base.
        searchPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseSearchPlan'
          nullable: true
          description: >-
            This is the searching plan used when searching for relevant chunks
            from the vector store.


            You should configure this if you're running into these issues:

            - Too much unnecessary context is being fed as knowledge base
            context.

            - Not enough relevant context is being fed as knowledge base
            context.
        createPlan:
          $ref: '#/components/schemas/TrieveKnowledgeBaseImport'
          nullable: true
          description: >-
            This is the plan if you want us to create/import a new vector store
            using Trieve.
    UpdateCustomKnowledgeBaseDto:
      title: UpdateCustomKnowledgeBaseDto
      type: object
      properties:
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: |-
            This is where the knowledge base request will be sent.

            Request Example:

            POST https://{server.url}
            Content-Type: application/json

            {
              "messsage": {
                "type": "knowledge-base-request",
                "messages": [
                  {
                    "role": "user",
                    "content": "Why is ocean blue?"
                  }
                ],
                ...other metadata about the call...
              }
            }

            Response Expected:
            ```
            {
              "message": {
                 "role": "assistant",
                 "content": "The ocean is blue because water absorbs everything but blue.",
              }, // YOU CAN RETURN THE EXACT RESPONSE TO SPEAK
              "documents": [
                {
                  "content": "The ocean is blue primarily because water absorbs colors in the red part of the light spectrum and scatters the blue light, making it more visible to our eyes.",
                  "similarity": 1
                },
                {
                  "content": "Blue light is scattered more by the water molecules than other colors, enhancing the blue appearance of the ocean.",
                  "similarity": .5
                }
              ] // OR, YOU CAN RETURN AN ARRAY OF DOCUMENTS THAT WILL BE SENT TO THE MODEL
            }
            ```
    TrieveKnowledgeBaseChunkPlan:
      title: TrieveKnowledgeBaseChunkPlan
      type: object
      properties:
        fileIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            These are the file ids that will be used to create the vector store.
            To upload files, use the `POST /files` endpoint.
        websites:
          type: array
          items:
            type: string
          nullable: true
          description: These are the websites that will be used to create the vector store.
        targetSplitsPerChunk:
          type: number
          format: double
          nullable: true
          description: >-
            This is an optional field which allows you to specify the number of
            splits you want per chunk. If not specified, the default 20 is used.
            However, you may want to use a different number.
        splitDelimiters:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This is an optional field which allows you to specify the delimiters
            to use when splitting the file before chunking the text. If not
            specified, the default [.!?\n] are used to split into sentences.
            However, you may want to use spaces or other delimiters.
        rebalanceChunks:
          type: boolean
          nullable: true
          description: >-
            This is an optional field which allows you to specify whether or not
            to rebalance the chunks created from the file. If not specified, the
            default true is used. If true, Trieve will evenly distribute
            remainder splits across chunks such that 66 splits with a
            target_splits_per_chunk of 20 will result in 3 chunks with 22 splits
            each.
    TrieveKnowledgeBaseCreate:
      title: TrieveKnowledgeBaseCreate
      type: object
      properties:
        type:
          type: string
          enum:
            - create
          description: This is to create a new dataset on Trieve.
        chunkPlans:
          type: array
          items:
            $ref: '#/components/schemas/TrieveKnowledgeBaseChunkPlan'
          description: These are the chunk plans used to create the dataset.
      required:
        - type
        - chunkPlans
    TrieveKnowledgeBaseImport:
      title: TrieveKnowledgeBaseImport
      type: object
      properties:
        type:
          type: string
          enum:
            - import
          description: This is to import an existing dataset from Trieve.
        providerId:
          type: string
          description: This is the `datasetId` of the dataset on your Trieve account.
      required:
        - type
        - providerId
    Squad:
      title: Squad
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of the squad.
        members:
          type: array
          items:
            $ref: '#/components/schemas/SquadMemberDto'
          description: |-
            This is the list of assistants that make up the squad.

            The call will start with the first assistant in the list.
        membersOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            This can be used to override all the assistants' settings and
            provide values for their template variables.


            Both `membersOverrides` and `members[n].assistantOverrides` can be
            used together. First, `members[n].assistantOverrides` is applied.
            Then, `membersOverrides` is applied as a global override.
        id:
          type: string
          description: This is the unique identifier for the squad.
          example: id
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this squad belongs
            to.
          example: orgId
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the squad was created.
          example: '2024-01-15T09:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the squad was last
            updated.
          example: '2024-01-15T09:30:00Z'
      required:
        - members
        - id
        - orgId
        - createdAt
        - updatedAt
    TesterPlan:
      title: TesterPlan
      type: object
      properties:
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            Pass a transient assistant to use for the test assistant.


            Make sure to write a detailed system prompt for a test assistant,
            and use the {{test.script}} variable to access the test script.
        assistantId:
          type: string
          nullable: true
          description: >-
            Pass an assistant id that can be access


            Make sure to write a detailed system prompt for the test assistant,
            and use the {{test.script}} variable to access the test script.
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            Add any assistant overrides to the test assistant.


            One use case is if you want to pass custom variables into the test
            using variableValues, that you can then access in the script

            and rubric using {{varName}}.
    TestSuitePhoneNumber:
      title: TestSuitePhoneNumber
      type: object
      properties:
        provider:
          type: string
          enum:
            - test-suite
          description: This is the provider of the phone number.
        number:
          type: string
          description: This is the phone number that is being tested.
      required:
        - provider
        - number
    TargetPlan:
      title: TargetPlan
      type: object
      properties:
        phoneNumberId:
          type: string
          nullable: true
          description: This is the phoneNumberId that is being tested.
        phoneNumber:
          $ref: '#/components/schemas/TestSuitePhoneNumber'
          nullable: true
          description: >-
            This is the phone number that is being tested. Only use this if you
            have not imported the phone number to Vapi.
    TestSuite:
      title: TestSuite
      type: object
      properties:
        id:
          type: string
          description: This is the unique identifier for the test suite.
          example: id
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this test suite
            belongs to.
          example: orgId
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the test suite was
            created.
          example: '2024-01-15T09:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the test suite was
            last updated.
          example: '2024-01-15T09:30:00Z'
        name:
          type: string
          nullable: true
          description: This is the name of the test suite.
        phoneNumberId:
          type: string
          nullable: true
          description: This is the phone number ID associated with this test suite.
        testerPlan:
          $ref: '#/components/schemas/TesterPlan'
          nullable: true
          description: >-
            Override the default tester plan by providing custom assistant
            configuration for the test agent.


            We recommend only using this if you are confident, as we have
            already set sensible defaults on the tester plan.
        targetPlan:
          $ref: '#/components/schemas/TargetPlan'
          nullable: true
          description: >-
            These are the configuration for the assistant / phone number that is
            being tested.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
    TestSuitesPaginatedResponse:
      title: TestSuitesPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuite'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
      required:
        - results
        - metadata
    TestSuiteTestVoice:
      title: TestSuiteTestVoice
      type: object
      properties:
        scorers:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
          description: These are the scorers used to evaluate the test.
        id:
          type: string
          description: This is the unique identifier for the test.
        testSuiteId:
          type: string
          description: >-
            This is the unique identifier for the test suite this test belongs
            to.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization this test belongs
            to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the test was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the test was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of the test.
        script:
          type: string
          description: This is the script to be used for the voice test.
        numAttempts:
          type: number
          format: double
          nullable: true
          description: This is the number of attempts allowed for the test.
      required:
        - scorers
        - id
        - testSuiteId
        - orgId
        - createdAt
        - updatedAt
        - script
    TestSuiteTestChat:
      title: TestSuiteTestChat
      type: object
      properties:
        scorers:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
          description: These are the scorers used to evaluate the test.
        id:
          type: string
          description: This is the unique identifier for the test.
        testSuiteId:
          type: string
          description: >-
            This is the unique identifier for the test suite this test belongs
            to.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization this test belongs
            to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the test was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the test was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of the test.
        script:
          type: string
          description: This is the script to be used for the chat test.
        numAttempts:
          type: number
          format: double
          nullable: true
          description: This is the number of attempts allowed for the test.
      required:
        - scorers
        - id
        - testSuiteId
        - orgId
        - createdAt
        - updatedAt
        - script
    CreateTestSuiteTestVoiceDto:
      title: CreateTestSuiteTestVoiceDto
      type: object
      properties:
        scorers:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
          description: These are the scorers used to evaluate the test.
        script:
          type: string
          description: This is the script to be used for the voice test.
        numAttempts:
          type: number
          format: double
          nullable: true
          description: This is the number of attempts allowed for the test.
        name:
          type: string
          nullable: true
          description: This is the name of the test.
      required:
        - scorers
        - script
    CreateTestSuiteTestChatDto:
      title: CreateTestSuiteTestChatDto
      type: object
      properties:
        scorers:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
          description: These are the scorers used to evaluate the test.
        script:
          type: string
          description: This is the script to be used for the chat test.
        numAttempts:
          type: number
          format: double
          nullable: true
          description: This is the number of attempts allowed for the test.
        name:
          type: string
          nullable: true
          description: This is the name of the test.
      required:
        - scorers
        - script
    UpdateTestSuiteTestVoiceDto:
      title: UpdateTestSuiteTestVoiceDto
      type: object
      properties:
        scorers:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
          nullable: true
          description: These are the scorers used to evaluate the test.
        name:
          type: string
          nullable: true
          description: This is the name of the test.
        script:
          type: string
          nullable: true
          description: This is the script to be used for the voice test.
        numAttempts:
          type: number
          format: double
          nullable: true
          description: This is the number of attempts allowed for the test.
    UpdateTestSuiteTestChatDto:
      title: UpdateTestSuiteTestChatDto
      type: object
      properties:
        scorers:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestScorerAi'
          nullable: true
          description: These are the scorers used to evaluate the test.
        name:
          type: string
          nullable: true
          description: This is the name of the test.
        script:
          type: string
          nullable: true
          description: This is the script to be used for the chat test.
        numAttempts:
          type: number
          format: double
          nullable: true
          description: This is the number of attempts allowed for the test.
    TestSuiteTestScorerAi:
      title: TestSuiteTestScorerAi
      type: object
      properties:
        type:
          type: string
          enum:
            - ai
          description: This is the type of the scorer, which must be AI.
        rubric:
          type: string
          description: This is the rubric used by the AI scorer.
      required:
        - type
        - rubric
    TestSuiteTestsPaginatedResponseResultsItem:
      title: TestSuiteTestsPaginatedResponseResultsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/TestSuiteTestVoice'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - chat
            - $ref: '#/components/schemas/TestSuiteTestChat'
          required:
            - type
    TestSuiteTestsPaginatedResponse:
      title: TestSuiteTestsPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteTestsPaginatedResponseResultsItem'
          description: A list of test suite tests.
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
          description: Metadata about the pagination.
      required:
        - results
        - metadata
    TestSuiteRunScorerAiResult:
      title: TestSuiteRunScorerAiResult
      type: string
      enum:
        - pass
        - fail
      description: This is the result of the test suite.
    TestSuiteRunScorerAi:
      title: TestSuiteRunScorerAi
      type: object
      properties:
        type:
          type: string
          enum:
            - ai
          description: This is the type of the scorer, which must be AI.
        result:
          $ref: '#/components/schemas/TestSuiteRunScorerAiResult'
          description: This is the result of the test suite.
        reasoning:
          type: string
          description: This is the reasoning provided by the AI scorer.
        rubric:
          type: string
          description: This is the rubric used by the AI scorer.
      required:
        - type
        - result
        - reasoning
        - rubric
    TestSuiteRunTestAttemptCall:
      title: TestSuiteRunTestAttemptCall
      type: object
      properties:
        artifact:
          $ref: '#/components/schemas/Artifact'
          description: This is the artifact of the call.
      required:
        - artifact
    TestSuiteRunTestAttemptMetadata:
      title: TestSuiteRunTestAttemptMetadata
      type: object
      properties:
        sessionId:
          type: string
          description: This is the session ID for the test attempt.
      required:
        - sessionId
    TestSuiteRunTestAttempt:
      title: TestSuiteRunTestAttempt
      type: object
      properties:
        scorerResults:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRunScorerAi'
          description: >-
            These are the results of the scorers used to evaluate the test
            attempt.
        call:
          $ref: '#/components/schemas/TestSuiteRunTestAttemptCall'
          nullable: true
          description: This is the call made during the test attempt.
        callId:
          type: string
          nullable: true
          description: This is the call ID for the test attempt.
        metadata:
          $ref: '#/components/schemas/TestSuiteRunTestAttemptMetadata'
          nullable: true
          description: This is the metadata for the test attempt.
      required:
        - scorerResults
    TestSuiteRunTestResult:
      title: TestSuiteRunTestResult
      type: object
      properties:
        test:
          $ref: '#/components/schemas/TestSuiteTestVoice'
          description: This is the test that was run.
        attempts:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRunTestAttempt'
          description: These are the attempts made for this test.
      required:
        - test
        - attempts
    TestSuiteRunStatus:
      title: TestSuiteRunStatus
      type: string
      enum:
        - queued
        - in-progress
        - completed
        - failed
      description: This is the current status of the test suite run.
    TestSuiteRun:
      title: TestSuiteRun
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TestSuiteRunStatus'
          description: This is the current status of the test suite run.
        id:
          type: string
          description: This is the unique identifier for the test suite run.
          example: id
        orgId:
          type: string
          description: >-
            This is the unique identifier for the organization this run belongs
            to.
          example: orgId
        testSuiteId:
          type: string
          description: >-
            This is the unique identifier for the test suite this run belongs
            to.
          example: testSuiteId
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the test suite run was
            created.
          example: '2024-01-15T09:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the test suite run was
            last updated.
          example: '2024-01-15T09:30:00Z'
        testResults:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRunTestResult'
          description: These are the results of the tests in this test suite run.
        name:
          type: string
          nullable: true
          description: This is the name of the test suite run.
      required:
        - status
        - id
        - orgId
        - testSuiteId
        - createdAt
        - updatedAt
        - testResults
    TestSuiteRunsPaginatedResponse:
      title: TestSuiteRunsPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteRun'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
      required:
        - results
        - metadata
    Metrics:
      title: Metrics
      type: object
      properties:
        orgId:
          type: string
        rangeStart:
          type: string
        rangeEnd:
          type: string
        bill:
          type: number
          format: double
        billWithinBillingLimit:
          type: boolean
        billDailyBreakdown:
          type: object
          additionalProperties: true
        callActive:
          type: number
          format: double
        callActiveWithinConcurrencyLimit:
          type: boolean
        callMinutes:
          type: number
          format: double
        callMinutesDailyBreakdown:
          type: object
          additionalProperties: true
        callMinutesAverage:
          type: number
          format: double
        callMinutesAverageDailyBreakdown:
          type: object
          additionalProperties: true
        callCount:
          type: number
          format: double
        callCountDailyBreakdown:
          type: object
          additionalProperties: true
      required:
        - orgId
        - rangeStart
        - rangeEnd
        - bill
        - billWithinBillingLimit
        - billDailyBreakdown
        - callActive
        - callActiveWithinConcurrencyLimit
        - callMinutes
        - callMinutesDailyBreakdown
        - callMinutesAverage
        - callMinutesAverageDailyBreakdown
        - callCount
        - callCountDailyBreakdown
    TimeRangeStep:
      title: TimeRangeStep
      type: string
      enum:
        - second
        - minute
        - hour
        - day
        - week
        - month
        - quarter
        - year
        - decade
        - century
        - millennium
      description: |-
        This is the time step for aggregations.

        If not provided, defaults to returning for the entire time range.
    TimeRange:
      title: TimeRange
      type: object
      properties:
        step:
          $ref: '#/components/schemas/TimeRangeStep'
          nullable: true
          description: |-
            This is the time step for aggregations.

            If not provided, defaults to returning for the entire time range.
        start:
          type: string
          format: date-time
          nullable: true
          description: |-
            This is the start date for the time range.

            If not provided, defaults to the 7 days ago.
        end:
          type: string
          format: date-time
          nullable: true
          description: |-
            This is the end date for the time range.

            If not provided, defaults to now.
        timezone:
          type: string
          nullable: true
          description: |-
            This is the timezone you want to set for the query.

            If not provided, defaults to UTC.
    AnalyticsOperationOperation:
      title: AnalyticsOperationOperation
      type: string
      enum:
        - sum
        - avg
        - count
        - min
        - max
        - history
      description: This is the aggregation operation you want to perform.
    AnalyticsOperationColumn:
      title: AnalyticsOperationColumn
      type: string
      enum:
        - id
        - cost
        - costBreakdown.llm
        - costBreakdown.stt
        - costBreakdown.tts
        - costBreakdown.vapi
        - costBreakdown.ttsCharacters
        - costBreakdown.llmPromptTokens
        - costBreakdown.llmCompletionTokens
        - duration
        - concurrency
        - minutesUsed
      description: This is the columns you want to perform the aggregation operation on.
    AnalyticsOperation:
      title: AnalyticsOperation
      type: object
      properties:
        operation:
          $ref: '#/components/schemas/AnalyticsOperationOperation'
          description: This is the aggregation operation you want to perform.
        column:
          $ref: '#/components/schemas/AnalyticsOperationColumn'
          description: >-
            This is the columns you want to perform the aggregation operation
            on.
        alias:
          type: string
          nullable: true
          description: >-
            This is the alias for column name returned. Defaults to
            `${operation}${column}`.
      required:
        - operation
        - column
    AnalyticsQueryTable:
      title: AnalyticsQueryTable
      type: string
      enum:
        - call
        - subscription
      description: This is the table you want to query.
    AnalyticsQueryGroupByItem:
      title: AnalyticsQueryGroupByItem
      type: string
      enum:
        - type
        - assistantId
        - endedReason
        - analysis.successEvaluation
        - status
    AnalyticsQuery:
      title: AnalyticsQuery
      type: object
      properties:
        table:
          $ref: '#/components/schemas/AnalyticsQueryTable'
          description: This is the table you want to query.
        groupBy:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsQueryGroupByItem'
          nullable: true
          description: This is the list of columns you want to group by.
        name:
          type: string
          description: >-
            This is the name of the query. This will be used to identify the
            query in the response.
        timeRange:
          $ref: '#/components/schemas/TimeRange'
          nullable: true
          description: This is the time range for the query.
        operations:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticsOperation'
          description: This is the list of operations you want to perform.
      required:
        - table
        - name
        - operations
    AnalyticsQueryResult:
      title: AnalyticsQueryResult
      type: object
      properties:
        name:
          type: string
          description: This is the unique key for the query.
        timeRange:
          $ref: '#/components/schemas/TimeRange'
          description: This is the time range for the query.
        result:
          type: array
          items:
            type: object
            additionalProperties: true
          description: >-
            This is the result of the query, a list of unique groups with result
            of their aggregations.


            Example:

            "result": [
              { "date": "2023-01-01", "assistantId": "123", "endedReason": "customer-ended-call", "sumDuration": 120, "avgCost": 10.5 },
              { "date": "2023-01-02", "assistantId": "123", "endedReason": "customer-did-not-give-microphone-permission", "sumDuration": 0, "avgCost": 0 },
              // Additional results
            ]
      required:
        - name
        - timeRange
        - result
    CallLogPrivilegedLevel:
      title: CallLogPrivilegedLevel
      type: string
      enum:
        - INFO
        - LOG
        - WARN
        - ERROR
        - CHECKPOINT
      description: This is the level of the log message.
    CallLogPrivileged:
      title: CallLogPrivileged
      type: object
      properties:
        callId:
          type: string
          description: This is the unique identifier for the call.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this call log belongs
            to.
        log:
          type: string
          description: This is the log message associated with the call.
        level:
          $ref: '#/components/schemas/CallLogPrivilegedLevel'
          description: This is the level of the log message.
        time:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the log was created.
      required:
        - callId
        - orgId
        - log
        - level
        - time
    CallLogsPaginatedResponse:
      title: CallLogsPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CallLogPrivileged'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
      required:
        - results
        - metadata
    Error:
      title: Error
      type: object
      properties:
        message:
          type: string
      required:
        - message
    LogType:
      title: LogType
      type: string
      enum:
        - API
        - Webhook
        - Call
        - Provider
      description: This is the type of the log.
    LogResource:
      title: LogResource
      type: string
      enum:
        - org
        - assistant
        - analytics
        - credential
        - phone-number
        - block
        - voice-library
        - provider
        - tool
        - token
        - template
        - squad
        - call
        - file
        - metric
        - log
      description: This is the specific resource, relevant only to API logs.
    LogRequestHttpMethod:
      title: LogRequestHttpMethod
      type: string
      enum:
        - POST
        - GET
        - PUT
        - PATCH
        - DELETE
      description: This is the request method.
    Log:
      title: Log
      type: object
      properties:
        time:
          type: string
          description: This is the timestamp at which the log was written.
        orgId:
          type: string
          description: This is the unique identifier for the org that this log belongs to.
        type:
          $ref: '#/components/schemas/LogType'
          description: This is the type of the log.
        webhookType:
          type: string
          nullable: true
          description: This is the type of the webhook, given the log is from a webhook.
        resource:
          $ref: '#/components/schemas/LogResource'
          nullable: true
          description: This is the specific resource, relevant only to API logs.
        requestDurationSeconds:
          type: number
          format: double
          nullable: true
          description: '''This is how long the request took.'
        requestStartedAt:
          type: string
          nullable: true
          description: This is the timestamp at which the request began.
        requestFinishedAt:
          type: string
          nullable: true
          description: This is the timestamp at which the request finished.
        requestBody:
          type: object
          additionalProperties: true
          nullable: true
          description: This is the body of the request.
        requestHttpMethod:
          $ref: '#/components/schemas/LogRequestHttpMethod'
          nullable: true
          description: This is the request method.
        requestUrl:
          type: string
          nullable: true
          description: This is the request URL.
        requestPath:
          type: string
          nullable: true
          description: This is the request path.
        requestQuery:
          type: string
          nullable: true
          description: This is the request query.
        responseHttpCode:
          type: number
          format: double
          nullable: true
          description: This the HTTP status code of the response.
        requestIpAddress:
          type: string
          nullable: true
          description: This is the request IP address.
        requestOrigin:
          type: string
          nullable: true
          description: This is the origin of the request
        responseBody:
          type: object
          additionalProperties: true
          nullable: true
          description: This is the body of the response.
        requestHeaders:
          type: object
          additionalProperties: true
          nullable: true
          description: These are the headers of the request.
        error:
          $ref: '#/components/schemas/Error'
          nullable: true
          description: This is the error, if one occurred.
        assistantId:
          type: string
          nullable: true
          description: This is the ID of the assistant.
        phoneNumberId:
          type: string
          nullable: true
          description: This is the ID of the phone number.
        customerId:
          type: string
          nullable: true
          description: This is the ID of the customer.
        squadId:
          type: string
          nullable: true
          description: This is the ID of the squad.
        callId:
          type: string
          nullable: true
          description: This is the ID of the call.
      required:
        - time
        - orgId
        - type
    LogsPaginatedResponse:
      title: LogsPaginatedResponse
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Log'
        metadata:
          $ref: '#/components/schemas/PaginationMeta'
      required:
        - results
        - metadata
    CreateOrgDtoChannel:
      title: CreateOrgDtoChannel
      type: string
      enum:
        - default
        - weekly
      description: >-
        This is the channel of the org. There is the cluster the API traffic for
        the org will be directed.
    CreateOrgDto:
      title: CreateOrgDto
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          nullable: true
          description: >-
            When this is enabled, no logs, recordings, or transcriptions will be
            stored. At the end of the call, you will still receive an
            end-of-call-report message to store on your server. Defaults to
            false.

            When HIPAA is enabled, only OpenAI/Custom LLM or Azure Providers
            will be available for LLM and Voice respectively.

            This is due to the compliance requirements of HIPAA. Other providers
            may not meet these requirements.
        subscriptionId:
          type: string
          nullable: true
          description: This is the ID of the subscription the org belongs to.
        name:
          type: string
          nullable: true
          description: This is the name of the org. This is just for your own reference.
        channel:
          $ref: '#/components/schemas/CreateOrgDtoChannel'
          nullable: true
          description: >-
            This is the channel of the org. There is the cluster the API traffic
            for the org will be directed.
        billingLimit:
          type: number
          format: double
          nullable: true
          description: >-
            This is the monthly billing limit for the org. To go beyond
            $1000/mo, please contact us at support@vapi.ai.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        concurrencyLimit:
          type: number
          format: double
          nullable: true
          description: >-
            This is the concurrency limit for the org. This is the maximum
            number of calls that can be active at any given time. To go beyond
            10, please contact us at support@vapi.ai.
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
          nullable: true
          description: >-
            Stores the information about the compliance plan enforced at the
            organization level. Currently pciEnabled is supported through this
            field.

            When this is enabled, any logs, recordings, or transcriptions will
            be shipped to the customer endpoints if provided else lost.

            At the end of the call, you will receive an end-of-call-report
            message to store on your server, if webhook is provided.

            Defaults to false.

            When PCI is enabled, only PCI-compliant Providers will be available
            for LLM, Voice and transcribers.

            This is due to the compliance requirements of PCI. Other providers
            may not meet these requirements.
    AutoReloadPlan:
      title: AutoReloadPlan
      type: object
      properties:
        credits:
          type: number
          format: double
          description: This the amount of credits to reload.
        threshold:
          type: number
          format: double
          description: This is the limit at which the reload is triggered.
      required:
        - credits
        - threshold
    InvoicePlan:
      title: InvoicePlan
      type: object
      properties:
        companyName:
          type: string
          nullable: true
          description: This is the name of the company.
        companyAddress:
          type: string
          nullable: true
          description: This is the address of the company.
        companyTaxId:
          type: string
          nullable: true
          description: This is the tax ID of the company.
        companyEmail:
          type: string
          nullable: true
          description: >-
            This is the preferred invoicing email of the company. If not
            specified, defaults to the subscription's email.
    SubscriptionType:
      title: SubscriptionType
      type: string
      enum:
        - trial
        - pay-as-you-go
        - enterprise
      description: This is the type / tier of the subscription.
    SubscriptionStatus:
      title: SubscriptionStatus
      type: string
      enum:
        - active
        - frozen
      description: >-
        This is the status of the subscription. Past due subscriptions are
        subscriptions

        with past due payments.
    Subscription:
      title: Subscription
      type: object
      properties:
        id:
          type: string
          description: This is the unique identifier for the subscription.
        createdAt:
          type: string
          format: date-time
          description: This is the timestamp when the subscription was created.
        updatedAt:
          type: string
          format: date-time
          description: This is the timestamp when the subscription was last updated.
        type:
          $ref: '#/components/schemas/SubscriptionType'
          description: This is the type / tier of the subscription.
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
          description: >-
            This is the status of the subscription. Past due subscriptions are
            subscriptions

            with past due payments.
        credits:
          type: string
          description: |-
            This is the number of credits the subscription currently has.

            Note: This is a string to avoid floating point precision issues.
        concurrencyCounter:
          type: number
          format: double
          description: >-
            This is the total number of active calls (concurrency) across all
            orgs under this subscription.
        concurrencyLimitIncluded:
          type: number
          format: double
          description: This is the default concurrency limit for the subscription.
        phoneNumbersCounter:
          type: number
          format: double
          nullable: true
          description: This is the number of free phone numbers the subscription has
        phoneNumbersIncluded:
          type: number
          format: double
          nullable: true
          description: >-
            This is the maximum number of free phone numbers the subscription
            can have
        concurrencyLimitPurchased:
          type: number
          format: double
          description: This is the purchased add-on concurrency limit for the subscription.
        monthlyChargeScheduleId:
          type: number
          format: double
          nullable: true
          description: >-
            This is the ID of the monthly job that charges for subscription add
            ons and phone numbers.
        monthlyCreditCheckScheduleId:
          type: number
          format: double
          nullable: true
          description: >-
            This is the ID of the monthly job that checks whether the credit
            balance of the subscription

            is sufficient for the monthly charge.
        stripeCustomerId:
          type: string
          nullable: true
          description: This is the Stripe customer ID.
        stripePaymentMethodId:
          type: string
          nullable: true
          description: This is the Stripe payment ID.
        slackSupportEnabled:
          type: boolean
          nullable: true
          description: If this flag is true, then the user has purchased slack support.
        slackChannelId:
          type: string
          nullable: true
          description: >-
            If this subscription has a slack support subscription, the slack
            channel's ID will be stored here.
        hipaaEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the HIPAA enabled flag for the subscription. It determines
            whether orgs under this

            subscription have the option to enable HIPAA compliance.
        hipaaCommonPaperAgreementId:
          type: string
          nullable: true
          description: >-
            This is the ID for the Common Paper agreement outlining the HIPAA
            contract.
        stripePaymentMethodFingerprint:
          type: string
          nullable: true
          description: >-
            This is the Stripe fingerprint of the payment method (card). It
            allows us

            to detect users who try to abuse our system through multiple
            sign-ups.
        stripeCustomerEmail:
          type: string
          nullable: true
          description: This is the customer's email on Stripe.
        referredByEmail:
          type: string
          nullable: true
          description: This is the email of the referrer for the subscription.
        autoReloadPlan:
          $ref: '#/components/schemas/AutoReloadPlan'
          nullable: true
          description: This is the auto reload plan configured for the subscription.
        minutesIncluded:
          type: number
          format: double
          nullable: true
          description: The number of minutes included in the subscription.
        minutesUsed:
          type: number
          format: double
          nullable: true
          description: The number of minutes used in the subscription.
        minutesUsedNextResetAt:
          type: string
          format: date-time
          nullable: true
          description: >-
            This is the timestamp at which the number of monthly free minutes is
            scheduled to reset at.
        minutesOverageCost:
          type: number
          format: double
          nullable: true
          description: >-
            The per minute charge on minutes that exceed the included minutes.
            Enterprise only.
        providersIncluded:
          type: array
          items:
            type: string
          nullable: true
          description: The list of providers included in the subscription. Enterprise only.
        outboundCallsDailyLimit:
          type: number
          format: double
          nullable: true
          description: >-
            The maximum number of outbound calls this subscription may make in a
            day. Resets every night.
        outboundCallsCounter:
          type: number
          format: double
          nullable: true
          description: >-
            The current number of outbound calls the subscription has made in
            the current day.
        outboundCallsCounterNextResetAt:
          type: string
          format: date-time
          nullable: true
          description: >-
            This is the timestamp at which the outbound calls counter is
            scheduled to reset at.
        couponIds:
          type: array
          items:
            type: string
          nullable: true
          description: This is the IDs of the coupons applicable to this subscription.
        couponUsageLeft:
          type: string
          nullable: true
          description: This is the number of credits left obtained from a coupon.
        invoicePlan:
          $ref: '#/components/schemas/InvoicePlan'
          nullable: true
          description: This is the invoice plan for the subscription.
        pciEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the PCI enabled flag for the subscription. It determines
            whether orgs under this

            subscription have the option to enable PCI compliance.
        pciCommonPaperAgreementId:
          type: string
          nullable: true
          description: >-
            This is the ID for the Common Paper agreement outlining the PCI
            contract.
      required:
        - id
        - createdAt
        - updatedAt
        - type
        - status
        - credits
        - concurrencyCounter
        - concurrencyLimitIncluded
        - concurrencyLimitPurchased
    OrgPlan:
      title: OrgPlan
      type: object
      properties:
        includedProviders:
          type: array
          items:
            type: object
            additionalProperties: true
          nullable: true
        includedMinutes:
          type: number
          format: double
          nullable: true
        costPerOverageMinute:
          type: number
          format: double
          nullable: true
    OrgChannel:
      title: OrgChannel
      type: string
      enum:
        - default
        - weekly
      description: >-
        This is the channel of the org. There is the cluster the API traffic for
        the org will be directed.
    Org:
      title: Org
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          nullable: true
          description: >-
            When this is enabled, no logs, recordings, or transcriptions will be
            stored. At the end of the call, you will still receive an
            end-of-call-report message to store on your server. Defaults to
            false.

            When HIPAA is enabled, only OpenAI/Custom LLM or Azure Providers
            will be available for LLM and Voice respectively.

            This is due to the compliance requirements of HIPAA. Other providers
            may not meet these requirements.
        subscription:
          $ref: '#/components/schemas/Subscription'
          nullable: true
        subscriptionId:
          type: string
          nullable: true
          description: This is the ID of the subscription the org belongs to.
        id:
          type: string
          description: This is the unique identifier for the org.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the org was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the org was last
            updated.
        stripeCustomerId:
          type: string
          nullable: true
          description: This is the Stripe customer for the org.
        stripeSubscriptionId:
          type: string
          nullable: true
          description: This is the subscription for the org.
        stripeSubscriptionItemId:
          type: string
          nullable: true
          description: This is the subscription's subscription item.
        stripeSubscriptionCurrentPeriodStart:
          type: string
          format: date-time
          nullable: true
          description: This is the subscription's current period start.
        stripeSubscriptionStatus:
          type: string
          nullable: true
          description: This is the subscription's status.
        plan:
          $ref: '#/components/schemas/OrgPlan'
          nullable: true
          description: This is the plan for the org.
        name:
          type: string
          nullable: true
          description: This is the name of the org. This is just for your own reference.
        channel:
          $ref: '#/components/schemas/OrgChannel'
          nullable: true
          description: >-
            This is the channel of the org. There is the cluster the API traffic
            for the org will be directed.
        billingLimit:
          type: number
          format: double
          nullable: true
          description: >-
            This is the monthly billing limit for the org. To go beyond
            $1000/mo, please contact us at support@vapi.ai.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        concurrencyLimit:
          type: number
          format: double
          nullable: true
          description: >-
            This is the concurrency limit for the org. This is the maximum
            number of calls that can be active at any given time. To go beyond
            10, please contact us at support@vapi.ai.
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
          nullable: true
          description: >-
            Stores the information about the compliance plan enforced at the
            organization level. Currently pciEnabled is supported through this
            field.

            When this is enabled, any logs, recordings, or transcriptions will
            be shipped to the customer endpoints if provided else lost.

            At the end of the call, you will receive an end-of-call-report
            message to store on your server, if webhook is provided.

            Defaults to false.

            When PCI is enabled, only PCI-compliant Providers will be available
            for LLM, Voice and transcribers.

            This is due to the compliance requirements of PCI. Other providers
            may not meet these requirements.
      required:
        - id
        - createdAt
        - updatedAt
    UpdateOrgDtoChannel:
      title: UpdateOrgDtoChannel
      type: string
      enum:
        - default
        - weekly
      description: >-
        This is the channel of the org. There is the cluster the API traffic for
        the org will be directed.
    UpdateOrgDto:
      title: UpdateOrgDto
      type: object
      properties:
        hipaaEnabled:
          type: boolean
          nullable: true
          description: >-
            When this is enabled, no logs, recordings, or transcriptions will be
            stored. At the end of the call, you will still receive an
            end-of-call-report message to store on your server. Defaults to
            false.

            When HIPAA is enabled, only OpenAI/Custom LLM or Azure Providers
            will be available for LLM and Voice respectively.

            This is due to the compliance requirements of HIPAA. Other providers
            may not meet these requirements.
        subscriptionId:
          type: string
          nullable: true
          description: This is the ID of the subscription the org belongs to.
        name:
          type: string
          nullable: true
          description: This is the name of the org. This is just for your own reference.
        channel:
          $ref: '#/components/schemas/UpdateOrgDtoChannel'
          nullable: true
          description: >-
            This is the channel of the org. There is the cluster the API traffic
            for the org will be directed.
        billingLimit:
          type: number
          format: double
          nullable: true
          description: >-
            This is the monthly billing limit for the org. To go beyond
            $1000/mo, please contact us at support@vapi.ai.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is where Vapi will send webhooks. You can find all webhooks
            available along with their shape in ServerMessage schema.


            The order of precedence is:


            1. assistant.server

            2. phoneNumber.server

            3. org.server
        concurrencyLimit:
          type: number
          format: double
          nullable: true
          description: >-
            This is the concurrency limit for the org. This is the maximum
            number of calls that can be active at any given time. To go beyond
            10, please contact us at support@vapi.ai.
        compliancePlan:
          $ref: '#/components/schemas/CompliancePlan'
          nullable: true
          description: >-
            Stores the information about the compliance plan enforced at the
            organization level. Currently pciEnabled is supported through this
            field.

            When this is enabled, any logs, recordings, or transcriptions will
            be shipped to the customer endpoints if provided else lost.

            At the end of the call, you will receive an end-of-call-report
            message to store on your server, if webhook is provided.

            Defaults to false.

            When PCI is enabled, only PCI-compliant Providers will be available
            for LLM, Voice and transcribers.

            This is due to the compliance requirements of PCI. Other providers
            may not meet these requirements.
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          description: This is the unique identifier for the profile or user.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the profile was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the profile was last
            updated.
        email:
          type: string
          description: This is the email of the user that is associated with the profile.
        fullName:
          type: string
          nullable: true
          description: >-
            This is the full name of the user that is associated with the
            profile.
      required:
        - id
        - createdAt
        - updatedAt
        - email
    InviteUserDtoRole:
      title: InviteUserDtoRole
      type: string
      enum:
        - admin
        - editor
        - viewer
    InviteUserDto:
      title: InviteUserDto
      type: object
      properties:
        emails:
          type: array
          items:
            type: string
        role:
          $ref: '#/components/schemas/InviteUserDtoRole'
        redirectTo:
          type: string
          nullable: true
      required:
        - emails
        - role
    UpdateUserRoleDtoRole:
      title: UpdateUserRoleDtoRole
      type: string
      enum:
        - admin
        - editor
        - viewer
    UpdateUserRoleDto:
      title: UpdateUserRoleDto
      type: object
      properties:
        userId:
          type: string
        role:
          $ref: '#/components/schemas/UpdateUserRoleDtoRole'
      required:
        - userId
        - role
    TokenRestrictions:
      title: TokenRestrictions
      type: object
      properties:
        enabled:
          type: boolean
          nullable: true
          description: >-
            This determines whether the token is enabled or disabled. Default is
            true, it's enabled.
        allowedOrigins:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This determines the allowed origins for this token. Validates the
            `Origin` header. Default is any origin.


            Only relevant for `public` tokens.
        allowedAssistantIds:
          type: array
          items:
            type: string
          nullable: true
          description: >-
            This determines which assistantIds can be used when creating a call.
            Default is any assistantId.


            Only relevant for `public` tokens.
        allowTransientAssistant:
          type: boolean
          nullable: true
          description: >-
            This determines whether transient assistants can be used when
            creating a call. Default is true.


            If `allowedAssistantIds` is provided, this is automatically false.


            Only relevant for `public` tokens.
    CreateTokenDtoTag:
      title: CreateTokenDtoTag
      type: string
      enum:
        - private
        - public
      description: This is the tag for the token. It represents its scope.
    CreateTokenDto:
      title: CreateTokenDto
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/CreateTokenDtoTag'
          nullable: true
          description: This is the tag for the token. It represents its scope.
        name:
          type: string
          nullable: true
          description: This is the name of the token. This is just for your own reference.
        restrictions:
          $ref: '#/components/schemas/TokenRestrictions'
          nullable: true
          description: This are the restrictions for the token.
    TokenTag:
      title: TokenTag
      type: string
      enum:
        - private
        - public
      description: This is the tag for the token. It represents its scope.
    Token:
      title: Token
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/TokenTag'
          nullable: true
          description: This is the tag for the token. It represents its scope.
        id:
          type: string
          description: This is the unique identifier for the token.
        orgId:
          type: string
          description: This is unique identifier for the org that this token belongs to.
        createdAt:
          type: string
          format: date-time
          description: This is the ISO 8601 date-time string of when the token was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the token was last
            updated.
        value:
          type: string
          description: This is the token key.
        name:
          type: string
          nullable: true
          description: This is the name of the token. This is just for your own reference.
        restrictions:
          $ref: '#/components/schemas/TokenRestrictions'
          nullable: true
          description: This are the restrictions for the token.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - value
    UpdateTokenDtoTag:
      title: UpdateTokenDtoTag
      type: string
      enum:
        - private
        - public
      description: This is the tag for the token. It represents its scope.
    UpdateTokenDto:
      title: UpdateTokenDto
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/UpdateTokenDtoTag'
          nullable: true
          description: This is the tag for the token. It represents its scope.
        name:
          type: string
          nullable: true
          description: This is the name of the token. This is just for your own reference.
        restrictions:
          $ref: '#/components/schemas/TokenRestrictions'
          nullable: true
          description: This are the restrictions for the token.
    AnthropicCredential:
      title: AnthropicCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - anthropic
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    AnyscaleCredential:
      title: AnyscaleCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - anyscale
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    AssemblyAiCredential:
      title: AssemblyAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - assembly-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    AzureCredentialService:
      title: AzureCredentialService
      type: string
      enum:
        - speech
        - blob_storage
      description: This is the service being used in Azure.
    AzureCredentialRegion:
      title: AzureCredentialRegion
      type: string
      enum:
        - australia
        - canadaeast
        - canadacentral
        - eastus2
        - eastus
        - france
        - india
        - japaneast
        - japanwest
        - uaenorth
        - northcentralus
        - norway
        - southcentralus
        - swedencentral
        - switzerland
        - uk
        - westus
        - westus3
      description: This is the region of the Azure resource.
    AzureCredential:
      title: AzureCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - azure
        service:
          $ref: '#/components/schemas/AzureCredentialService'
          description: This is the service being used in Azure.
        region:
          $ref: '#/components/schemas/AzureCredentialRegion'
          nullable: true
          description: This is the region of the Azure resource.
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        bucketPlan:
          $ref: '#/components/schemas/AzureBlobStorageBucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in Azure Blob Storage.
      required:
        - provider
        - service
        - id
        - orgId
        - createdAt
        - updatedAt
    AzureOpenAiCredentialRegion:
      title: AzureOpenAiCredentialRegion
      type: string
      enum:
        - australia
        - canadaeast
        - canadacentral
        - eastus2
        - eastus
        - france
        - india
        - japaneast
        - japanwest
        - uaenorth
        - northcentralus
        - norway
        - southcentralus
        - swedencentral
        - switzerland
        - uk
        - westus
        - westus3
    AzureOpenAiCredentialModelsItem:
      title: AzureOpenAiCredentialModelsItem
      type: string
      enum:
        - gpt-4o-2024-11-20
        - gpt-4o-2024-08-06
        - gpt-4o-mini-2024-07-18
        - gpt-4o-2024-05-13
        - gpt-4-turbo-2024-04-09
        - gpt-4-0125-preview
        - gpt-4-1106-preview
        - gpt-4-0613
        - gpt-35-turbo-0125
        - gpt-35-turbo-1106
    AzureOpenAiCredential:
      title: AzureOpenAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - azure-openai
        region:
          $ref: '#/components/schemas/AzureOpenAiCredentialRegion'
        models:
          type: array
          items:
            $ref: '#/components/schemas/AzureOpenAiCredentialModelsItem'
        openAIKey:
          type: string
          description: This is not returned in the API.
        ocpApimSubscriptionKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        openAIEndpoint:
          type: string
      required:
        - provider
        - region
        - models
        - openAIKey
        - id
        - orgId
        - createdAt
        - updatedAt
        - openAIEndpoint
    ByoSipTrunkCredential:
      title: ByoSipTrunkCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - byo-sip-trunk
          nullable: true
          description: >-
            This can be used to bring your own SIP trunks or to connect to a
            Carrier.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/SipTrunkGateway'
          description: This is the list of SIP trunk's gateways.
        outboundAuthenticationPlan:
          $ref: '#/components/schemas/SipTrunkOutboundAuthenticationPlan'
          nullable: true
          description: >-
            This can be used to configure the outbound authentication if
            required by the SIP trunk.
        outboundLeadingPlusEnabled:
          type: boolean
          nullable: true
          description: >-
            This ensures the outbound origination attempts have a leading plus.
            Defaults to false to match conventional telecom behavior.


            Usage:

            - Vonage/Twilio requires leading plus for all outbound calls. Set
            this to true.


            @default false
        techPrefix:
          type: string
          nullable: true
          description: >-
            This can be used to configure the tech prefix on outbound calls.
            This is an advanced property.
        sipDiversionHeader:
          type: string
          nullable: true
          description: >-
            This can be used to enable the SIP diversion header for
            authenticating the calling number if the SIP trunk supports it. This
            is an advanced property.
        sbcConfiguration:
          $ref: '#/components/schemas/SbcConfiguration'
          nullable: true
          description: >-
            This is an advanced configuration for enterprise deployments. This
            uses the onprem SBC to trunk into the SIP trunk's `gateways`, rather
            than the managed SBC provided by Vapi.
      required:
        - id
        - orgId
        - createdAt
        - updatedAt
        - gateways
    CartesiaCredential:
      title: CartesiaCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - cartesia
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    CerebrasCredential:
      title: CerebrasCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - cerebras
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    CloudflareCredential:
      title: CloudflareCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - cloudflare
          description: Credential provider. Only allowed value is cloudflare
        accountId:
          type: string
          nullable: true
          description: Cloudflare Account Id.
        apiKey:
          type: string
          nullable: true
          description: Cloudflare API Key / Token.
        accountEmail:
          type: string
          nullable: true
          description: Cloudflare Account Email.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        bucketPlan:
          $ref: '#/components/schemas/CloudflareR2BucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in R2
      required:
        - provider
        - id
        - orgId
        - createdAt
        - updatedAt
    Oauth2AuthenticationSession:
      title: Oauth2AuthenticationSession
      type: object
      properties:
        accessToken:
          type: string
          nullable: true
          description: This is the OAuth2 access token.
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: This is the OAuth2 access token expiration.
    CustomLlmCredential:
      title: CustomLlmCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - custom-llm
        apiKey:
          type: string
          description: This is not returned in the API.
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
          nullable: true
          description: >-
            This is the authentication plan. Currently supports OAuth2 RFC 6749.
            To use Bearer authentication, use apiKey
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        authenticationSession:
          $ref: '#/components/schemas/Oauth2AuthenticationSession'
          nullable: true
          description: >-
            This is the authentication session for the credential. Available for
            credentials that have an authentication plan.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    DeepgramCredential:
      title: DeepgramCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - deepgram
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        apiUrl:
          type: string
          nullable: true
          description: >-
            This can be used to point to an onprem Deepgram instance. Defaults
            to api.deepgram.com.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    DeepInfraCredential:
      title: DeepInfraCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - deepinfra
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    DeepSeekCredential:
      title: DeepSeekCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - deep-seek
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    ElevenLabsCredential:
      title: ElevenLabsCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - 11labs
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    GcpCredential:
      title: GcpCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - gcp
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        gcpKey:
          $ref: '#/components/schemas/GcpKey'
          description: >-
            This is the GCP key. This is the JSON that can be generated in the
            Google Cloud Console at
            https://console.cloud.google.com/iam-admin/serviceaccounts/details/<service-account-id>/keys.


            The schema is identical to the JSON that GCP outputs.
        bucketPlan:
          $ref: '#/components/schemas/BucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in GCP.
      required:
        - provider
        - id
        - orgId
        - createdAt
        - updatedAt
        - gcpKey
    GladiaCredential:
      title: GladiaCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - gladia
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    GoHighLevelCredential:
      title: GoHighLevelCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - gohighlevel
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    GoogleCredential:
      title: GoogleCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - google
          description: >-
            This is the key for Gemini in Google AI Studio. Get it from here:
            https://aistudio.google.com/app/apikey
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    GroqCredential:
      title: GroqCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - groq
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    HumeCredential:
      title: HumeCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - hume
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    InflectionAiCredential:
      title: InflectionAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - inflection-ai
          description: >-
            This is the api key for Pi in InflectionAI's console. Get it from
            here: https://developers.inflection.ai/keys, billing will need to be
            setup
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    LangfuseCredential:
      title: LangfuseCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - langfuse
        publicKey:
          type: string
          description: 'The public key for Langfuse project. Eg: pk-lf-...'
        apiKey:
          type: string
          description: >-
            The secret key for Langfuse project. Eg: sk-lf-... .This is not
            returned in the API.
        apiUrl:
          type: string
          description: 'The host URL for Langfuse project. Eg: https://cloud.langfuse.com'
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - publicKey
        - apiKey
        - apiUrl
        - id
        - orgId
        - createdAt
        - updatedAt
    LmntCredential:
      title: LmntCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - lmnt
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    MakeCredential:
      title: MakeCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - make
        teamId:
          type: string
          description: Team ID
        region:
          type: string
          description: 'Region of your application. For example: eu1, eu2, us1, us2'
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - teamId
        - region
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    MistralCredential:
      title: MistralCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - mistral
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    NeuphonicCredential:
      title: NeuphonicCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - neuphonic
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    OpenAiCredential:
      title: OpenAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - openai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    OpenRouterCredential:
      title: OpenRouterCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - openrouter
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    PerplexityAiCredential:
      title: PerplexityAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - perplexity-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    PlayHtCredential:
      title: PlayHtCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - playht
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        userId:
          type: string
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
        - userId
    RimeAiCredential:
      title: RimeAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - rime-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    RunpodCredential:
      title: RunpodCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - runpod
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    S3Credential:
      title: S3Credential
      type: object
      properties:
        provider:
          type: string
          enum:
            - s3
          description: Credential provider. Only allowed value is s3
        awsAccessKeyId:
          type: string
          description: AWS access key ID.
        awsSecretAccessKey:
          type: string
          description: AWS access key secret. This is not returned in the API.
        region:
          type: string
          description: AWS region in which the S3 bucket is located.
        s3BucketName:
          type: string
          description: AWS S3 bucket name.
        s3PathPrefix:
          type: string
          description: The path prefix for the uploaded recording. Ex. "recordings/"
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - awsAccessKeyId
        - awsSecretAccessKey
        - region
        - s3BucketName
        - s3PathPrefix
        - id
        - orgId
        - createdAt
        - updatedAt
    SmallestAiCredential:
      title: SmallestAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - smallest-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    SpeechmaticsCredential:
      title: SpeechmaticsCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - speechmatics
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    SupabaseCredential:
      title: SupabaseCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - supabase
          description: This is for supabase storage.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        bucketPlan:
          $ref: '#/components/schemas/SupabaseBucketPlan'
          nullable: true
      required:
        - provider
        - id
        - orgId
        - createdAt
        - updatedAt
    TavusCredential:
      title: TavusCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - tavus
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    TogetherAiCredential:
      title: TogetherAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - together-ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    TrieveCredential:
      title: TrieveCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - trieve
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    TwilioCredential:
      title: TwilioCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - twilio
        authToken:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        accountSid:
          type: string
      required:
        - provider
        - authToken
        - id
        - orgId
        - createdAt
        - updatedAt
        - accountSid
    VonageCredential:
      title: VonageCredential
      type: object
      properties:
        vonageApplicationPrivateKey:
          type: string
          description: This is not returned in the API.
        provider:
          type: string
          enum:
            - vonage
        apiSecret:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        vonageApplicationId:
          type: string
          description: |-
            This is the Vonage Application ID for the credential.

            Only relevant for Vonage credentials.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        apiKey:
          type: string
      required:
        - vonageApplicationPrivateKey
        - provider
        - apiSecret
        - id
        - orgId
        - createdAt
        - updatedAt
        - vonageApplicationId
        - apiKey
    WebhookCredential:
      title: WebhookCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - webhook
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
          description: This is the authentication plan. Currently supports OAuth2 RFC 6749.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        authenticationSession:
          $ref: '#/components/schemas/Oauth2AuthenticationSession'
          description: >-
            This is the authentication session for the credential. Available for
            credentials that have an authentication plan.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - authenticationPlan
        - id
        - orgId
        - createdAt
        - updatedAt
        - authenticationSession
    XAiCredential:
      title: XAiCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - xai
          description: >-
            This is the api key for Grok in XAi's console. Get it from here:
            https://console.x.ai
        apiKey:
          type: string
          description: This is not returned in the API.
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - apiKey
        - id
        - orgId
        - createdAt
        - updatedAt
    GoogleCalendarOAuth2ClientCredential:
      title: GoogleCalendarOAuth2ClientCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - google.calendar.oauth2-client
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - id
        - orgId
        - createdAt
        - updatedAt
    GoogleCalendarOAuth2AuthorizationCredential:
      title: GoogleCalendarOAuth2AuthorizationCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - google.calendar.oauth2-authorization
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - authorizationId
        - id
        - orgId
        - createdAt
        - updatedAt
    GoogleSheetsOAuth2AuthorizationCredential:
      title: GoogleSheetsOAuth2AuthorizationCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - google.sheets.oauth2-authorization
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - authorizationId
        - id
        - orgId
        - createdAt
        - updatedAt
    SlackOAuth2AuthorizationCredential:
      title: SlackOAuth2AuthorizationCredential
      type: object
      properties:
        provider:
          type: string
          enum:
            - slack.oauth2-authorization
        authorizationId:
          type: string
          description: The authorization ID for the OAuth2 authorization
        id:
          type: string
          description: This is the unique identifier for the credential.
        orgId:
          type: string
          description: >-
            This is the unique identifier for the org that this credential
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the credential was
            created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            This is the ISO 8601 date-time string of when the assistant was last
            updated.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - provider
        - authorizationId
        - id
        - orgId
        - createdAt
        - updatedAt
    CreateCerebrasCredentialDto:
      title: CreateCerebrasCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateGoogleCredentialDto:
      title: CreateGoogleCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateHumeCredentialDto:
      title: CreateHumeCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateInflectionAiCredentialDto:
      title: CreateInflectionAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateMistralCredentialDto:
      title: CreateMistralCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateNeuphonicCredentialDto:
      title: CreateNeuphonicCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateSpeechmaticsCredentialDto:
      title: CreateSpeechmaticsCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    CreateTrieveCredentialDto:
      title: CreateTrieveCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
      required:
        - apiKey
    UpdateAnthropicCredentialDto:
      title: UpdateAnthropicCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateAnyscaleCredentialDto:
      title: UpdateAnyscaleCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateAssemblyAiCredentialDto:
      title: UpdateAssemblyAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateAzureCredentialDtoService:
      title: UpdateAzureCredentialDtoService
      type: string
      enum:
        - speech
        - blob_storage
      description: This is the service being used in Azure.
    UpdateAzureCredentialDtoRegion:
      title: UpdateAzureCredentialDtoRegion
      type: string
      enum:
        - australia
        - canadaeast
        - canadacentral
        - eastus2
        - eastus
        - france
        - india
        - japaneast
        - japanwest
        - uaenorth
        - northcentralus
        - norway
        - southcentralus
        - swedencentral
        - switzerland
        - uk
        - westus
        - westus3
      description: This is the region of the Azure resource.
    UpdateAzureCredentialDto:
      title: UpdateAzureCredentialDto
      type: object
      properties:
        service:
          $ref: '#/components/schemas/UpdateAzureCredentialDtoService'
          nullable: true
          description: This is the service being used in Azure.
        region:
          $ref: '#/components/schemas/UpdateAzureCredentialDtoRegion'
          nullable: true
          description: This is the region of the Azure resource.
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        bucketPlan:
          $ref: '#/components/schemas/AzureBlobStorageBucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in Azure Blob Storage.
    UpdateAzureOpenAiCredentialDtoRegion:
      title: UpdateAzureOpenAiCredentialDtoRegion
      type: string
      enum:
        - australia
        - canadaeast
        - canadacentral
        - eastus2
        - eastus
        - france
        - india
        - japaneast
        - japanwest
        - uaenorth
        - northcentralus
        - norway
        - southcentralus
        - swedencentral
        - switzerland
        - uk
        - westus
        - westus3
    UpdateAzureOpenAiCredentialDtoModelsItem:
      title: UpdateAzureOpenAiCredentialDtoModelsItem
      type: string
      enum:
        - gpt-4o-2024-11-20
        - gpt-4o-2024-08-06
        - gpt-4o-mini-2024-07-18
        - gpt-4o-2024-05-13
        - gpt-4-turbo-2024-04-09
        - gpt-4-0125-preview
        - gpt-4-1106-preview
        - gpt-4-0613
        - gpt-35-turbo-0125
        - gpt-35-turbo-1106
    UpdateAzureOpenAiCredentialDto:
      title: UpdateAzureOpenAiCredentialDto
      type: object
      properties:
        region:
          $ref: '#/components/schemas/UpdateAzureOpenAiCredentialDtoRegion'
          nullable: true
        models:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAzureOpenAiCredentialDtoModelsItem'
          nullable: true
        openAIKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        ocpApimSubscriptionKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        openAIEndpoint:
          type: string
          nullable: true
    UpdateByoSipTrunkCredentialDto:
      title: UpdateByoSipTrunkCredentialDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        gateways:
          type: array
          items:
            $ref: '#/components/schemas/SipTrunkGateway'
          nullable: true
          description: This is the list of SIP trunk's gateways.
        outboundAuthenticationPlan:
          $ref: '#/components/schemas/SipTrunkOutboundAuthenticationPlan'
          nullable: true
          description: >-
            This can be used to configure the outbound authentication if
            required by the SIP trunk.
        outboundLeadingPlusEnabled:
          type: boolean
          nullable: true
          description: >-
            This ensures the outbound origination attempts have a leading plus.
            Defaults to false to match conventional telecom behavior.


            Usage:

            - Vonage/Twilio requires leading plus for all outbound calls. Set
            this to true.


            @default false
        techPrefix:
          type: string
          nullable: true
          description: >-
            This can be used to configure the tech prefix on outbound calls.
            This is an advanced property.
        sipDiversionHeader:
          type: string
          nullable: true
          description: >-
            This can be used to enable the SIP diversion header for
            authenticating the calling number if the SIP trunk supports it. This
            is an advanced property.
        sbcConfiguration:
          $ref: '#/components/schemas/SbcConfiguration'
          nullable: true
          description: >-
            This is an advanced configuration for enterprise deployments. This
            uses the onprem SBC to trunk into the SIP trunk's `gateways`, rather
            than the managed SBC provided by Vapi.
    UpdateCartesiaCredentialDto:
      title: UpdateCartesiaCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateCerebrasCredentialDto:
      title: UpdateCerebrasCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateCloudflareCredentialDto:
      title: UpdateCloudflareCredentialDto
      type: object
      properties:
        accountId:
          type: string
          nullable: true
          description: Cloudflare Account Id.
        apiKey:
          type: string
          nullable: true
          description: Cloudflare API Key / Token.
        accountEmail:
          type: string
          nullable: true
          description: Cloudflare Account Email.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        bucketPlan:
          $ref: '#/components/schemas/CloudflareR2BucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in R2
    UpdateCustomLlmCredentialDto:
      title: UpdateCustomLlmCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
          nullable: true
          description: >-
            This is the authentication plan. Currently supports OAuth2 RFC 6749.
            To use Bearer authentication, use apiKey
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateDeepgramCredentialDto:
      title: UpdateDeepgramCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        apiUrl:
          type: string
          nullable: true
          description: >-
            This can be used to point to an onprem Deepgram instance. Defaults
            to api.deepgram.com.
    UpdateDeepInfraCredentialDto:
      title: UpdateDeepInfraCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateDeepSeekCredentialDto:
      title: UpdateDeepSeekCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateElevenLabsCredentialDto:
      title: UpdateElevenLabsCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        provider:
          type: string
          enum:
            - 11labs
          nullable: true
    UpdateGcpCredentialDto:
      title: UpdateGcpCredentialDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        gcpKey:
          $ref: '#/components/schemas/GcpKey'
          nullable: true
          description: >-
            This is the GCP key. This is the JSON that can be generated in the
            Google Cloud Console at
            https://console.cloud.google.com/iam-admin/serviceaccounts/details/<service-account-id>/keys.


            The schema is identical to the JSON that GCP outputs.
        bucketPlan:
          $ref: '#/components/schemas/BucketPlan'
          nullable: true
          description: >-
            This is the bucket plan that can be provided to store call artifacts
            in GCP.
    UpdateGladiaCredentialDto:
      title: UpdateGladiaCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateGoHighLevelCredentialDto:
      title: UpdateGoHighLevelCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateGoogleCredentialDto:
      title: UpdateGoogleCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateGroqCredentialDto:
      title: UpdateGroqCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateHumeCredentialDto:
      title: UpdateHumeCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateInflectionAiCredentialDto:
      title: UpdateInflectionAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateLangfuseCredentialDto:
      title: UpdateLangfuseCredentialDto
      type: object
      properties:
        publicKey:
          type: string
          nullable: true
          description: 'The public key for Langfuse project. Eg: pk-lf-...'
        apiKey:
          type: string
          nullable: true
          description: >-
            The secret key for Langfuse project. Eg: sk-lf-... .This is not
            returned in the API.
        apiUrl:
          type: string
          nullable: true
          description: 'The host URL for Langfuse project. Eg: https://cloud.langfuse.com'
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateLmntCredentialDto:
      title: UpdateLmntCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateMakeCredentialDto:
      title: UpdateMakeCredentialDto
      type: object
      properties:
        teamId:
          type: string
          nullable: true
          description: Team ID
        region:
          type: string
          nullable: true
          description: 'Region of your application. For example: eu1, eu2, us1, us2'
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateMistralCredentialDto:
      title: UpdateMistralCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateNeuphonicCredentialDto:
      title: UpdateNeuphonicCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateOpenAiCredentialDto:
      title: UpdateOpenAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateOpenRouterCredentialDto:
      title: UpdateOpenRouterCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdatePerplexityAiCredentialDto:
      title: UpdatePerplexityAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdatePlayHtCredentialDto:
      title: UpdatePlayHtCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        userId:
          type: string
          nullable: true
    UpdateRimeAiCredentialDto:
      title: UpdateRimeAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateRunpodCredentialDto:
      title: UpdateRunpodCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateS3CredentialDto:
      title: UpdateS3CredentialDto
      type: object
      properties:
        awsAccessKeyId:
          type: string
          nullable: true
          description: AWS access key ID.
        awsSecretAccessKey:
          type: string
          nullable: true
          description: AWS access key secret. This is not returned in the API.
        region:
          type: string
          nullable: true
          description: AWS region in which the S3 bucket is located.
        s3BucketName:
          type: string
          nullable: true
          description: AWS S3 bucket name.
        s3PathPrefix:
          type: string
          nullable: true
          description: The path prefix for the uploaded recording. Ex. "recordings/"
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateSmallestAiCredentialDto:
      title: UpdateSmallestAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateSpeechmaticsCredentialDto:
      title: UpdateSpeechmaticsCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateSupabaseCredentialDto:
      title: UpdateSupabaseCredentialDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        bucketPlan:
          $ref: '#/components/schemas/SupabaseBucketPlan'
          nullable: true
    UpdateTavusCredentialDto:
      title: UpdateTavusCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateTogetherAiCredentialDto:
      title: UpdateTogetherAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateTrieveCredentialDto:
      title: UpdateTrieveCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateTwilioCredentialDto:
      title: UpdateTwilioCredentialDto
      type: object
      properties:
        authToken:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        accountSid:
          type: string
          nullable: true
    UpdateVonageCredentialDto:
      title: UpdateVonageCredentialDto
      type: object
      properties:
        apiSecret:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
        apiKey:
          type: string
          nullable: true
    UpdateWebhookCredentialDto:
      title: UpdateWebhookCredentialDto
      type: object
      properties:
        authenticationPlan:
          $ref: '#/components/schemas/OAuth2AuthenticationPlan'
          nullable: true
          description: This is the authentication plan. Currently supports OAuth2 RFC 6749.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateXAiCredentialDto:
      title: UpdateXAiCredentialDto
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
          description: This is not returned in the API.
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateGoogleCalendarOAuth2ClientCredentialDto:
      title: UpdateGoogleCalendarOAuth2ClientCredentialDto
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateGoogleCalendarOAuth2AuthorizationCredentialDto:
      title: UpdateGoogleCalendarOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          nullable: true
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateGoogleSheetsOAuth2AuthorizationCredentialDto:
      title: UpdateGoogleSheetsOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          nullable: true
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    UpdateSlackOAuth2AuthorizationCredentialDto:
      title: UpdateSlackOAuth2AuthorizationCredentialDto
      type: object
      properties:
        authorizationId:
          type: string
          nullable: true
          description: The authorization ID for the OAuth2 authorization
        name:
          type: string
          nullable: true
          description: This is the name of credential. This is just for your reference.
    CredentialSessionResponse:
      title: CredentialSessionResponse
      type: object
      properties:
        sessionToken:
          type: string
      required:
        - sessionToken
    CredentialEndUser:
      title: CredentialEndUser
      type: object
      properties:
        endUserId:
          type: string
        organizationId:
          type: string
      required:
        - endUserId
        - organizationId
    CredentialSessionError:
      title: CredentialSessionError
      type: object
      properties:
        type:
          type: string
        description:
          type: string
      required:
        - type
        - description
    CredentialWebhookDtoType:
      title: CredentialWebhookDtoType
      type: string
      enum:
        - auth
        - sync
        - forward
    CredentialWebhookDtoOperation:
      title: CredentialWebhookDtoOperation
      type: string
      enum:
        - creation
        - override
        - refresh
    CredentialWebhookDtoAuthMode:
      title: CredentialWebhookDtoAuthMode
      type: string
      enum:
        - OAUTH2
        - API_KEY
        - BASIC
    CredentialWebhookDto:
      title: CredentialWebhookDto
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CredentialWebhookDtoType'
        operation:
          $ref: '#/components/schemas/CredentialWebhookDtoOperation'
        from:
          type: string
        connectionId:
          type: string
        authMode:
          $ref: '#/components/schemas/CredentialWebhookDtoAuthMode'
        providerConfigKey:
          type: string
        provider:
          type: string
        environment:
          type: string
        success:
          type: boolean
        endUser:
          $ref: '#/components/schemas/CredentialEndUser'
        error:
          $ref: '#/components/schemas/CredentialSessionError'
          nullable: true
      required:
        - type
        - operation
        - from
        - connectionId
        - authMode
        - providerConfigKey
        - provider
        - environment
        - success
        - endUser
    CredentialActionRequest:
      title: CredentialActionRequest
      type: object
      properties:
        action_name:
          type: string
        input:
          type: object
          additionalProperties: true
      required:
        - action_name
        - input
    CredentialSessionDtoProvider:
      title: CredentialSessionDtoProvider
      type: string
      enum:
        - google.calendar.oauth2-client
        - google.calendar.oauth2-authorization
        - google.sheets.oauth2-authorization
        - slack.oauth2-authorization
      description: >-
        The type of credential to generate a session for. Only Nango user-facing
        providers are supported.
    CredentialSessionDto:
      title: CredentialSessionDto
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/CredentialSessionDtoProvider'
          description: >-
            The type of credential to generate a session for. Only Nango
            user-facing providers are supported.
      required:
        - provider
    ToolTemplateSetup:
      title: ToolTemplateSetup
      type: object
      properties:
        title:
          type: string
        description:
          type: string
          nullable: true
        videoUrl:
          type: string
          nullable: true
        docsUrl:
          type: string
          nullable: true
      required:
        - title
    MakeToolProviderDetails:
      title: MakeToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          nullable: true
          description: >-
            This is the Template URL or the Snapshot URL corresponding to the
            Template.
        setupInstructions:
          type: array
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
          nullable: true
        scenarioId:
          type: number
          format: double
          nullable: true
        scenarioName:
          type: string
          nullable: true
        triggerHookId:
          type: number
          format: double
          nullable: true
        triggerHookName:
          type: string
          nullable: true
    GhlToolProviderDetails:
      title: GhlToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          nullable: true
          description: >-
            This is the Template URL or the Snapshot URL corresponding to the
            Template.
        setupInstructions:
          type: array
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
          nullable: true
        workflowId:
          type: string
          nullable: true
        workflowName:
          type: string
          nullable: true
        webhookHookId:
          type: string
          nullable: true
        webhookHookName:
          type: string
          nullable: true
        locationId:
          type: string
          nullable: true
    FunctionToolProviderDetails:
      title: FunctionToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          nullable: true
          description: >-
            This is the Template URL or the Snapshot URL corresponding to the
            Template.
        setupInstructions:
          type: array
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
          nullable: true
    GoogleCalendarCreateEventToolProviderDetails:
      title: GoogleCalendarCreateEventToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          nullable: true
          description: >-
            This is the Template URL or the Snapshot URL corresponding to the
            Template.
        setupInstructions:
          type: array
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
          nullable: true
    GoogleSheetsRowAppendToolProviderDetails:
      title: GoogleSheetsRowAppendToolProviderDetails
      type: object
      properties:
        templateUrl:
          type: string
          nullable: true
          description: >-
            This is the Template URL or the Snapshot URL corresponding to the
            Template.
        setupInstructions:
          type: array
          items:
            $ref: '#/components/schemas/ToolTemplateSetup'
          nullable: true
    ToolTemplateMetadata:
      title: ToolTemplateMetadata
      type: object
      properties:
        collectionType:
          type: string
          nullable: true
        collectionId:
          type: string
          nullable: true
        collectionName:
          type: string
          nullable: true
    CreateToolTemplateDtoDetails:
      title: CreateToolTemplateDtoDetails
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
    CreateToolTemplateDtoProviderDetails:
      title: CreateToolTemplateDtoProviderDetails
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: >-
                #/components/schemas/GoogleCalendarCreateEventToolProviderDetails
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendToolProviderDetails'
          required:
            - type
    CreateToolTemplateDtoVisibility:
      title: CreateToolTemplateDtoVisibility
      type: string
      enum:
        - public
        - private
    CreateToolTemplateDtoProvider:
      title: CreateToolTemplateDtoProvider
      type: string
      enum:
        - make
        - gohighlevel
        - function
    CreateToolTemplateDto:
      title: CreateToolTemplateDto
      type: object
      properties:
        details:
          $ref: '#/components/schemas/CreateToolTemplateDtoDetails'
          nullable: true
        providerDetails:
          $ref: '#/components/schemas/CreateToolTemplateDtoProviderDetails'
          nullable: true
        metadata:
          $ref: '#/components/schemas/ToolTemplateMetadata'
          nullable: true
        visibility:
          $ref: '#/components/schemas/CreateToolTemplateDtoVisibility'
          nullable: true
        type:
          type: string
          enum:
            - tool
        name:
          type: string
          nullable: true
          description: The name of the template. This is just for your own reference.
        provider:
          $ref: '#/components/schemas/CreateToolTemplateDtoProvider'
          nullable: true
      required:
        - type
    TemplateDetails:
      title: TemplateDetails
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
    TemplateProviderDetails:
      title: TemplateProviderDetails
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: >-
                #/components/schemas/GoogleCalendarCreateEventToolProviderDetails
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendToolProviderDetails'
          required:
            - type
    TemplateVisibility:
      title: TemplateVisibility
      type: string
      enum:
        - public
        - private
    TemplateProvider:
      title: TemplateProvider
      type: string
      enum:
        - make
        - gohighlevel
        - function
    Template:
      title: Template
      type: object
      properties:
        details:
          $ref: '#/components/schemas/TemplateDetails'
          nullable: true
        providerDetails:
          $ref: '#/components/schemas/TemplateProviderDetails'
          nullable: true
        metadata:
          $ref: '#/components/schemas/ToolTemplateMetadata'
          nullable: true
        visibility:
          $ref: '#/components/schemas/TemplateVisibility'
          nullable: true
        type:
          type: string
          enum:
            - tool
        name:
          type: string
          nullable: true
          description: The name of the template. This is just for your own reference.
        provider:
          $ref: '#/components/schemas/TemplateProvider'
          nullable: true
        id:
          type: string
          description: The unique identifier for the template.
        orgId:
          type: string
          description: >-
            The unique identifier for the organization that this template
            belongs to.
        createdAt:
          type: string
          format: date-time
          description: The ISO 8601 date-time string of when the template was created.
        updatedAt:
          type: string
          format: date-time
          description: The ISO 8601 date-time string of when the template was last updated.
      required:
        - type
        - id
        - orgId
        - createdAt
        - updatedAt
    UpdateToolTemplateDtoDetails:
      title: UpdateToolTemplateDtoDetails
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - dtmf
            - $ref: '#/components/schemas/CreateDtmfToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - endCall
            - $ref: '#/components/schemas/CreateEndCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail
            - $ref: '#/components/schemas/CreateVoicemailToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/CreateFunctionToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/CreateGhlToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/CreateMakeToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transferCall
            - $ref: '#/components/schemas/CreateTransferCallToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/CreateGoogleCalendarCreateEventToolDto'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/CreateGoogleSheetsRowAppendToolDto'
          required:
            - type
    UpdateToolTemplateDtoProviderDetails:
      title: UpdateToolTemplateDtoProviderDetails
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionToolProviderDetails'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: >-
                #/components/schemas/GoogleCalendarCreateEventToolProviderDetails
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.sheets.row.append
            - $ref: '#/components/schemas/GoogleSheetsRowAppendToolProviderDetails'
          required:
            - type
    UpdateToolTemplateDtoVisibility:
      title: UpdateToolTemplateDtoVisibility
      type: string
      enum:
        - public
        - private
    UpdateToolTemplateDtoProvider:
      title: UpdateToolTemplateDtoProvider
      type: string
      enum:
        - make
        - gohighlevel
        - function
    UpdateToolTemplateDto:
      title: UpdateToolTemplateDto
      type: object
      properties:
        details:
          $ref: '#/components/schemas/UpdateToolTemplateDtoDetails'
          nullable: true
        providerDetails:
          $ref: '#/components/schemas/UpdateToolTemplateDtoProviderDetails'
          nullable: true
        metadata:
          $ref: '#/components/schemas/ToolTemplateMetadata'
          nullable: true
        visibility:
          $ref: '#/components/schemas/UpdateToolTemplateDtoVisibility'
          nullable: true
        type:
          type: string
          enum:
            - tool
        name:
          type: string
          nullable: true
          description: The name of the template. This is just for your own reference.
        provider:
          $ref: '#/components/schemas/UpdateToolTemplateDtoProvider'
          nullable: true
      required:
        - type
    VoiceLibraryGender:
      title: VoiceLibraryGender
      type: string
      enum:
        - male
        - female
      description: The gender of the voice.
    VoiceLibrary:
      title: VoiceLibrary
      type: object
      properties:
        provider:
          type: object
          additionalProperties: true
          nullable: true
          description: This is the voice provider that will be used.
        providerId:
          type: string
          nullable: true
          description: The ID of the voice provided by the provider.
        slug:
          type: string
          nullable: true
          description: The unique slug of the voice.
        name:
          type: string
          nullable: true
          description: The name of the voice.
        language:
          type: string
          nullable: true
          description: The language of the voice.
        languageCode:
          type: string
          nullable: true
          description: The language code of the voice.
        model:
          type: string
          nullable: true
          description: The model of the voice.
        supportedModels:
          type: string
          nullable: true
          description: The supported models of the voice.
        gender:
          $ref: '#/components/schemas/VoiceLibraryGender'
          nullable: true
          description: The gender of the voice.
        accent:
          type: string
          nullable: true
          description: The accent of the voice.
        previewUrl:
          type: string
          nullable: true
          description: The preview URL of the voice.
        description:
          type: string
          nullable: true
          description: The description of the voice.
        credentialId:
          type: string
          nullable: true
          description: The credential ID of the voice.
        id:
          type: string
          description: The unique identifier for the voice library.
        orgId:
          type: string
          description: >-
            The unique identifier for the organization that this voice library
            belongs to.
        isPublic:
          type: boolean
          description: The Public voice is shared accross all the organizations.
        isDeleted:
          type: boolean
          description: The deletion status of the voice.
        createdAt:
          type: string
          format: date-time
          description: The ISO 8601 date-time string of when the voice library was created.
        updatedAt:
          type: string
          format: date-time
          description: >-
            The ISO 8601 date-time string of when the voice library was last
            updated.
      required:
        - id
        - orgId
        - isPublic
        - isDeleted
        - createdAt
        - updatedAt
    SyncVoiceLibraryDtoProvidersItem:
      title: SyncVoiceLibraryDtoProvidersItem
      type: string
      enum:
        - vapi
        - 11labs
        - azure
        - cartesia
        - custom-voice
        - deepgram
        - hume
        - lmnt
        - neuphonic
        - openai
        - playht
        - rime-ai
        - smallest-ai
        - tavus
        - sesame
    SyncVoiceLibraryDto:
      title: SyncVoiceLibraryDto
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: '#/components/schemas/SyncVoiceLibraryDtoProvidersItem'
          nullable: true
          description: List of providers you want to sync.
    VoiceLibraryVoiceResponse:
      title: VoiceLibraryVoiceResponse
      type: object
      properties:
        voiceId:
          type: string
        name:
          type: string
        publicOwnerId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        age:
          type: object
          additionalProperties: true
          nullable: true
        accent:
          type: string
          nullable: true
      required:
        - voiceId
        - name
    AddVoiceToProviderDto:
      title: AddVoiceToProviderDto
      type: object
      properties:
        ownerId:
          type: string
          description: >-
            This is the owner_id of your shared voice which you want to add to
            your provider Account from Provider Voice Library
        voiceId:
          type: string
          description: >-
            This is the voice_id of the shared voice which you want to add to
            your provider Account from Provider Voice Library
        name:
          type: string
          description: >-
            This is the new name of the voice which you want to have once you
            have added voice to your provider Account from Provider Voice
            Library
      required:
        - ownerId
        - voiceId
        - name
    CloneVoiceDto:
      title: CloneVoiceDto
      type: object
      properties:
        name:
          type: string
          description: This is the name of the cloned voice in the provider account.
        description:
          type: string
          nullable: true
          description: This is the description of your cloned voice.
        labels:
          type: string
          nullable: true
          description: Serialized labels dictionary for the voice.
        files:
          type: array
          items:
            type: string
          description: >-
            These are the files you want to use to clone your voice. Only Audio
            files are supported.
      required:
        - name
        - files
    ClientMessageWorkflowNodeStarted:
      title: ClientMessageWorkflowNodeStarted
      type: object
      properties:
        type:
          type: string
          enum:
            - workflow.node.started
          description: >-
            This is the type of the message. "workflow.node.started" is sent
            when the active node changes.
        node:
          type: object
          additionalProperties: true
          description: This is the active node.
      required:
        - type
        - node
    ClientMessageConversationUpdateMessagesItem:
      title: ClientMessageConversationUpdateMessagesItem
      oneOf:
        - $ref: '#/components/schemas/UserMessage'
        - $ref: '#/components/schemas/SystemMessage'
        - $ref: '#/components/schemas/BotMessage'
        - $ref: '#/components/schemas/ToolCallMessage'
        - $ref: '#/components/schemas/ToolCallResultMessage'
    ClientMessageConversationUpdate:
      title: ClientMessageConversationUpdate
      type: object
      properties:
        type:
          type: string
          enum:
            - conversation-update
          description: >-
            This is the type of the message. "conversation-update" is sent when
            an update is committed to the conversation history.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ClientMessageConversationUpdateMessagesItem'
          nullable: true
          description: >-
            This is the most up-to-date conversation history at the time the
            message is sent.
        messagesOpenAIFormatted:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          description: >-
            This is the most up-to-date conversation history at the time the
            message is sent, formatted for OpenAI.
      required:
        - type
        - messagesOpenAIFormatted
    ClientMessageHang:
      title: ClientMessageHang
      type: object
      properties:
        type:
          type: string
          enum:
            - hang
          description: >-
            This is the type of the message. "hang" is sent when the assistant
            is hanging due to a delay. The delay can be caused by many factors,
            such as:

            - the model is too slow to respond

            - the voice is too slow to respond

            - the tool call is still waiting for a response from your server

            - etc.
      required:
        - type
    ClientMessageMetadata:
      title: ClientMessageMetadata
      type: object
      properties:
        type:
          type: string
          enum:
            - metadata
          description: >-
            This is the type of the message. "metadata" is sent to forward
            metadata to the client.
        metadata:
          type: string
          description: This is the metadata content
      required:
        - type
        - metadata
    ClientMessageModelOutput:
      title: ClientMessageModelOutput
      type: object
      properties:
        type:
          type: string
          enum:
            - model-output
          description: >-
            This is the type of the message. "model-output" is sent as the model
            outputs tokens.
        output:
          type: object
          additionalProperties: true
          description: This is the output of the model. It can be a token or tool call.
      required:
        - type
        - output
    ClientMessageSpeechUpdateStatus:
      title: ClientMessageSpeechUpdateStatus
      type: string
      enum:
        - started
        - stopped
      description: This is the status of the speech update.
    ClientMessageSpeechUpdateRole:
      title: ClientMessageSpeechUpdateRole
      type: string
      enum:
        - assistant
        - user
      description: This is the role which the speech update is for.
    ClientMessageSpeechUpdate:
      title: ClientMessageSpeechUpdate
      type: object
      properties:
        type:
          type: string
          enum:
            - speech-update
          description: >-
            This is the type of the message. "speech-update" is sent whenever
            assistant or user start or stop speaking.
        status:
          $ref: '#/components/schemas/ClientMessageSpeechUpdateStatus'
          description: This is the status of the speech update.
        role:
          $ref: '#/components/schemas/ClientMessageSpeechUpdateRole'
          description: This is the role which the speech update is for.
        turn:
          type: number
          format: double
          nullable: true
          description: This is the turn number of the speech update (0-indexed).
      required:
        - type
        - status
        - role
    ClientMessageTranscriptType:
      title: ClientMessageTranscriptType
      type: string
      enum:
        - transcript
        - transcript[transcriptType='final']
      description: >-
        This is the type of the message. "transcript" is sent as transcriber
        outputs partial or final transcript.
    ClientMessageTranscriptRole:
      title: ClientMessageTranscriptRole
      type: string
      enum:
        - assistant
        - user
      description: This is the role for which the transcript is for.
    ClientMessageTranscriptTranscriptType:
      title: ClientMessageTranscriptTranscriptType
      type: string
      enum:
        - partial
        - final
      description: This is the type of the transcript.
    ClientMessageTranscript:
      title: ClientMessageTranscript
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClientMessageTranscriptType'
          description: >-
            This is the type of the message. "transcript" is sent as transcriber
            outputs partial or final transcript.
        role:
          $ref: '#/components/schemas/ClientMessageTranscriptRole'
          description: This is the role for which the transcript is for.
        transcriptType:
          $ref: '#/components/schemas/ClientMessageTranscriptTranscriptType'
          description: This is the type of the transcript.
        transcript:
          type: string
          description: This is the transcript content.
      required:
        - type
        - role
        - transcriptType
        - transcript
    ToolCallFunction:
      title: ToolCallFunction
      type: object
      properties:
        name:
          type: string
          description: This is the name of the function the model called.
        arguments:
          type: object
          additionalProperties: true
          description: These are the arguments that the function was called with.
      required:
        - name
        - arguments
    ToolCall:
      title: ToolCall
      type: object
      properties:
        type:
          type: string
          enum:
            - function
          description: This is the type of tool the model called.
        function:
          $ref: '#/components/schemas/ToolCallFunction'
          description: This is the function the model called.
        id:
          type: string
          description: This is the unique identifier for the tool call.
      required:
        - type
        - function
        - id
    ClientMessageToolCallsToolWithToolCallListItem:
      title: ClientMessageToolCallsToolWithToolCallListItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/BashToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/ComputerToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/TextEditorToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/GoogleCalendarCreateEventToolWithToolCall'
          required:
            - type
    ClientMessageToolCalls:
      title: ClientMessageToolCalls
      type: object
      properties:
        type:
          type: string
          enum:
            - tool-calls
          nullable: true
          description: >-
            This is the type of the message. "tool-calls" is sent to call a
            tool.
        toolWithToolCallList:
          type: array
          items:
            $ref: >-
              #/components/schemas/ClientMessageToolCallsToolWithToolCallListItem
          description: >-
            This is the list of tools calls that the model is requesting along
            with the original tool configuration.
        toolCallList:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'
          description: This is the list of tool calls that the model is requesting.
      required:
        - toolWithToolCallList
        - toolCallList
    ClientMessageToolCallsResult:
      title: ClientMessageToolCallsResult
      type: object
      properties:
        type:
          type: string
          enum:
            - tool-calls-result
          description: >-
            This is the type of the message. "tool-calls-result" is sent to
            forward the result of a tool call to the client.
        toolCallResult:
          type: object
          additionalProperties: true
          description: This is the result of the tool call.
      required:
        - type
        - toolCallResult
    ClientMessageTransferUpdateDestination:
      title: ClientMessageTransferUpdateDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - assistant
            - $ref: '#/components/schemas/TransferDestinationAssistant'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - step
            - $ref: '#/components/schemas/TransferDestinationStep'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: This is the destination of the transfer.
    ClientMessageTransferUpdate:
      title: ClientMessageTransferUpdate
      type: object
      properties:
        type:
          type: string
          enum:
            - transfer-update
          description: >-
            This is the type of the message. "transfer-update" is sent whenever
            a transfer happens.
        destination:
          $ref: '#/components/schemas/ClientMessageTransferUpdateDestination'
          nullable: true
          description: This is the destination of the transfer.
        toAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that the call is being transferred to. This is
            only sent if `destination.type` is "assistant".
        fromAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that the call is being transferred from. This
            is only sent if `destination.type` is "assistant".
        toStepRecord:
          type: object
          additionalProperties: true
          nullable: true
          description: This is the step that the conversation moved to.
        fromStepRecord:
          type: object
          additionalProperties: true
          nullable: true
          description: This is the step that the conversation moved from. =
      required:
        - type
    ClientMessageUserInterrupted:
      title: ClientMessageUserInterrupted
      type: object
      properties:
        type:
          type: string
          enum:
            - user-interrupted
          description: >-
            This is the type of the message. "user-interrupted" is sent when the
            user interrupts the assistant.
      required:
        - type
    ClientMessageLanguageChangeDetected:
      title: ClientMessageLanguageChangeDetected
      type: object
      properties:
        type:
          type: string
          enum:
            - language-change-detected
          description: >-
            This is the type of the message. "language-change-detected" is sent
            when the transcriber is automatically switched based on the detected
            language.
        language:
          type: string
          description: This is the language the transcriber is switched to.
      required:
        - type
        - language
    ClientMessageVoiceInput:
      title: ClientMessageVoiceInput
      type: object
      properties:
        type:
          type: string
          enum:
            - voice-input
          description: >-
            This is the type of the message. "voice-input" is sent when a
            generation is requested from voice provider.
        input:
          type: string
          description: This is the voice input content
      required:
        - type
        - input
    ClientMessageMessage:
      title: ClientMessageMessage
      oneOf:
        - $ref: '#/components/schemas/ClientMessageWorkflowNodeStarted'
        - $ref: '#/components/schemas/ClientMessageConversationUpdate'
        - $ref: '#/components/schemas/ClientMessageHang'
        - $ref: '#/components/schemas/ClientMessageMetadata'
        - $ref: '#/components/schemas/ClientMessageModelOutput'
        - $ref: '#/components/schemas/ClientMessageSpeechUpdate'
        - $ref: '#/components/schemas/ClientMessageTranscript'
        - $ref: '#/components/schemas/ClientMessageToolCalls'
        - $ref: '#/components/schemas/ClientMessageToolCallsResult'
        - $ref: '#/components/schemas/ClientMessageTransferUpdate'
        - $ref: '#/components/schemas/ClientMessageUserInterrupted'
        - $ref: '#/components/schemas/ClientMessageLanguageChangeDetected'
        - $ref: '#/components/schemas/ClientMessageVoiceInput'
      description: >-
        These are all the messages that can be sent to the client-side SDKs
        during the call. Configure the messages you'd like to receive in
        `assistant.clientMessages`.
    ClientMessage:
      title: ClientMessage
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ClientMessageMessage'
          description: >-
            These are all the messages that can be sent to the client-side SDKs
            during the call. Configure the messages you'd like to receive in
            `assistant.clientMessages`.
      required:
        - message
    ServerMessageAssistantRequestPhoneNumber:
      title: ServerMessageAssistantRequestPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageAssistantRequest:
      title: ServerMessageAssistantRequest
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageAssistantRequestPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - assistant-request
          description: >-
            This is the type of the message. "assistant-request" is sent to
            fetch assistant configuration for an incoming call.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
    ServerMessageConversationUpdatePhoneNumber:
      title: ServerMessageConversationUpdatePhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageConversationUpdateMessagesItem:
      title: ServerMessageConversationUpdateMessagesItem
      oneOf:
        - $ref: '#/components/schemas/UserMessage'
        - $ref: '#/components/schemas/SystemMessage'
        - $ref: '#/components/schemas/BotMessage'
        - $ref: '#/components/schemas/ToolCallMessage'
        - $ref: '#/components/schemas/ToolCallResultMessage'
    ServerMessageConversationUpdate:
      title: ServerMessageConversationUpdate
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageConversationUpdatePhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - conversation-update
          description: >-
            This is the type of the message. "conversation-update" is sent when
            an update is committed to the conversation history.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ServerMessageConversationUpdateMessagesItem'
          nullable: true
          description: >-
            This is the most up-to-date conversation history at the time the
            message is sent.
        messagesOpenAIFormatted:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          description: >-
            This is the most up-to-date conversation history at the time the
            message is sent, formatted for OpenAI.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
        - messagesOpenAIFormatted
    ServerMessageEndOfCallReportPhoneNumber:
      title: ServerMessageEndOfCallReportPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageEndOfCallReportEndedReason:
      title: ServerMessageEndOfCallReportEndedReason
      type: string
      enum:
        - call-start-error-neither-assistant-nor-server-set
        - assistant-request-failed
        - assistant-request-returned-error
        - assistant-request-returned-unspeakable-error
        - assistant-request-returned-invalid-assistant
        - assistant-request-returned-no-assistant
        - assistant-request-returned-forwarding-phone-number
        - call.start.error-get-org
        - call.start.error-get-subscription
        - call.start.error-get-assistant
        - call.start.error-get-phone-number
        - call.start.error-get-customer
        - call.start.error-get-resources-validation
        - call.start.error-vapi-number-international
        - call.start.error-vapi-number-outbound-daily-limit
        - call.start.error-get-transport
        - assistant-not-valid
        - database-error
        - assistant-not-found
        - pipeline-error-openai-voice-failed
        - pipeline-error-cartesia-voice-failed
        - pipeline-error-deepgram-voice-failed
        - pipeline-error-eleven-labs-voice-failed
        - pipeline-error-playht-voice-failed
        - pipeline-error-lmnt-voice-failed
        - pipeline-error-azure-voice-failed
        - pipeline-error-rime-ai-voice-failed
        - pipeline-error-smallest-ai-voice-failed
        - pipeline-error-neuphonic-voice-failed
        - pipeline-error-hume-voice-failed
        - pipeline-error-sesame-voice-failed
        - pipeline-error-tavus-video-failed
        - call.in-progress.error-vapifault-openai-voice-failed
        - call.in-progress.error-vapifault-cartesia-voice-failed
        - call.in-progress.error-vapifault-deepgram-voice-failed
        - call.in-progress.error-vapifault-eleven-labs-voice-failed
        - call.in-progress.error-vapifault-playht-voice-failed
        - call.in-progress.error-vapifault-lmnt-voice-failed
        - call.in-progress.error-vapifault-azure-voice-failed
        - call.in-progress.error-vapifault-rime-ai-voice-failed
        - call.in-progress.error-vapifault-smallest-ai-voice-failed
        - call.in-progress.error-vapifault-neuphonic-voice-failed
        - call.in-progress.error-vapifault-hume-voice-failed
        - call.in-progress.error-vapifault-sesame-voice-failed
        - call.in-progress.error-vapifault-tavus-video-failed
        - pipeline-error-vapi-llm-failed
        - pipeline-error-vapi-400-bad-request-validation-failed
        - pipeline-error-vapi-401-unauthorized
        - pipeline-error-vapi-403-model-access-denied
        - pipeline-error-vapi-429-exceeded-quota
        - pipeline-error-vapi-500-server-error
        - pipeline-error-vapi-503-server-overloaded-error
        - call.in-progress.error-vapifault-vapi-llm-failed
        - >-
          call.in-progress.error-vapifault-vapi-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-vapi-401-unauthorized
        - call.in-progress.error-vapifault-vapi-403-model-access-denied
        - call.in-progress.error-vapifault-vapi-429-exceeded-quota
        - call.in-progress.error-providerfault-vapi-500-server-error
        - call.in-progress.error-providerfault-vapi-503-server-overloaded-error
        - pipeline-error-deepgram-transcriber-failed
        - call.in-progress.error-vapifault-deepgram-transcriber-failed
        - pipeline-error-gladia-transcriber-failed
        - call.in-progress.error-vapifault-gladia-transcriber-failed
        - pipeline-error-speechmatics-transcriber-failed
        - call.in-progress.error-vapifault-speechmatics-transcriber-failed
        - pipeline-error-assembly-ai-transcriber-failed
        - pipeline-error-assembly-ai-returning-400-insufficent-funds
        - pipeline-error-assembly-ai-returning-400-paid-only-feature
        - pipeline-error-assembly-ai-returning-401-invalid-credentials
        - pipeline-error-assembly-ai-returning-500-invalid-schema
        - pipeline-error-assembly-ai-returning-500-word-boost-parsing-failed
        - call.in-progress.error-vapifault-assembly-ai-transcriber-failed
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-400-insufficent-funds
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-400-paid-only-feature
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-401-invalid-credentials
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-500-invalid-schema
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-500-word-boost-parsing-failed
        - pipeline-error-talkscriber-transcriber-failed
        - call.in-progress.error-vapifault-talkscriber-transcriber-failed
        - pipeline-error-azure-speech-transcriber-failed
        - call.in-progress.error-vapifault-azure-speech-transcriber-failed
        - call.in-progress.error-pipeline-no-available-llm-model
        - worker-shutdown
        - unknown-error
        - vonage-disconnected
        - vonage-failed-to-connect-call
        - vonage-completed
        - phone-call-provider-bypass-enabled-but-no-call-received
        - call.in-progress.error-vapifault-transport-never-connected
        - >-
          call.in-progress.error-vapifault-transport-connected-but-call-not-active
        - >-
          call.in-progress.error-vapifault-call-started-but-connection-to-transport-missing
        - call.in-progress.error-vapifault-openai-llm-failed
        - call.in-progress.error-vapifault-azure-openai-llm-failed
        - call.in-progress.error-vapifault-groq-llm-failed
        - call.in-progress.error-vapifault-google-llm-failed
        - call.in-progress.error-vapifault-xai-llm-failed
        - call.in-progress.error-vapifault-mistral-llm-failed
        - call.in-progress.error-vapifault-inflection-ai-llm-failed
        - call.in-progress.error-vapifault-cerebras-llm-failed
        - call.in-progress.error-vapifault-deep-seek-llm-failed
        - pipeline-error-openai-400-bad-request-validation-failed
        - pipeline-error-openai-401-unauthorized
        - pipeline-error-openai-401-incorrect-api-key
        - pipeline-error-openai-401-account-not-in-organization
        - pipeline-error-openai-403-model-access-denied
        - pipeline-error-openai-429-exceeded-quota
        - pipeline-error-openai-429-rate-limit-reached
        - pipeline-error-openai-500-server-error
        - pipeline-error-openai-503-server-overloaded-error
        - pipeline-error-openai-llm-failed
        - >-
          call.in-progress.error-vapifault-openai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-openai-401-unauthorized
        - call.in-progress.error-vapifault-openai-401-incorrect-api-key
        - >-
          call.in-progress.error-vapifault-openai-401-account-not-in-organization
        - call.in-progress.error-vapifault-openai-403-model-access-denied
        - call.in-progress.error-vapifault-openai-429-exceeded-quota
        - call.in-progress.error-vapifault-openai-429-rate-limit-reached
        - call.in-progress.error-providerfault-openai-500-server-error
        - >-
          call.in-progress.error-providerfault-openai-503-server-overloaded-error
        - pipeline-error-azure-openai-400-bad-request-validation-failed
        - pipeline-error-azure-openai-401-unauthorized
        - pipeline-error-azure-openai-403-model-access-denied
        - pipeline-error-azure-openai-429-exceeded-quota
        - pipeline-error-azure-openai-500-server-error
        - pipeline-error-azure-openai-503-server-overloaded-error
        - pipeline-error-azure-openai-llm-failed
        - >-
          call.in-progress.error-vapifault-azure-openai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-azure-openai-401-unauthorized
        - call.in-progress.error-vapifault-azure-openai-403-model-access-denied
        - call.in-progress.error-vapifault-azure-openai-429-exceeded-quota
        - call.in-progress.error-providerfault-azure-openai-500-server-error
        - >-
          call.in-progress.error-providerfault-azure-openai-503-server-overloaded-error
        - pipeline-error-google-400-bad-request-validation-failed
        - pipeline-error-google-401-unauthorized
        - pipeline-error-google-403-model-access-denied
        - pipeline-error-google-429-exceeded-quota
        - pipeline-error-google-500-server-error
        - pipeline-error-google-503-server-overloaded-error
        - pipeline-error-google-llm-failed
        - >-
          call.in-progress.error-vapifault-google-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-google-401-unauthorized
        - call.in-progress.error-vapifault-google-403-model-access-denied
        - call.in-progress.error-vapifault-google-429-exceeded-quota
        - call.in-progress.error-providerfault-google-500-server-error
        - >-
          call.in-progress.error-providerfault-google-503-server-overloaded-error
        - pipeline-error-xai-400-bad-request-validation-failed
        - pipeline-error-xai-401-unauthorized
        - pipeline-error-xai-403-model-access-denied
        - pipeline-error-xai-429-exceeded-quota
        - pipeline-error-xai-500-server-error
        - pipeline-error-xai-503-server-overloaded-error
        - pipeline-error-xai-llm-failed
        - call.in-progress.error-vapifault-xai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-xai-401-unauthorized
        - call.in-progress.error-vapifault-xai-403-model-access-denied
        - call.in-progress.error-vapifault-xai-429-exceeded-quota
        - call.in-progress.error-providerfault-xai-500-server-error
        - call.in-progress.error-providerfault-xai-503-server-overloaded-error
        - pipeline-error-mistral-400-bad-request-validation-failed
        - pipeline-error-mistral-401-unauthorized
        - pipeline-error-mistral-403-model-access-denied
        - pipeline-error-mistral-429-exceeded-quota
        - pipeline-error-mistral-500-server-error
        - pipeline-error-mistral-503-server-overloaded-error
        - pipeline-error-mistral-llm-failed
        - >-
          call.in-progress.error-vapifault-mistral-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-mistral-401-unauthorized
        - call.in-progress.error-vapifault-mistral-403-model-access-denied
        - call.in-progress.error-vapifault-mistral-429-exceeded-quota
        - call.in-progress.error-providerfault-mistral-500-server-error
        - >-
          call.in-progress.error-providerfault-mistral-503-server-overloaded-error
        - pipeline-error-inflection-ai-400-bad-request-validation-failed
        - pipeline-error-inflection-ai-401-unauthorized
        - pipeline-error-inflection-ai-403-model-access-denied
        - pipeline-error-inflection-ai-429-exceeded-quota
        - pipeline-error-inflection-ai-500-server-error
        - pipeline-error-inflection-ai-503-server-overloaded-error
        - pipeline-error-inflection-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-inflection-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-inflection-ai-401-unauthorized
        - call.in-progress.error-vapifault-inflection-ai-403-model-access-denied
        - call.in-progress.error-vapifault-inflection-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-inflection-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-inflection-ai-503-server-overloaded-error
        - pipeline-error-deep-seek-400-bad-request-validation-failed
        - pipeline-error-deep-seek-401-unauthorized
        - pipeline-error-deep-seek-403-model-access-denied
        - pipeline-error-deep-seek-429-exceeded-quota
        - pipeline-error-deep-seek-500-server-error
        - pipeline-error-deep-seek-503-server-overloaded-error
        - pipeline-error-deep-seek-llm-failed
        - >-
          call.in-progress.error-vapifault-deep-seek-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-deep-seek-401-unauthorized
        - call.in-progress.error-vapifault-deep-seek-403-model-access-denied
        - call.in-progress.error-vapifault-deep-seek-429-exceeded-quota
        - call.in-progress.error-providerfault-deep-seek-500-server-error
        - >-
          call.in-progress.error-providerfault-deep-seek-503-server-overloaded-error
        - pipeline-error-groq-400-bad-request-validation-failed
        - pipeline-error-groq-401-unauthorized
        - pipeline-error-groq-403-model-access-denied
        - pipeline-error-groq-429-exceeded-quota
        - pipeline-error-groq-500-server-error
        - pipeline-error-groq-503-server-overloaded-error
        - pipeline-error-groq-llm-failed
        - >-
          call.in-progress.error-vapifault-groq-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-groq-401-unauthorized
        - call.in-progress.error-vapifault-groq-403-model-access-denied
        - call.in-progress.error-vapifault-groq-429-exceeded-quota
        - call.in-progress.error-providerfault-groq-500-server-error
        - call.in-progress.error-providerfault-groq-503-server-overloaded-error
        - pipeline-error-cerebras-400-bad-request-validation-failed
        - pipeline-error-cerebras-401-unauthorized
        - pipeline-error-cerebras-403-model-access-denied
        - pipeline-error-cerebras-429-exceeded-quota
        - pipeline-error-cerebras-500-server-error
        - pipeline-error-cerebras-503-server-overloaded-error
        - pipeline-error-cerebras-llm-failed
        - >-
          call.in-progress.error-vapifault-cerebras-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-cerebras-401-unauthorized
        - call.in-progress.error-vapifault-cerebras-403-model-access-denied
        - call.in-progress.error-vapifault-cerebras-429-exceeded-quota
        - call.in-progress.error-providerfault-cerebras-500-server-error
        - >-
          call.in-progress.error-providerfault-cerebras-503-server-overloaded-error
        - pipeline-error-anthropic-400-bad-request-validation-failed
        - pipeline-error-anthropic-401-unauthorized
        - pipeline-error-anthropic-403-model-access-denied
        - pipeline-error-anthropic-429-exceeded-quota
        - pipeline-error-anthropic-500-server-error
        - pipeline-error-anthropic-503-server-overloaded-error
        - pipeline-error-anthropic-llm-failed
        - call.in-progress.error-vapifault-anthropic-llm-failed
        - >-
          call.in-progress.error-vapifault-anthropic-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-anthropic-401-unauthorized
        - call.in-progress.error-vapifault-anthropic-403-model-access-denied
        - call.in-progress.error-vapifault-anthropic-429-exceeded-quota
        - call.in-progress.error-providerfault-anthropic-500-server-error
        - >-
          call.in-progress.error-providerfault-anthropic-503-server-overloaded-error
        - pipeline-error-together-ai-400-bad-request-validation-failed
        - pipeline-error-together-ai-401-unauthorized
        - pipeline-error-together-ai-403-model-access-denied
        - pipeline-error-together-ai-429-exceeded-quota
        - pipeline-error-together-ai-500-server-error
        - pipeline-error-together-ai-503-server-overloaded-error
        - pipeline-error-together-ai-llm-failed
        - call.in-progress.error-vapifault-together-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-together-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-together-ai-401-unauthorized
        - call.in-progress.error-vapifault-together-ai-403-model-access-denied
        - call.in-progress.error-vapifault-together-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-together-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-together-ai-503-server-overloaded-error
        - pipeline-error-anyscale-400-bad-request-validation-failed
        - pipeline-error-anyscale-401-unauthorized
        - pipeline-error-anyscale-403-model-access-denied
        - pipeline-error-anyscale-429-exceeded-quota
        - pipeline-error-anyscale-500-server-error
        - pipeline-error-anyscale-503-server-overloaded-error
        - pipeline-error-anyscale-llm-failed
        - call.in-progress.error-vapifault-anyscale-llm-failed
        - >-
          call.in-progress.error-vapifault-anyscale-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-anyscale-401-unauthorized
        - call.in-progress.error-vapifault-anyscale-403-model-access-denied
        - call.in-progress.error-vapifault-anyscale-429-exceeded-quota
        - call.in-progress.error-providerfault-anyscale-500-server-error
        - >-
          call.in-progress.error-providerfault-anyscale-503-server-overloaded-error
        - pipeline-error-openrouter-400-bad-request-validation-failed
        - pipeline-error-openrouter-401-unauthorized
        - pipeline-error-openrouter-403-model-access-denied
        - pipeline-error-openrouter-429-exceeded-quota
        - pipeline-error-openrouter-500-server-error
        - pipeline-error-openrouter-503-server-overloaded-error
        - pipeline-error-openrouter-llm-failed
        - call.in-progress.error-vapifault-openrouter-llm-failed
        - >-
          call.in-progress.error-vapifault-openrouter-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-openrouter-401-unauthorized
        - call.in-progress.error-vapifault-openrouter-403-model-access-denied
        - call.in-progress.error-vapifault-openrouter-429-exceeded-quota
        - call.in-progress.error-providerfault-openrouter-500-server-error
        - >-
          call.in-progress.error-providerfault-openrouter-503-server-overloaded-error
        - pipeline-error-perplexity-ai-400-bad-request-validation-failed
        - pipeline-error-perplexity-ai-401-unauthorized
        - pipeline-error-perplexity-ai-403-model-access-denied
        - pipeline-error-perplexity-ai-429-exceeded-quota
        - pipeline-error-perplexity-ai-500-server-error
        - pipeline-error-perplexity-ai-503-server-overloaded-error
        - pipeline-error-perplexity-ai-llm-failed
        - call.in-progress.error-vapifault-perplexity-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-perplexity-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-perplexity-ai-401-unauthorized
        - call.in-progress.error-vapifault-perplexity-ai-403-model-access-denied
        - call.in-progress.error-vapifault-perplexity-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-perplexity-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-perplexity-ai-503-server-overloaded-error
        - pipeline-error-deepinfra-400-bad-request-validation-failed
        - pipeline-error-deepinfra-401-unauthorized
        - pipeline-error-deepinfra-403-model-access-denied
        - pipeline-error-deepinfra-429-exceeded-quota
        - pipeline-error-deepinfra-500-server-error
        - pipeline-error-deepinfra-503-server-overloaded-error
        - pipeline-error-deepinfra-llm-failed
        - call.in-progress.error-vapifault-deepinfra-llm-failed
        - >-
          call.in-progress.error-vapifault-deepinfra-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-deepinfra-401-unauthorized
        - call.in-progress.error-vapifault-deepinfra-403-model-access-denied
        - call.in-progress.error-vapifault-deepinfra-429-exceeded-quota
        - call.in-progress.error-providerfault-deepinfra-500-server-error
        - >-
          call.in-progress.error-providerfault-deepinfra-503-server-overloaded-error
        - pipeline-error-runpod-400-bad-request-validation-failed
        - pipeline-error-runpod-401-unauthorized
        - pipeline-error-runpod-403-model-access-denied
        - pipeline-error-runpod-429-exceeded-quota
        - pipeline-error-runpod-500-server-error
        - pipeline-error-runpod-503-server-overloaded-error
        - pipeline-error-runpod-llm-failed
        - call.in-progress.error-vapifault-runpod-llm-failed
        - >-
          call.in-progress.error-vapifault-runpod-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-runpod-401-unauthorized
        - call.in-progress.error-vapifault-runpod-403-model-access-denied
        - call.in-progress.error-vapifault-runpod-429-exceeded-quota
        - call.in-progress.error-providerfault-runpod-500-server-error
        - >-
          call.in-progress.error-providerfault-runpod-503-server-overloaded-error
        - pipeline-error-custom-llm-400-bad-request-validation-failed
        - pipeline-error-custom-llm-401-unauthorized
        - pipeline-error-custom-llm-403-model-access-denied
        - pipeline-error-custom-llm-429-exceeded-quota
        - pipeline-error-custom-llm-500-server-error
        - pipeline-error-custom-llm-503-server-overloaded-error
        - pipeline-error-custom-llm-llm-failed
        - call.in-progress.error-vapifault-custom-llm-llm-failed
        - >-
          call.in-progress.error-vapifault-custom-llm-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-custom-llm-401-unauthorized
        - call.in-progress.error-vapifault-custom-llm-403-model-access-denied
        - call.in-progress.error-vapifault-custom-llm-429-exceeded-quota
        - call.in-progress.error-providerfault-custom-llm-500-server-error
        - >-
          call.in-progress.error-providerfault-custom-llm-503-server-overloaded-error
        - pipeline-error-custom-voice-failed
        - pipeline-error-cartesia-socket-hang-up
        - pipeline-error-cartesia-requested-payment
        - pipeline-error-cartesia-500-server-error
        - pipeline-error-cartesia-503-server-error
        - pipeline-error-cartesia-522-server-error
        - call.in-progress.error-vapifault-cartesia-socket-hang-up
        - call.in-progress.error-vapifault-cartesia-requested-payment
        - call.in-progress.error-providerfault-cartesia-500-server-error
        - call.in-progress.error-providerfault-cartesia-503-server-error
        - call.in-progress.error-providerfault-cartesia-522-server-error
        - pipeline-error-eleven-labs-voice-not-found
        - pipeline-error-eleven-labs-quota-exceeded
        - pipeline-error-eleven-labs-unauthorized-access
        - pipeline-error-eleven-labs-unauthorized-to-access-model
        - pipeline-error-eleven-labs-professional-voices-only-for-creator-plus
        - pipeline-error-eleven-labs-blocked-free-plan-and-requested-upgrade
        - >-
          pipeline-error-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
        - >-
          pipeline-error-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
        - pipeline-error-eleven-labs-system-busy-and-requested-upgrade
        - pipeline-error-eleven-labs-voice-not-fine-tuned
        - pipeline-error-eleven-labs-invalid-api-key
        - pipeline-error-eleven-labs-invalid-voice-samples
        - pipeline-error-eleven-labs-voice-disabled-by-owner
        - pipeline-error-eleven-labs-blocked-account-in-probation
        - pipeline-error-eleven-labs-blocked-content-against-their-policy
        - pipeline-error-eleven-labs-missing-samples-for-voice-clone
        - pipeline-error-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
        - pipeline-error-eleven-labs-voice-not-allowed-for-free-users
        - pipeline-error-eleven-labs-max-character-limit-exceeded
        - >-
          pipeline-error-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
        - pipeline-error-eleven-labs-500-server-error
        - call.in-progress.error-vapifault-eleven-labs-voice-not-found
        - call.in-progress.error-vapifault-eleven-labs-quota-exceeded
        - call.in-progress.error-vapifault-eleven-labs-unauthorized-access
        - >-
          call.in-progress.error-vapifault-eleven-labs-unauthorized-to-access-model
        - >-
          call.in-progress.error-vapifault-eleven-labs-professional-voices-only-for-creator-plus
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-free-plan-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-system-busy-and-requested-upgrade
        - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned
        - call.in-progress.error-vapifault-eleven-labs-invalid-api-key
        - call.in-progress.error-vapifault-eleven-labs-invalid-voice-samples
        - call.in-progress.error-vapifault-eleven-labs-voice-disabled-by-owner
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-account-in-probation
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-content-against-their-policy
        - >-
          call.in-progress.error-vapifault-eleven-labs-missing-samples-for-voice-clone
        - >-
          call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
        - >-
          call.in-progress.error-vapifault-eleven-labs-voice-not-allowed-for-free-users
        - >-
          call.in-progress.error-vapifault-eleven-labs-max-character-limit-exceeded
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
        - call.in-progress.error-providerfault-eleven-labs-500-server-error
        - pipeline-error-playht-request-timed-out
        - pipeline-error-playht-invalid-voice
        - pipeline-error-playht-unexpected-error
        - pipeline-error-playht-out-of-credits
        - pipeline-error-playht-invalid-emotion
        - pipeline-error-playht-voice-must-be-a-valid-voice-manifest-uri
        - pipeline-error-playht-401-unauthorized
        - pipeline-error-playht-403-forbidden-out-of-characters
        - pipeline-error-playht-403-forbidden-api-access-not-available
        - pipeline-error-playht-429-exceeded-quota
        - pipeline-error-playht-502-gateway-error
        - pipeline-error-playht-504-gateway-error
        - call.in-progress.error-vapifault-playht-request-timed-out
        - call.in-progress.error-vapifault-playht-invalid-voice
        - call.in-progress.error-vapifault-playht-unexpected-error
        - call.in-progress.error-vapifault-playht-out-of-credits
        - call.in-progress.error-vapifault-playht-invalid-emotion
        - >-
          call.in-progress.error-vapifault-playht-voice-must-be-a-valid-voice-manifest-uri
        - call.in-progress.error-vapifault-playht-401-unauthorized
        - >-
          call.in-progress.error-vapifault-playht-403-forbidden-out-of-characters
        - >-
          call.in-progress.error-vapifault-playht-403-forbidden-api-access-not-available
        - call.in-progress.error-vapifault-playht-429-exceeded-quota
        - call.in-progress.error-providerfault-playht-502-gateway-error
        - call.in-progress.error-providerfault-playht-504-gateway-error
        - pipeline-error-custom-transcriber-failed
        - call.in-progress.error-vapifault-custom-transcriber-failed
        - pipeline-error-11labs-transcriber-failed
        - call.in-progress.error-vapifault-11labs-transcriber-failed
        - >-
          pipeline-error-deepgram-returning-400-no-such-model-language-tier-combination
        - pipeline-error-deepgram-returning-401-invalid-credentials
        - pipeline-error-deepgram-returning-403-model-access-denied
        - pipeline-error-deepgram-returning-404-not-found
        - pipeline-error-deepgram-returning-500-invalid-json
        - pipeline-error-deepgram-returning-502-network-error
        - pipeline-error-deepgram-returning-502-bad-gateway-ehostunreach
        - >-
          call.in-progress.error-vapifault-deepgram-returning-400-no-such-model-language-tier-combination
        - >-
          call.in-progress.error-vapifault-deepgram-returning-401-invalid-credentials
        - call.in-progress.error-vapifault-deepgram-returning-404-not-found
        - >-
          call.in-progress.error-vapifault-deepgram-returning-403-model-access-denied
        - >-
          call.in-progress.error-providerfault-deepgram-returning-500-invalid-json
        - >-
          call.in-progress.error-providerfault-deepgram-returning-502-network-error
        - >-
          call.in-progress.error-providerfault-deepgram-returning-502-bad-gateway-ehostunreach
        - pipeline-error-google-transcriber-failed
        - call.in-progress.error-vapifault-google-transcriber-failed
        - pipeline-error-openai-transcriber-failed
        - call.in-progress.error-vapifault-openai-transcriber-failed
        - assistant-ended-call
        - assistant-said-end-call-phrase
        - assistant-ended-call-with-hangup-task
        - assistant-ended-call-after-message-spoken
        - assistant-forwarded-call
        - assistant-join-timed-out
        - call.in-progress.error-assistant-did-not-receive-customer-audio
        - customer-busy
        - customer-ended-call
        - customer-did-not-answer
        - customer-did-not-give-microphone-permission
        - exceeded-max-duration
        - manually-canceled
        - phone-call-provider-closed-websocket
        - silence-timed-out
        - call.in-progress.error-sip-telephony-provider-failed-to-connect-call
        - twilio-failed-to-connect-call
        - twilio-reported-customer-misdialed
        - vonage-rejected
        - voicemail
      description: >-
        This is the reason the call ended. This can also be found at
        `call.endedReason` on GET /call/:id.
    ServerMessageEndOfCallReportCostsItem:
      title: ServerMessageEndOfCallReportCostsItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transport
            - $ref: '#/components/schemas/TransportCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transcriber
            - $ref: '#/components/schemas/TranscriberCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - model
            - $ref: '#/components/schemas/ModelCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voice
            - $ref: '#/components/schemas/VoiceCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/VapiCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - voicemail-detection
            - $ref: '#/components/schemas/VoicemailDetectionCost'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - analysis
            - $ref: '#/components/schemas/AnalysisCost'
          required:
            - type
    ServerMessageEndOfCallReport:
      title: ServerMessageEndOfCallReport
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageEndOfCallReportPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - end-of-call-report
          description: >-
            This is the type of the message. "end-of-call-report" is sent when
            the call ends and post-processing is complete.
        endedReason:
          $ref: '#/components/schemas/ServerMessageEndOfCallReportEndedReason'
          description: >-
            This is the reason the call ended. This can also be found at
            `call.endedReason` on GET /call/:id.
        cost:
          type: number
          format: double
          nullable: true
          description: >-
            This is the cost of the call in USD. This can also be found at
            `call.cost` on GET /call/:id.
        costs:
          type: array
          items:
            $ref: '#/components/schemas/ServerMessageEndOfCallReportCostsItem'
          nullable: true
          description: >-
            These are the costs of individual components of the call in USD.
            This can also be found at `call.costs` on GET /call/:id.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          description: >-
            These are the artifacts from the call. This can also be found at
            `call.artifact` on GET /call/:id.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        analysis:
          $ref: '#/components/schemas/Analysis'
          description: >-
            This is the analysis of the call. This can also be found at
            `call.analysis` on GET /call/:id.
        startedAt:
          type: string
          format: date-time
          nullable: true
          description: >-
            This is the ISO 8601 date-time string of when the call started. This
            can also be found at `call.startedAt` on GET /call/:id.
        endedAt:
          type: string
          format: date-time
          nullable: true
          description: >-
            This is the ISO 8601 date-time string of when the call ended. This
            can also be found at `call.endedAt` on GET /call/:id.
      required:
        - type
        - endedReason
        - artifact
        - analysis
    ServerMessageHangPhoneNumber:
      title: ServerMessageHangPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageHang:
      title: ServerMessageHang
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageHangPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - hang
          description: >-
            This is the type of the message. "hang" is sent when the assistant
            is hanging due to a delay. The delay can be caused by many factors,
            such as:

            - the model is too slow to respond

            - the voice is too slow to respond

            - the tool call is still waiting for a response from your server

            - etc.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
    ServerMessageKnowledgeBaseRequestPhoneNumber:
      title: ServerMessageKnowledgeBaseRequestPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageKnowledgeBaseRequestMessagesItem:
      title: ServerMessageKnowledgeBaseRequestMessagesItem
      oneOf:
        - $ref: '#/components/schemas/UserMessage'
        - $ref: '#/components/schemas/SystemMessage'
        - $ref: '#/components/schemas/BotMessage'
        - $ref: '#/components/schemas/ToolCallMessage'
        - $ref: '#/components/schemas/ToolCallResultMessage'
    ServerMessageKnowledgeBaseRequest:
      title: ServerMessageKnowledgeBaseRequest
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageKnowledgeBaseRequestPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - knowledge-base-request
          description: >-
            This is the type of the message. "knowledge-base-request" is sent to
            request knowledge base documents. To enable, use
            `assistant.knowledgeBase.provider=custom-knowledge-base`.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ServerMessageKnowledgeBaseRequestMessagesItem'
          nullable: true
          description: >-
            These are the messages that are going to be sent to the `model`
            right after the `knowledge-base-request` webhook completes.
        messagesOpenAIFormatted:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          description: This is just `messages` formatted for OpenAI.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
        - messagesOpenAIFormatted
    ServerMessageModelOutputPhoneNumber:
      title: ServerMessageModelOutputPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageModelOutput:
      title: ServerMessageModelOutput
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageModelOutputPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - model-output
          description: >-
            This is the type of the message. "model-output" is sent as the model
            outputs tokens.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        output:
          type: object
          additionalProperties: true
          description: This is the output of the model. It can be a token or tool call.
      required:
        - type
        - output
    ServerMessagePhoneCallControlPhoneNumber:
      title: ServerMessagePhoneCallControlPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessagePhoneCallControlRequest:
      title: ServerMessagePhoneCallControlRequest
      type: string
      enum:
        - forward
        - hang-up
      description: This is the request to control the phone call.
    ServerMessagePhoneCallControlDestination:
      title: ServerMessagePhoneCallControlDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the destination to forward the call to if the request is
        "forward".
    ServerMessagePhoneCallControl:
      title: ServerMessagePhoneCallControl
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessagePhoneCallControlPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - phone-call-control
          description: >-
            This is the type of the message. "phone-call-control" is an advanced
            type of message.


            When it is requested in `assistant.serverMessages`, the hangup and
            forwarding responsibilities are delegated to your server. Vapi will
            no longer do the actual transfer and hangup.
        request:
          $ref: '#/components/schemas/ServerMessagePhoneCallControlRequest'
          description: This is the request to control the phone call.
        destination:
          $ref: '#/components/schemas/ServerMessagePhoneCallControlDestination'
          nullable: true
          description: >-
            This is the destination to forward the call to if the request is
            "forward".
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
        - request
    ServerMessageSpeechUpdatePhoneNumber:
      title: ServerMessageSpeechUpdatePhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageSpeechUpdateStatus:
      title: ServerMessageSpeechUpdateStatus
      type: string
      enum:
        - started
        - stopped
      description: This is the status of the speech update.
    ServerMessageSpeechUpdateRole:
      title: ServerMessageSpeechUpdateRole
      type: string
      enum:
        - assistant
        - user
      description: This is the role which the speech update is for.
    ServerMessageSpeechUpdate:
      title: ServerMessageSpeechUpdate
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageSpeechUpdatePhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - speech-update
          description: >-
            This is the type of the message. "speech-update" is sent whenever
            assistant or user start or stop speaking.
        status:
          $ref: '#/components/schemas/ServerMessageSpeechUpdateStatus'
          description: This is the status of the speech update.
        role:
          $ref: '#/components/schemas/ServerMessageSpeechUpdateRole'
          description: This is the role which the speech update is for.
        turn:
          type: number
          format: double
          nullable: true
          description: This is the turn number of the speech update (0-indexed).
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
        - status
        - role
    ServerMessageStatusUpdatePhoneNumber:
      title: ServerMessageStatusUpdatePhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageStatusUpdateStatus:
      title: ServerMessageStatusUpdateStatus
      type: string
      enum:
        - scheduled
        - queued
        - ringing
        - in-progress
        - forwarding
        - ended
      description: This is the status of the call.
    ServerMessageStatusUpdateEndedReason:
      title: ServerMessageStatusUpdateEndedReason
      type: string
      enum:
        - call-start-error-neither-assistant-nor-server-set
        - assistant-request-failed
        - assistant-request-returned-error
        - assistant-request-returned-unspeakable-error
        - assistant-request-returned-invalid-assistant
        - assistant-request-returned-no-assistant
        - assistant-request-returned-forwarding-phone-number
        - call.start.error-get-org
        - call.start.error-get-subscription
        - call.start.error-get-assistant
        - call.start.error-get-phone-number
        - call.start.error-get-customer
        - call.start.error-get-resources-validation
        - call.start.error-vapi-number-international
        - call.start.error-vapi-number-outbound-daily-limit
        - call.start.error-get-transport
        - assistant-not-valid
        - database-error
        - assistant-not-found
        - pipeline-error-openai-voice-failed
        - pipeline-error-cartesia-voice-failed
        - pipeline-error-deepgram-voice-failed
        - pipeline-error-eleven-labs-voice-failed
        - pipeline-error-playht-voice-failed
        - pipeline-error-lmnt-voice-failed
        - pipeline-error-azure-voice-failed
        - pipeline-error-rime-ai-voice-failed
        - pipeline-error-smallest-ai-voice-failed
        - pipeline-error-neuphonic-voice-failed
        - pipeline-error-hume-voice-failed
        - pipeline-error-sesame-voice-failed
        - pipeline-error-tavus-video-failed
        - call.in-progress.error-vapifault-openai-voice-failed
        - call.in-progress.error-vapifault-cartesia-voice-failed
        - call.in-progress.error-vapifault-deepgram-voice-failed
        - call.in-progress.error-vapifault-eleven-labs-voice-failed
        - call.in-progress.error-vapifault-playht-voice-failed
        - call.in-progress.error-vapifault-lmnt-voice-failed
        - call.in-progress.error-vapifault-azure-voice-failed
        - call.in-progress.error-vapifault-rime-ai-voice-failed
        - call.in-progress.error-vapifault-smallest-ai-voice-failed
        - call.in-progress.error-vapifault-neuphonic-voice-failed
        - call.in-progress.error-vapifault-hume-voice-failed
        - call.in-progress.error-vapifault-sesame-voice-failed
        - call.in-progress.error-vapifault-tavus-video-failed
        - pipeline-error-vapi-llm-failed
        - pipeline-error-vapi-400-bad-request-validation-failed
        - pipeline-error-vapi-401-unauthorized
        - pipeline-error-vapi-403-model-access-denied
        - pipeline-error-vapi-429-exceeded-quota
        - pipeline-error-vapi-500-server-error
        - pipeline-error-vapi-503-server-overloaded-error
        - call.in-progress.error-vapifault-vapi-llm-failed
        - >-
          call.in-progress.error-vapifault-vapi-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-vapi-401-unauthorized
        - call.in-progress.error-vapifault-vapi-403-model-access-denied
        - call.in-progress.error-vapifault-vapi-429-exceeded-quota
        - call.in-progress.error-providerfault-vapi-500-server-error
        - call.in-progress.error-providerfault-vapi-503-server-overloaded-error
        - pipeline-error-deepgram-transcriber-failed
        - call.in-progress.error-vapifault-deepgram-transcriber-failed
        - pipeline-error-gladia-transcriber-failed
        - call.in-progress.error-vapifault-gladia-transcriber-failed
        - pipeline-error-speechmatics-transcriber-failed
        - call.in-progress.error-vapifault-speechmatics-transcriber-failed
        - pipeline-error-assembly-ai-transcriber-failed
        - pipeline-error-assembly-ai-returning-400-insufficent-funds
        - pipeline-error-assembly-ai-returning-400-paid-only-feature
        - pipeline-error-assembly-ai-returning-401-invalid-credentials
        - pipeline-error-assembly-ai-returning-500-invalid-schema
        - pipeline-error-assembly-ai-returning-500-word-boost-parsing-failed
        - call.in-progress.error-vapifault-assembly-ai-transcriber-failed
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-400-insufficent-funds
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-400-paid-only-feature
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-401-invalid-credentials
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-500-invalid-schema
        - >-
          call.in-progress.error-vapifault-assembly-ai-returning-500-word-boost-parsing-failed
        - pipeline-error-talkscriber-transcriber-failed
        - call.in-progress.error-vapifault-talkscriber-transcriber-failed
        - pipeline-error-azure-speech-transcriber-failed
        - call.in-progress.error-vapifault-azure-speech-transcriber-failed
        - call.in-progress.error-pipeline-no-available-llm-model
        - worker-shutdown
        - unknown-error
        - vonage-disconnected
        - vonage-failed-to-connect-call
        - vonage-completed
        - phone-call-provider-bypass-enabled-but-no-call-received
        - call.in-progress.error-vapifault-transport-never-connected
        - >-
          call.in-progress.error-vapifault-transport-connected-but-call-not-active
        - >-
          call.in-progress.error-vapifault-call-started-but-connection-to-transport-missing
        - call.in-progress.error-vapifault-openai-llm-failed
        - call.in-progress.error-vapifault-azure-openai-llm-failed
        - call.in-progress.error-vapifault-groq-llm-failed
        - call.in-progress.error-vapifault-google-llm-failed
        - call.in-progress.error-vapifault-xai-llm-failed
        - call.in-progress.error-vapifault-mistral-llm-failed
        - call.in-progress.error-vapifault-inflection-ai-llm-failed
        - call.in-progress.error-vapifault-cerebras-llm-failed
        - call.in-progress.error-vapifault-deep-seek-llm-failed
        - pipeline-error-openai-400-bad-request-validation-failed
        - pipeline-error-openai-401-unauthorized
        - pipeline-error-openai-401-incorrect-api-key
        - pipeline-error-openai-401-account-not-in-organization
        - pipeline-error-openai-403-model-access-denied
        - pipeline-error-openai-429-exceeded-quota
        - pipeline-error-openai-429-rate-limit-reached
        - pipeline-error-openai-500-server-error
        - pipeline-error-openai-503-server-overloaded-error
        - pipeline-error-openai-llm-failed
        - >-
          call.in-progress.error-vapifault-openai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-openai-401-unauthorized
        - call.in-progress.error-vapifault-openai-401-incorrect-api-key
        - >-
          call.in-progress.error-vapifault-openai-401-account-not-in-organization
        - call.in-progress.error-vapifault-openai-403-model-access-denied
        - call.in-progress.error-vapifault-openai-429-exceeded-quota
        - call.in-progress.error-vapifault-openai-429-rate-limit-reached
        - call.in-progress.error-providerfault-openai-500-server-error
        - >-
          call.in-progress.error-providerfault-openai-503-server-overloaded-error
        - pipeline-error-azure-openai-400-bad-request-validation-failed
        - pipeline-error-azure-openai-401-unauthorized
        - pipeline-error-azure-openai-403-model-access-denied
        - pipeline-error-azure-openai-429-exceeded-quota
        - pipeline-error-azure-openai-500-server-error
        - pipeline-error-azure-openai-503-server-overloaded-error
        - pipeline-error-azure-openai-llm-failed
        - >-
          call.in-progress.error-vapifault-azure-openai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-azure-openai-401-unauthorized
        - call.in-progress.error-vapifault-azure-openai-403-model-access-denied
        - call.in-progress.error-vapifault-azure-openai-429-exceeded-quota
        - call.in-progress.error-providerfault-azure-openai-500-server-error
        - >-
          call.in-progress.error-providerfault-azure-openai-503-server-overloaded-error
        - pipeline-error-google-400-bad-request-validation-failed
        - pipeline-error-google-401-unauthorized
        - pipeline-error-google-403-model-access-denied
        - pipeline-error-google-429-exceeded-quota
        - pipeline-error-google-500-server-error
        - pipeline-error-google-503-server-overloaded-error
        - pipeline-error-google-llm-failed
        - >-
          call.in-progress.error-vapifault-google-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-google-401-unauthorized
        - call.in-progress.error-vapifault-google-403-model-access-denied
        - call.in-progress.error-vapifault-google-429-exceeded-quota
        - call.in-progress.error-providerfault-google-500-server-error
        - >-
          call.in-progress.error-providerfault-google-503-server-overloaded-error
        - pipeline-error-xai-400-bad-request-validation-failed
        - pipeline-error-xai-401-unauthorized
        - pipeline-error-xai-403-model-access-denied
        - pipeline-error-xai-429-exceeded-quota
        - pipeline-error-xai-500-server-error
        - pipeline-error-xai-503-server-overloaded-error
        - pipeline-error-xai-llm-failed
        - call.in-progress.error-vapifault-xai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-xai-401-unauthorized
        - call.in-progress.error-vapifault-xai-403-model-access-denied
        - call.in-progress.error-vapifault-xai-429-exceeded-quota
        - call.in-progress.error-providerfault-xai-500-server-error
        - call.in-progress.error-providerfault-xai-503-server-overloaded-error
        - pipeline-error-mistral-400-bad-request-validation-failed
        - pipeline-error-mistral-401-unauthorized
        - pipeline-error-mistral-403-model-access-denied
        - pipeline-error-mistral-429-exceeded-quota
        - pipeline-error-mistral-500-server-error
        - pipeline-error-mistral-503-server-overloaded-error
        - pipeline-error-mistral-llm-failed
        - >-
          call.in-progress.error-vapifault-mistral-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-mistral-401-unauthorized
        - call.in-progress.error-vapifault-mistral-403-model-access-denied
        - call.in-progress.error-vapifault-mistral-429-exceeded-quota
        - call.in-progress.error-providerfault-mistral-500-server-error
        - >-
          call.in-progress.error-providerfault-mistral-503-server-overloaded-error
        - pipeline-error-inflection-ai-400-bad-request-validation-failed
        - pipeline-error-inflection-ai-401-unauthorized
        - pipeline-error-inflection-ai-403-model-access-denied
        - pipeline-error-inflection-ai-429-exceeded-quota
        - pipeline-error-inflection-ai-500-server-error
        - pipeline-error-inflection-ai-503-server-overloaded-error
        - pipeline-error-inflection-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-inflection-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-inflection-ai-401-unauthorized
        - call.in-progress.error-vapifault-inflection-ai-403-model-access-denied
        - call.in-progress.error-vapifault-inflection-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-inflection-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-inflection-ai-503-server-overloaded-error
        - pipeline-error-deep-seek-400-bad-request-validation-failed
        - pipeline-error-deep-seek-401-unauthorized
        - pipeline-error-deep-seek-403-model-access-denied
        - pipeline-error-deep-seek-429-exceeded-quota
        - pipeline-error-deep-seek-500-server-error
        - pipeline-error-deep-seek-503-server-overloaded-error
        - pipeline-error-deep-seek-llm-failed
        - >-
          call.in-progress.error-vapifault-deep-seek-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-deep-seek-401-unauthorized
        - call.in-progress.error-vapifault-deep-seek-403-model-access-denied
        - call.in-progress.error-vapifault-deep-seek-429-exceeded-quota
        - call.in-progress.error-providerfault-deep-seek-500-server-error
        - >-
          call.in-progress.error-providerfault-deep-seek-503-server-overloaded-error
        - pipeline-error-groq-400-bad-request-validation-failed
        - pipeline-error-groq-401-unauthorized
        - pipeline-error-groq-403-model-access-denied
        - pipeline-error-groq-429-exceeded-quota
        - pipeline-error-groq-500-server-error
        - pipeline-error-groq-503-server-overloaded-error
        - pipeline-error-groq-llm-failed
        - >-
          call.in-progress.error-vapifault-groq-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-groq-401-unauthorized
        - call.in-progress.error-vapifault-groq-403-model-access-denied
        - call.in-progress.error-vapifault-groq-429-exceeded-quota
        - call.in-progress.error-providerfault-groq-500-server-error
        - call.in-progress.error-providerfault-groq-503-server-overloaded-error
        - pipeline-error-cerebras-400-bad-request-validation-failed
        - pipeline-error-cerebras-401-unauthorized
        - pipeline-error-cerebras-403-model-access-denied
        - pipeline-error-cerebras-429-exceeded-quota
        - pipeline-error-cerebras-500-server-error
        - pipeline-error-cerebras-503-server-overloaded-error
        - pipeline-error-cerebras-llm-failed
        - >-
          call.in-progress.error-vapifault-cerebras-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-cerebras-401-unauthorized
        - call.in-progress.error-vapifault-cerebras-403-model-access-denied
        - call.in-progress.error-vapifault-cerebras-429-exceeded-quota
        - call.in-progress.error-providerfault-cerebras-500-server-error
        - >-
          call.in-progress.error-providerfault-cerebras-503-server-overloaded-error
        - pipeline-error-anthropic-400-bad-request-validation-failed
        - pipeline-error-anthropic-401-unauthorized
        - pipeline-error-anthropic-403-model-access-denied
        - pipeline-error-anthropic-429-exceeded-quota
        - pipeline-error-anthropic-500-server-error
        - pipeline-error-anthropic-503-server-overloaded-error
        - pipeline-error-anthropic-llm-failed
        - call.in-progress.error-vapifault-anthropic-llm-failed
        - >-
          call.in-progress.error-vapifault-anthropic-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-anthropic-401-unauthorized
        - call.in-progress.error-vapifault-anthropic-403-model-access-denied
        - call.in-progress.error-vapifault-anthropic-429-exceeded-quota
        - call.in-progress.error-providerfault-anthropic-500-server-error
        - >-
          call.in-progress.error-providerfault-anthropic-503-server-overloaded-error
        - pipeline-error-together-ai-400-bad-request-validation-failed
        - pipeline-error-together-ai-401-unauthorized
        - pipeline-error-together-ai-403-model-access-denied
        - pipeline-error-together-ai-429-exceeded-quota
        - pipeline-error-together-ai-500-server-error
        - pipeline-error-together-ai-503-server-overloaded-error
        - pipeline-error-together-ai-llm-failed
        - call.in-progress.error-vapifault-together-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-together-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-together-ai-401-unauthorized
        - call.in-progress.error-vapifault-together-ai-403-model-access-denied
        - call.in-progress.error-vapifault-together-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-together-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-together-ai-503-server-overloaded-error
        - pipeline-error-anyscale-400-bad-request-validation-failed
        - pipeline-error-anyscale-401-unauthorized
        - pipeline-error-anyscale-403-model-access-denied
        - pipeline-error-anyscale-429-exceeded-quota
        - pipeline-error-anyscale-500-server-error
        - pipeline-error-anyscale-503-server-overloaded-error
        - pipeline-error-anyscale-llm-failed
        - call.in-progress.error-vapifault-anyscale-llm-failed
        - >-
          call.in-progress.error-vapifault-anyscale-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-anyscale-401-unauthorized
        - call.in-progress.error-vapifault-anyscale-403-model-access-denied
        - call.in-progress.error-vapifault-anyscale-429-exceeded-quota
        - call.in-progress.error-providerfault-anyscale-500-server-error
        - >-
          call.in-progress.error-providerfault-anyscale-503-server-overloaded-error
        - pipeline-error-openrouter-400-bad-request-validation-failed
        - pipeline-error-openrouter-401-unauthorized
        - pipeline-error-openrouter-403-model-access-denied
        - pipeline-error-openrouter-429-exceeded-quota
        - pipeline-error-openrouter-500-server-error
        - pipeline-error-openrouter-503-server-overloaded-error
        - pipeline-error-openrouter-llm-failed
        - call.in-progress.error-vapifault-openrouter-llm-failed
        - >-
          call.in-progress.error-vapifault-openrouter-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-openrouter-401-unauthorized
        - call.in-progress.error-vapifault-openrouter-403-model-access-denied
        - call.in-progress.error-vapifault-openrouter-429-exceeded-quota
        - call.in-progress.error-providerfault-openrouter-500-server-error
        - >-
          call.in-progress.error-providerfault-openrouter-503-server-overloaded-error
        - pipeline-error-perplexity-ai-400-bad-request-validation-failed
        - pipeline-error-perplexity-ai-401-unauthorized
        - pipeline-error-perplexity-ai-403-model-access-denied
        - pipeline-error-perplexity-ai-429-exceeded-quota
        - pipeline-error-perplexity-ai-500-server-error
        - pipeline-error-perplexity-ai-503-server-overloaded-error
        - pipeline-error-perplexity-ai-llm-failed
        - call.in-progress.error-vapifault-perplexity-ai-llm-failed
        - >-
          call.in-progress.error-vapifault-perplexity-ai-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-perplexity-ai-401-unauthorized
        - call.in-progress.error-vapifault-perplexity-ai-403-model-access-denied
        - call.in-progress.error-vapifault-perplexity-ai-429-exceeded-quota
        - call.in-progress.error-providerfault-perplexity-ai-500-server-error
        - >-
          call.in-progress.error-providerfault-perplexity-ai-503-server-overloaded-error
        - pipeline-error-deepinfra-400-bad-request-validation-failed
        - pipeline-error-deepinfra-401-unauthorized
        - pipeline-error-deepinfra-403-model-access-denied
        - pipeline-error-deepinfra-429-exceeded-quota
        - pipeline-error-deepinfra-500-server-error
        - pipeline-error-deepinfra-503-server-overloaded-error
        - pipeline-error-deepinfra-llm-failed
        - call.in-progress.error-vapifault-deepinfra-llm-failed
        - >-
          call.in-progress.error-vapifault-deepinfra-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-deepinfra-401-unauthorized
        - call.in-progress.error-vapifault-deepinfra-403-model-access-denied
        - call.in-progress.error-vapifault-deepinfra-429-exceeded-quota
        - call.in-progress.error-providerfault-deepinfra-500-server-error
        - >-
          call.in-progress.error-providerfault-deepinfra-503-server-overloaded-error
        - pipeline-error-runpod-400-bad-request-validation-failed
        - pipeline-error-runpod-401-unauthorized
        - pipeline-error-runpod-403-model-access-denied
        - pipeline-error-runpod-429-exceeded-quota
        - pipeline-error-runpod-500-server-error
        - pipeline-error-runpod-503-server-overloaded-error
        - pipeline-error-runpod-llm-failed
        - call.in-progress.error-vapifault-runpod-llm-failed
        - >-
          call.in-progress.error-vapifault-runpod-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-runpod-401-unauthorized
        - call.in-progress.error-vapifault-runpod-403-model-access-denied
        - call.in-progress.error-vapifault-runpod-429-exceeded-quota
        - call.in-progress.error-providerfault-runpod-500-server-error
        - >-
          call.in-progress.error-providerfault-runpod-503-server-overloaded-error
        - pipeline-error-custom-llm-400-bad-request-validation-failed
        - pipeline-error-custom-llm-401-unauthorized
        - pipeline-error-custom-llm-403-model-access-denied
        - pipeline-error-custom-llm-429-exceeded-quota
        - pipeline-error-custom-llm-500-server-error
        - pipeline-error-custom-llm-503-server-overloaded-error
        - pipeline-error-custom-llm-llm-failed
        - call.in-progress.error-vapifault-custom-llm-llm-failed
        - >-
          call.in-progress.error-vapifault-custom-llm-400-bad-request-validation-failed
        - call.in-progress.error-vapifault-custom-llm-401-unauthorized
        - call.in-progress.error-vapifault-custom-llm-403-model-access-denied
        - call.in-progress.error-vapifault-custom-llm-429-exceeded-quota
        - call.in-progress.error-providerfault-custom-llm-500-server-error
        - >-
          call.in-progress.error-providerfault-custom-llm-503-server-overloaded-error
        - pipeline-error-custom-voice-failed
        - pipeline-error-cartesia-socket-hang-up
        - pipeline-error-cartesia-requested-payment
        - pipeline-error-cartesia-500-server-error
        - pipeline-error-cartesia-503-server-error
        - pipeline-error-cartesia-522-server-error
        - call.in-progress.error-vapifault-cartesia-socket-hang-up
        - call.in-progress.error-vapifault-cartesia-requested-payment
        - call.in-progress.error-providerfault-cartesia-500-server-error
        - call.in-progress.error-providerfault-cartesia-503-server-error
        - call.in-progress.error-providerfault-cartesia-522-server-error
        - pipeline-error-eleven-labs-voice-not-found
        - pipeline-error-eleven-labs-quota-exceeded
        - pipeline-error-eleven-labs-unauthorized-access
        - pipeline-error-eleven-labs-unauthorized-to-access-model
        - pipeline-error-eleven-labs-professional-voices-only-for-creator-plus
        - pipeline-error-eleven-labs-blocked-free-plan-and-requested-upgrade
        - >-
          pipeline-error-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
        - >-
          pipeline-error-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
        - pipeline-error-eleven-labs-system-busy-and-requested-upgrade
        - pipeline-error-eleven-labs-voice-not-fine-tuned
        - pipeline-error-eleven-labs-invalid-api-key
        - pipeline-error-eleven-labs-invalid-voice-samples
        - pipeline-error-eleven-labs-voice-disabled-by-owner
        - pipeline-error-eleven-labs-blocked-account-in-probation
        - pipeline-error-eleven-labs-blocked-content-against-their-policy
        - pipeline-error-eleven-labs-missing-samples-for-voice-clone
        - pipeline-error-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
        - pipeline-error-eleven-labs-voice-not-allowed-for-free-users
        - pipeline-error-eleven-labs-max-character-limit-exceeded
        - >-
          pipeline-error-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
        - pipeline-error-eleven-labs-500-server-error
        - call.in-progress.error-vapifault-eleven-labs-voice-not-found
        - call.in-progress.error-vapifault-eleven-labs-quota-exceeded
        - call.in-progress.error-vapifault-eleven-labs-unauthorized-access
        - >-
          call.in-progress.error-vapifault-eleven-labs-unauthorized-to-access-model
        - >-
          call.in-progress.error-vapifault-eleven-labs-professional-voices-only-for-creator-plus
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-free-plan-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-concurrent-requests-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-using-instant-voice-clone-and-requested-upgrade
        - >-
          call.in-progress.error-vapifault-eleven-labs-system-busy-and-requested-upgrade
        - call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned
        - call.in-progress.error-vapifault-eleven-labs-invalid-api-key
        - call.in-progress.error-vapifault-eleven-labs-invalid-voice-samples
        - call.in-progress.error-vapifault-eleven-labs-voice-disabled-by-owner
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-account-in-probation
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-content-against-their-policy
        - >-
          call.in-progress.error-vapifault-eleven-labs-missing-samples-for-voice-clone
        - >-
          call.in-progress.error-vapifault-eleven-labs-voice-not-fine-tuned-and-cannot-be-used
        - >-
          call.in-progress.error-vapifault-eleven-labs-voice-not-allowed-for-free-users
        - >-
          call.in-progress.error-vapifault-eleven-labs-max-character-limit-exceeded
        - >-
          call.in-progress.error-vapifault-eleven-labs-blocked-voice-potentially-against-terms-of-service-and-awaiting-verification
        - call.in-progress.error-providerfault-eleven-labs-500-server-error
        - pipeline-error-playht-request-timed-out
        - pipeline-error-playht-invalid-voice
        - pipeline-error-playht-unexpected-error
        - pipeline-error-playht-out-of-credits
        - pipeline-error-playht-invalid-emotion
        - pipeline-error-playht-voice-must-be-a-valid-voice-manifest-uri
        - pipeline-error-playht-401-unauthorized
        - pipeline-error-playht-403-forbidden-out-of-characters
        - pipeline-error-playht-403-forbidden-api-access-not-available
        - pipeline-error-playht-429-exceeded-quota
        - pipeline-error-playht-502-gateway-error
        - pipeline-error-playht-504-gateway-error
        - call.in-progress.error-vapifault-playht-request-timed-out
        - call.in-progress.error-vapifault-playht-invalid-voice
        - call.in-progress.error-vapifault-playht-unexpected-error
        - call.in-progress.error-vapifault-playht-out-of-credits
        - call.in-progress.error-vapifault-playht-invalid-emotion
        - >-
          call.in-progress.error-vapifault-playht-voice-must-be-a-valid-voice-manifest-uri
        - call.in-progress.error-vapifault-playht-401-unauthorized
        - >-
          call.in-progress.error-vapifault-playht-403-forbidden-out-of-characters
        - >-
          call.in-progress.error-vapifault-playht-403-forbidden-api-access-not-available
        - call.in-progress.error-vapifault-playht-429-exceeded-quota
        - call.in-progress.error-providerfault-playht-502-gateway-error
        - call.in-progress.error-providerfault-playht-504-gateway-error
        - pipeline-error-custom-transcriber-failed
        - call.in-progress.error-vapifault-custom-transcriber-failed
        - pipeline-error-11labs-transcriber-failed
        - call.in-progress.error-vapifault-11labs-transcriber-failed
        - >-
          pipeline-error-deepgram-returning-400-no-such-model-language-tier-combination
        - pipeline-error-deepgram-returning-401-invalid-credentials
        - pipeline-error-deepgram-returning-403-model-access-denied
        - pipeline-error-deepgram-returning-404-not-found
        - pipeline-error-deepgram-returning-500-invalid-json
        - pipeline-error-deepgram-returning-502-network-error
        - pipeline-error-deepgram-returning-502-bad-gateway-ehostunreach
        - >-
          call.in-progress.error-vapifault-deepgram-returning-400-no-such-model-language-tier-combination
        - >-
          call.in-progress.error-vapifault-deepgram-returning-401-invalid-credentials
        - call.in-progress.error-vapifault-deepgram-returning-404-not-found
        - >-
          call.in-progress.error-vapifault-deepgram-returning-403-model-access-denied
        - >-
          call.in-progress.error-providerfault-deepgram-returning-500-invalid-json
        - >-
          call.in-progress.error-providerfault-deepgram-returning-502-network-error
        - >-
          call.in-progress.error-providerfault-deepgram-returning-502-bad-gateway-ehostunreach
        - pipeline-error-google-transcriber-failed
        - call.in-progress.error-vapifault-google-transcriber-failed
        - pipeline-error-openai-transcriber-failed
        - call.in-progress.error-vapifault-openai-transcriber-failed
        - assistant-ended-call
        - assistant-said-end-call-phrase
        - assistant-ended-call-with-hangup-task
        - assistant-ended-call-after-message-spoken
        - assistant-forwarded-call
        - assistant-join-timed-out
        - call.in-progress.error-assistant-did-not-receive-customer-audio
        - customer-busy
        - customer-ended-call
        - customer-did-not-answer
        - customer-did-not-give-microphone-permission
        - exceeded-max-duration
        - manually-canceled
        - phone-call-provider-closed-websocket
        - silence-timed-out
        - call.in-progress.error-sip-telephony-provider-failed-to-connect-call
        - twilio-failed-to-connect-call
        - twilio-reported-customer-misdialed
        - vonage-rejected
        - voicemail
      description: >-
        This is the reason the call ended. This is only sent if the status is
        "ended".
    ServerMessageStatusUpdateMessagesItem:
      title: ServerMessageStatusUpdateMessagesItem
      oneOf:
        - $ref: '#/components/schemas/UserMessage'
        - $ref: '#/components/schemas/SystemMessage'
        - $ref: '#/components/schemas/BotMessage'
        - $ref: '#/components/schemas/ToolCallMessage'
        - $ref: '#/components/schemas/ToolCallResultMessage'
    ServerMessageStatusUpdateDestination:
      title: ServerMessageStatusUpdateDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the destination the call is being transferred to. This is only
        sent if the status is "forwarding".
    ServerMessageStatusUpdate:
      title: ServerMessageStatusUpdate
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageStatusUpdatePhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - status-update
          description: >-
            This is the type of the message. "status-update" is sent whenever
            the `call.status` changes.
        status:
          $ref: '#/components/schemas/ServerMessageStatusUpdateStatus'
          description: This is the status of the call.
        endedReason:
          $ref: '#/components/schemas/ServerMessageStatusUpdateEndedReason'
          nullable: true
          description: >-
            This is the reason the call ended. This is only sent if the status
            is "ended".
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ServerMessageStatusUpdateMessagesItem'
          nullable: true
          description: >-
            These are the conversation messages of the call. This is only sent
            if the status is "forwarding".
        messagesOpenAIFormatted:
          type: array
          items:
            $ref: '#/components/schemas/OpenAiMessage'
          nullable: true
          description: >-
            These are the conversation messages of the call. This is only sent
            if the status is "forwarding".
        destination:
          $ref: '#/components/schemas/ServerMessageStatusUpdateDestination'
          nullable: true
          description: >-
            This is the destination the call is being transferred to. This is
            only sent if the status is "forwarding".
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        transcript:
          type: string
          nullable: true
          description: >-
            This is the transcript of the call. This is only sent if the status
            is "forwarding".
        summary:
          type: string
          nullable: true
          description: >-
            This is the summary of the call. This is only sent if the status is
            "forwarding".
        inboundPhoneCallDebuggingArtifacts:
          type: object
          additionalProperties: true
          nullable: true
          description: >-
            This is the inbound phone call debugging artifacts. This is only
            sent if the status is "ended" and there was an error accepting the
            inbound phone call.


            This will include any errors related to the "assistant-request" if
            one was made.
      required:
        - type
        - status
    ServerMessageToolCallsPhoneNumber:
      title: ServerMessageToolCallsPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageToolCallsToolWithToolCallListItem:
      title: ServerMessageToolCallsToolWithToolCallListItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - function
            - $ref: '#/components/schemas/FunctionToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - ghl
            - $ref: '#/components/schemas/GhlToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - make
            - $ref: '#/components/schemas/MakeToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - bash
            - $ref: '#/components/schemas/BashToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - computer
            - $ref: '#/components/schemas/ComputerToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - textEditor
            - $ref: '#/components/schemas/TextEditorToolWithToolCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - google.calendar.event.create
            - $ref: '#/components/schemas/GoogleCalendarCreateEventToolWithToolCall'
          required:
            - type
    ServerMessageToolCalls:
      title: ServerMessageToolCalls
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageToolCallsPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - tool-calls
          nullable: true
          description: >-
            This is the type of the message. "tool-calls" is sent to call a
            tool.
        toolWithToolCallList:
          type: array
          items:
            $ref: >-
              #/components/schemas/ServerMessageToolCallsToolWithToolCallListItem
          description: >-
            This is the list of tools calls that the model is requesting along
            with the original tool configuration.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        toolCallList:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'
          description: This is the list of tool calls that the model is requesting.
      required:
        - toolWithToolCallList
        - toolCallList
    ServerMessageTransferDestinationRequestPhoneNumber:
      title: ServerMessageTransferDestinationRequestPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageTransferDestinationRequest:
      title: ServerMessageTransferDestinationRequest
      type: object
      properties:
        phoneNumber:
          $ref: >-
            #/components/schemas/ServerMessageTransferDestinationRequestPhoneNumber
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - transfer-destination-request
          description: >-
            This is the type of the message. "transfer-destination-request" is
            sent when the model is requesting transfer but destination is
            unknown.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
    ServerMessageTransferUpdatePhoneNumber:
      title: ServerMessageTransferUpdatePhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageTransferUpdateDestination:
      title: ServerMessageTransferUpdateDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - assistant
            - $ref: '#/components/schemas/TransferDestinationAssistant'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - step
            - $ref: '#/components/schemas/TransferDestinationStep'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: This is the destination of the transfer.
    ServerMessageTransferUpdate:
      title: ServerMessageTransferUpdate
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageTransferUpdatePhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - transfer-update
          description: >-
            This is the type of the message. "transfer-update" is sent whenever
            a transfer happens.
        destination:
          $ref: '#/components/schemas/ServerMessageTransferUpdateDestination'
          nullable: true
          description: This is the destination of the transfer.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        toAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that the call is being transferred to. This is
            only sent if `destination.type` is "assistant".
        fromAssistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that the call is being transferred from. This
            is only sent if `destination.type` is "assistant".
        toStepRecord:
          type: object
          additionalProperties: true
          nullable: true
          description: This is the step that the conversation moved to.
        fromStepRecord:
          type: object
          additionalProperties: true
          nullable: true
          description: This is the step that the conversation moved from. =
      required:
        - type
    ServerMessageTranscriptPhoneNumber:
      title: ServerMessageTranscriptPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageTranscriptType:
      title: ServerMessageTranscriptType
      type: string
      enum:
        - transcript
        - transcript[transcriptType='final']
      description: >-
        This is the type of the message. "transcript" is sent as transcriber
        outputs partial or final transcript.
    ServerMessageTranscriptRole:
      title: ServerMessageTranscriptRole
      type: string
      enum:
        - assistant
        - user
      description: This is the role for which the transcript is for.
    ServerMessageTranscriptTranscriptType:
      title: ServerMessageTranscriptTranscriptType
      type: string
      enum:
        - partial
        - final
      description: This is the type of the transcript.
    ServerMessageTranscript:
      title: ServerMessageTranscript
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageTranscriptPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          $ref: '#/components/schemas/ServerMessageTranscriptType'
          description: >-
            This is the type of the message. "transcript" is sent as transcriber
            outputs partial or final transcript.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        role:
          $ref: '#/components/schemas/ServerMessageTranscriptRole'
          description: This is the role for which the transcript is for.
        transcriptType:
          $ref: '#/components/schemas/ServerMessageTranscriptTranscriptType'
          description: This is the type of the transcript.
        transcript:
          type: string
          description: This is the transcript content.
      required:
        - type
        - role
        - transcriptType
        - transcript
    ServerMessageUserInterruptedPhoneNumber:
      title: ServerMessageUserInterruptedPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageUserInterrupted:
      title: ServerMessageUserInterrupted
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageUserInterruptedPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - user-interrupted
          description: >-
            This is the type of the message. "user-interrupted" is sent when the
            user interrupts the assistant.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
      required:
        - type
    ServerMessageLanguageChangeDetectedPhoneNumber:
      title: ServerMessageLanguageChangeDetectedPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageLanguageChangeDetected:
      title: ServerMessageLanguageChangeDetected
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageLanguageChangeDetectedPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - language-change-detected
          description: >-
            This is the type of the message. "language-change-detected" is sent
            when the transcriber is automatically switched based on the detected
            language.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        language:
          type: string
          description: This is the language the transcriber is switched to.
      required:
        - type
        - language
    ServerMessageVoiceInputPhoneNumber:
      title: ServerMessageVoiceInputPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageVoiceInput:
      title: ServerMessageVoiceInput
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageVoiceInputPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - voice-input
          description: >-
            This is the type of the message. "voice-input" is sent when a
            generation is requested from voice provider.
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        input:
          type: string
          description: This is the voice input content
      required:
        - type
        - input
    ServerMessageVoiceRequestPhoneNumber:
      title: ServerMessageVoiceRequestPhoneNumber
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - byo-phone-number
            - $ref: '#/components/schemas/CreateByoPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - twilio
            - $ref: '#/components/schemas/CreateTwilioPhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vonage
            - $ref: '#/components/schemas/CreateVonagePhoneNumberDto'
          required:
            - provider
        - type: object
          allOf:
            - type: object
              properties:
                provider:
                  type: string
                  enum:
                    - vapi
            - $ref: '#/components/schemas/CreateVapiPhoneNumberDto'
          required:
            - provider
      description: |-
        This is the phone number associated with the call.

        This matches one of the following:
        - `call.phoneNumber`,
        - `call.phoneNumberId`.
    ServerMessageVoiceRequest:
      title: ServerMessageVoiceRequest
      type: object
      properties:
        phoneNumber:
          $ref: '#/components/schemas/ServerMessageVoiceRequestPhoneNumber'
          nullable: true
          description: |-
            This is the phone number associated with the call.

            This matches one of the following:
            - `call.phoneNumber`,
            - `call.phoneNumberId`.
        type:
          type: string
          enum:
            - voice-request
          description: >-
            This is the type of the message. "voice-request" is sent when using
            `assistant.voice={ "type": "custom-voice" }`.


            Here is what the request will look like:


            POST https://{assistant.voice.server.url}

            Content-Type: application/json


            {
              "messsage": {
                "type": "voice-request",
                "text": "Hello, world!",
                "sampleRate": 24000,
                ...other metadata about the call...
              }
            }


            The expected response is 1-channel 16-bit raw PCM audio at the
            sample rate specified in the request. Here is how the response will
            be piped to the transport:

            ```

            response.on('data', (chunk: Buffer) => {
              outputStream.write(chunk);
            });

            ```
        timestamp:
          type: number
          format: double
          nullable: true
          description: >-
            This is the timestamp of when the message was sent in milliseconds
            since Unix Epoch.
        artifact:
          $ref: '#/components/schemas/Artifact'
          nullable: true
          description: |-
            This is a live version of the `call.artifact`.

            This matches what is stored on `call.artifact` after the call.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that is currently active. This is provided for
            convenience.


            This matches one of the following:

            - `call.assistant`,

            - `call.assistantId`,

            - `call.squad[n].assistant`,

            - `call.squad[n].assistantId`,

            - `call.squadId->[n].assistant`,

            - `call.squadId->[n].assistantId`.
        customer:
          $ref: '#/components/schemas/CreateCustomerDto'
          nullable: true
          description: |-
            This is the customer associated with the call.

            This matches one of the following:
            - `call.customer`,
            - `call.customerId`.
        call:
          $ref: '#/components/schemas/Call'
          nullable: true
          description: >-
            This is the call object.


            This matches what was returned in POST /call.


            Note: This might get stale during the call. To get the latest call
            object, especially after the call is ended, use GET /call/:id.
        text:
          type: string
          description: This is the text to be synthesized.
        sampleRate:
          type: number
          format: double
          description: This is the sample rate to be synthesized.
      required:
        - type
        - text
        - sampleRate
    ServerMessageMessage:
      title: ServerMessageMessage
      oneOf:
        - $ref: '#/components/schemas/ServerMessageAssistantRequest'
        - $ref: '#/components/schemas/ServerMessageConversationUpdate'
        - $ref: '#/components/schemas/ServerMessageEndOfCallReport'
        - $ref: '#/components/schemas/ServerMessageHang'
        - $ref: '#/components/schemas/ServerMessageKnowledgeBaseRequest'
        - $ref: '#/components/schemas/ServerMessageModelOutput'
        - $ref: '#/components/schemas/ServerMessagePhoneCallControl'
        - $ref: '#/components/schemas/ServerMessageSpeechUpdate'
        - $ref: '#/components/schemas/ServerMessageStatusUpdate'
        - $ref: '#/components/schemas/ServerMessageToolCalls'
        - $ref: '#/components/schemas/ServerMessageTransferDestinationRequest'
        - $ref: '#/components/schemas/ServerMessageTransferUpdate'
        - $ref: '#/components/schemas/ServerMessageTranscript'
        - $ref: '#/components/schemas/ServerMessageUserInterrupted'
        - $ref: '#/components/schemas/ServerMessageLanguageChangeDetected'
        - $ref: '#/components/schemas/ServerMessageVoiceInput'
        - $ref: '#/components/schemas/ServerMessageVoiceRequest'
      description: >-
        These are all the messages that can be sent to your server before, after
        and during the call. Configure the messages you'd like to receive in
        `assistant.serverMessages`.


        The server where the message is sent is determined by the following
        precedence order:


        1. `tool.server.url` (if configured, and only for "tool-calls" message)

        2. `assistant.serverUrl` (if configure)

        3. `phoneNumber.serverUrl` (if configured)

        4. `org.serverUrl` (if configured)
    ServerMessage:
      title: ServerMessage
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ServerMessageMessage'
          description: >-
            These are all the messages that can be sent to your server before,
            after and during the call. Configure the messages you'd like to
            receive in `assistant.serverMessages`.


            The server where the message is sent is determined by the following
            precedence order:


            1. `tool.server.url` (if configured, and only for "tool-calls"
            message)

            2. `assistant.serverUrl` (if configure)

            3. `phoneNumber.serverUrl` (if configured)

            4. `org.serverUrl` (if configured)
      required:
        - message
    ServerMessageResponseAssistantRequestDestination:
      title: ServerMessageResponseAssistantRequestDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: >-
        This is the destination to transfer the inbound call to. This will
        immediately transfer without using any assistants.


        If this is sent, `assistantId`, `assistant`, `squadId`, and `squad` are
        ignored.
    ServerMessageResponseAssistantRequest:
      title: ServerMessageResponseAssistantRequest
      type: object
      properties:
        destination:
          $ref: >-
            #/components/schemas/ServerMessageResponseAssistantRequestDestination
          nullable: true
          description: >-
            This is the destination to transfer the inbound call to. This will
            immediately transfer without using any assistants.


            If this is sent, `assistantId`, `assistant`, `squadId`, and `squad`
            are ignored.
        assistantId:
          type: string
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use a
            transient assistant, use `assistant` instead.
        assistant:
          $ref: '#/components/schemas/CreateAssistantDto'
          nullable: true
          description: >-
            This is the assistant that will be used for the call. To use an
            existing assistant, use `assistantId` instead.


            If you're unsure why you're getting an invalid assistant, try
            logging your response and send the JSON blob to POST /assistant
            which will return the validation errors.
        assistantOverrides:
          $ref: '#/components/schemas/AssistantOverrides'
          nullable: true
          description: >-
            These are the overrides for the `assistant` or `assistantId`'s
            settings and template variables.
        squadId:
          type: string
          nullable: true
          description: >-
            This is the squad that will be used for the call. To use a transient
            squad, use `squad` instead.
        squad:
          $ref: '#/components/schemas/CreateSquadDto'
          nullable: true
          description: >-
            This is a squad that will be used for the call. To use an existing
            squad, use `squadId` instead.
        error:
          type: string
          nullable: true
          description: >-
            This is the error if the call shouldn't be accepted. This is spoken
            to the customer.


            If this is sent, `assistantId`, `assistant`, `squadId`, `squad`, and
            `destination` are ignored.
    KnowledgeBaseResponseDocument:
      title: KnowledgeBaseResponseDocument
      type: object
      properties:
        content:
          type: string
          description: This is the content of the document.
        similarity:
          type: number
          format: double
          description: This is the similarity score of the document.
        uuid:
          type: string
          nullable: true
          description: This is the uuid of the document.
      required:
        - content
        - similarity
    ServerMessageResponseKnowledgeBaseRequest:
      title: ServerMessageResponseKnowledgeBaseRequest
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseResponseDocument'
          nullable: true
          description: >-
            This is the list of documents that will be sent to the model
            alongside the `messages` to generate a response.
        message:
          $ref: '#/components/schemas/CustomMessage'
          nullable: true
          description: >-
            This can be used to skip the model output generation and speak a
            custom message.
    ToolCallResultMessageItem:
      title: ToolCallResultMessageItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
    ToolCallResult:
      title: ToolCallResult
      type: object
      properties:
        message:
          type: array
          items:
            $ref: '#/components/schemas/ToolCallResultMessageItem'
          nullable: true
          description: >-
            This is the message that will be spoken to the user.


            If this is not returned, assistant will speak:

            1. a `request-complete` or `request-failed` message from
            `tool.messages`, if it exists

            2. a response generated by the model, if not
        name:
          type: string
          description: This is the name of the function the model called.
        toolCallId:
          type: string
          description: This is the unique identifier for the tool call.
        result:
          type: string
          nullable: true
          description: >-
            This is the result if the tool call was successful. This is added to
            the conversation history.


            Further, if this is returned, assistant will speak:

            1. the `message`, if it exists and is of type `request-complete`

            2. a `request-complete` message from `tool.messages`, if it exists

            3. a response generated by the model, if neither exist
        error:
          type: string
          nullable: true
          description: >-
            This is the error if the tool call was not successful. This is added
            to the conversation history.


            Further, if this is returned, assistant will speak:

            1. the `message`, if it exists and is of type `request-failed`

            2. a `request-failed` message from `tool.messages`, if it exists

            3. a response generated by the model, if neither exist
      required:
        - name
        - toolCallId
    ServerMessageResponseToolCalls:
      title: ServerMessageResponseToolCalls
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ToolCallResult'
          nullable: true
          description: These are the results of the "tool-calls" message.
        error:
          type: string
          nullable: true
          description: This is the error message if the tool call was not successful.
    ServerMessageResponseTransferDestinationRequestDestination:
      title: ServerMessageResponseTransferDestinationRequestDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - assistant
            - $ref: '#/components/schemas/TransferDestinationAssistant'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - step
            - $ref: '#/components/schemas/TransferDestinationStep'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: This is the destination you'd like the call to be transferred to.
    ServerMessageResponseTransferDestinationRequest:
      title: ServerMessageResponseTransferDestinationRequest
      type: object
      properties:
        destination:
          $ref: >-
            #/components/schemas/ServerMessageResponseTransferDestinationRequestDestination
          nullable: true
          description: This is the destination you'd like the call to be transferred to.
        error:
          type: string
          nullable: true
          description: This is the error message if the transfer should not be made.
    ServerMessageResponseVoiceRequest:
      title: ServerMessageResponseVoiceRequest
      type: object
      properties:
        data:
          type: string
          description: >-
            DO NOT respond to a `voice-request` webhook with this schema of {
            data }. This schema just exists to document what the response should
            look like. Follow these instructions:


            Here is what the request will look like:


            POST https://{assistant.voice.server.url}

            Content-Type: application/json


            {
              "messsage": {
                "type": "voice-request",
                "text": "Hello, world!",
                "sampleRate": 24000,
                ...other metadata about the call...
              }
            }


            The expected response is 1-channel 16-bit raw PCM audio at the
            sample rate specified in the request. Here is how the response will
            be piped to the transport:

            ```

            response.on('data', (chunk: Buffer) => {
              outputStream.write(chunk);
            });

            ```
      required:
        - data
    ServerMessageResponseMessageResponse:
      title: ServerMessageResponseMessageResponse
      oneOf:
        - $ref: '#/components/schemas/ServerMessageResponseAssistantRequest'
        - $ref: '#/components/schemas/ServerMessageResponseKnowledgeBaseRequest'
        - $ref: '#/components/schemas/ServerMessageResponseToolCalls'
        - $ref: '#/components/schemas/ServerMessageResponseTransferDestinationRequest'
        - $ref: '#/components/schemas/ServerMessageResponseVoiceRequest'
      description: >-
        This is the response that is expected from the server to the message.


        Note: Most messages don't expect a response. Only "assistant-request",
        "tool-calls" and "transfer-destination-request" do.
    ServerMessageResponse:
      title: ServerMessageResponse
      type: object
      properties:
        messageResponse:
          $ref: '#/components/schemas/ServerMessageResponseMessageResponse'
          description: >-
            This is the response that is expected from the server to the
            message.


            Note: Most messages don't expect a response. Only
            "assistant-request", "tool-calls" and "transfer-destination-request"
            do.
      required:
        - messageResponse
    ClientInboundMessageAddMessage:
      title: ClientInboundMessageAddMessage
      type: object
      properties:
        message:
          $ref: '#/components/schemas/OpenAiMessage'
          description: This is the message to add to the conversation.
        triggerResponseEnabled:
          type: boolean
          nullable: true
          description: >-
            This is the flag to trigger a response, or to insert the message
            into the conversation history silently. Defaults to `true`.


            Usage:

            - Use `true` to trigger a response.

            - Use `false` to insert the message into the conversation history
            silently.


            @default true
      required:
        - message
    ClientInboundMessageControlControl:
      title: ClientInboundMessageControlControl
      type: string
      enum:
        - mute-assistant
        - unmute-assistant
        - say-first-message
      description: This is the control action
    ClientInboundMessageControl:
      title: ClientInboundMessageControl
      type: object
      properties:
        control:
          $ref: '#/components/schemas/ClientInboundMessageControlControl'
          description: This is the control action
      required:
        - control
    ClientInboundMessageSay:
      title: ClientInboundMessageSay
      type: object
      properties:
        content:
          type: string
          nullable: true
          description: This is the content to say.
        endCallAfterSpoken:
          type: boolean
          nullable: true
          description: This is the flag to end call after content is spoken.
        interruptionsEnabled:
          type: boolean
          nullable: true
          description: This is the flag for whether the message is interruptible.
    ClientInboundMessageEndCall:
      title: ClientInboundMessageEndCall
      type: object
      properties: {}
    ClientInboundMessageTransferDestination:
      title: ClientInboundMessageTransferDestination
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - number
            - $ref: '#/components/schemas/TransferDestinationNumber'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - sip
            - $ref: '#/components/schemas/TransferDestinationSip'
          required:
            - type
      description: This is the destination to transfer the call to.
    ClientInboundMessageTransfer:
      title: ClientInboundMessageTransfer
      type: object
      properties:
        destination:
          $ref: '#/components/schemas/ClientInboundMessageTransferDestination'
          nullable: true
          description: This is the destination to transfer the call to.
        content:
          type: string
          nullable: true
          description: This is the content to say.
    ClientInboundMessageMessage:
      title: ClientInboundMessageMessage
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - add-message
            - $ref: '#/components/schemas/ClientInboundMessageAddMessage'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - control
            - $ref: '#/components/schemas/ClientInboundMessageControl'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - say
            - $ref: '#/components/schemas/ClientInboundMessageSay'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - end-call
            - $ref: '#/components/schemas/ClientInboundMessageEndCall'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - transfer
            - $ref: '#/components/schemas/ClientInboundMessageTransfer'
          required:
            - type
      description: >-
        These are the messages that can be sent from client-side SDKs to control
        the call.
    ClientInboundMessage:
      title: ClientInboundMessage
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ClientInboundMessageMessage'
          description: >-
            These are the messages that can be sent from client-side SDKs to
            control the call.
      required:
        - message
    UserMessage:
      title: UserMessage
      type: object
      properties:
        role:
          type: string
          description: The role of the user in the conversation.
        message:
          type: string
          description: The message content from the user.
        time:
          type: number
          format: double
          description: The timestamp when the message was sent.
        endTime:
          type: number
          format: double
          description: The timestamp when the message ended.
        secondsFromStart:
          type: number
          format: double
          description: The number of seconds from the start of the conversation.
        duration:
          type: number
          format: double
          nullable: true
          description: The duration of the message in seconds.
      required:
        - role
        - message
        - time
        - endTime
        - secondsFromStart
    SystemMessage:
      title: SystemMessage
      type: object
      properties:
        role:
          type: string
          description: The role of the system in the conversation.
        message:
          type: string
          description: The message content from the system.
        time:
          type: number
          format: double
          description: The timestamp when the message was sent.
        secondsFromStart:
          type: number
          format: double
          description: The number of seconds from the start of the conversation.
      required:
        - role
        - message
        - time
        - secondsFromStart
    BotMessage:
      title: BotMessage
      type: object
      properties:
        role:
          type: string
          description: The role of the bot in the conversation.
        message:
          type: string
          description: The message content from the bot.
        time:
          type: number
          format: double
          description: The timestamp when the message was sent.
        endTime:
          type: number
          format: double
          description: The timestamp when the message ended.
        secondsFromStart:
          type: number
          format: double
          description: The number of seconds from the start of the conversation.
        source:
          type: string
          nullable: true
          description: The source of the message.
        duration:
          type: number
          format: double
          nullable: true
          description: The duration of the message in seconds.
      required:
        - role
        - message
        - time
        - endTime
        - secondsFromStart
    ToolCallMessage:
      title: ToolCallMessage
      type: object
      properties:
        role:
          type: string
          description: The role of the tool call in the conversation.
        toolCalls:
          type: array
          items:
            type: object
            additionalProperties: true
          description: The list of tool calls made during the conversation.
        message:
          type: string
          description: The message content for the tool call.
        time:
          type: number
          format: double
          description: The timestamp when the message was sent.
        secondsFromStart:
          type: number
          format: double
          description: The number of seconds from the start of the conversation.
      required:
        - role
        - toolCalls
        - message
        - time
        - secondsFromStart
    ToolCallResultMessage:
      title: ToolCallResultMessage
      type: object
      properties:
        role:
          type: string
          description: The role of the tool call result in the conversation.
        toolCallId:
          type: string
          description: The ID of the tool call.
        name:
          type: string
          description: The name of the tool that returned the result.
        result:
          type: string
          description: The result of the tool call in JSON format.
        time:
          type: number
          format: double
          description: The timestamp when the message was sent.
        secondsFromStart:
          type: number
          format: double
          description: The number of seconds from the start of the conversation.
      required:
        - role
        - toolCallId
        - name
        - result
        - time
        - secondsFromStart
    TransportCostProvider:
      title: TransportCostProvider
      type: string
      enum:
        - twilio
        - vonage
        - vapi
    TransportCost:
      title: TransportCost
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/TransportCostProvider'
          nullable: true
        minutes:
          type: number
          format: double
          description: >-
            This is the minutes of `transport` usage. This should match
            `call.endedAt` - `call.startedAt`.
        cost:
          type: number
          format: double
          description: This is the cost of the component in USD.
      required:
        - minutes
        - cost
    TranscriberCost:
      title: TranscriberCost
      type: object
      properties:
        transcriber:
          type: object
          additionalProperties: true
          description: |-
            This is the transcriber that was used during the call.

            This matches one of the below:
            - `call.assistant.transcriber`,
            - `call.assistantId->transcriber`,
            - `call.squad[n].assistant.transcriber`,
            - `call.squad[n].assistantId->transcriber`,
            - `call.squadId->[n].assistant.transcriber`,
            - `call.squadId->[n].assistantId->transcriber`.
        minutes:
          type: number
          format: double
          description: >-
            This is the minutes of `transcriber` usage. This should match
            `call.endedAt` - `call.startedAt` for single assistant calls, while
            squad calls will have multiple transcriber costs one for each
            assistant that was used.
        cost:
          type: number
          format: double
          description: This is the cost of the component in USD.
      required:
        - transcriber
        - minutes
        - cost
    ModelCost:
      title: ModelCost
      type: object
      properties:
        model:
          type: object
          additionalProperties: true
          description: |-
            This is the model that was used during the call.

            This matches one of the following:
            - `call.assistant.model`,
            - `call.assistantId->model`,
            - `call.squad[n].assistant.model`,
            - `call.squad[n].assistantId->model`,
            - `call.squadId->[n].assistant.model`,
            - `call.squadId->[n].assistantId->model`.
        promptTokens:
          type: number
          format: double
          description: >-
            This is the number of prompt tokens used in the call. These should
            be total prompt tokens used in the call for single assistant calls,
            while squad calls will have multiple model costs one for each
            assistant that was used.
        completionTokens:
          type: number
          format: double
          description: >-
            This is the number of completion tokens generated in the call. These
            should be total completion tokens used in the call for single
            assistant calls, while squad calls will have multiple model costs
            one for each assistant that was used.
        cost:
          type: number
          format: double
          description: This is the cost of the component in USD.
      required:
        - model
        - promptTokens
        - completionTokens
        - cost
    VoiceCost:
      title: VoiceCost
      type: object
      properties:
        voice:
          type: object
          additionalProperties: true
          description: |-
            This is the voice that was used during the call.

            This matches one of the following:
            - `call.assistant.voice`,
            - `call.assistantId->voice`,
            - `call.squad[n].assistant.voice`,
            - `call.squad[n].assistantId->voice`,
            - `call.squadId->[n].assistant.voice`,
            - `call.squadId->[n].assistantId->voice`.
        characters:
          type: number
          format: double
          description: >-
            This is the number of characters that were generated during the
            call. These should be total characters used in the call for single
            assistant calls, while squad calls will have multiple voice costs
            one for each assistant that was used.
        cost:
          type: number
          format: double
          description: This is the cost of the component in USD.
      required:
        - voice
        - characters
        - cost
    VapiCostSubType:
      title: VapiCostSubType
      type: string
      enum:
        - normal
        - overage
      description: This is the sub type of the cost.
    VapiCost:
      title: VapiCost
      type: object
      properties:
        subType:
          $ref: '#/components/schemas/VapiCostSubType'
          description: This is the sub type of the cost.
        minutes:
          type: number
          format: double
          description: >-
            This is the minutes of Vapi usage. This should match `call.endedAt`
            - `call.startedAt`.
        cost:
          type: number
          format: double
          description: This is the cost of the component in USD.
      required:
        - subType
        - minutes
        - cost
    AnalysisCostAnalysisType:
      title: AnalysisCostAnalysisType
      type: string
      enum:
        - summary
        - structuredData
        - successEvaluation
      description: This is the type of analysis performed.
    AnalysisCost:
      title: AnalysisCost
      type: object
      properties:
        analysisType:
          $ref: '#/components/schemas/AnalysisCostAnalysisType'
          description: This is the type of analysis performed.
        model:
          type: object
          additionalProperties: true
          description: This is the model that was used to perform the analysis.
        promptTokens:
          type: number
          format: double
          description: This is the number of prompt tokens used in the analysis.
        completionTokens:
          type: number
          format: double
          description: This is the number of completion tokens generated in the analysis.
        cost:
          type: number
          format: double
          description: This is the cost of the component in USD.
      required:
        - analysisType
        - model
        - promptTokens
        - completionTokens
        - cost
    VoicemailDetectionCostProvider:
      title: VoicemailDetectionCostProvider
      type: string
      enum:
        - twilio
        - google
        - openai
      description: This is the provider that was used to detect the voicemail.
    VoicemailDetectionCost:
      title: VoicemailDetectionCost
      type: object
      properties:
        model:
          type: object
          additionalProperties: true
          description: This is the model that was used to perform the analysis.
        provider:
          $ref: '#/components/schemas/VoicemailDetectionCostProvider'
          description: This is the provider that was used to detect the voicemail.
        promptTextTokens:
          type: number
          format: double
          description: >-
            This is the number of prompt text tokens used in the voicemail
            detection.
        promptAudioTokens:
          type: number
          format: double
          description: >-
            This is the number of prompt audio tokens used in the voicemail
            detection.
        completionTextTokens:
          type: number
          format: double
          description: >-
            This is the number of completion text tokens used in the voicemail
            detection.
        completionAudioTokens:
          type: number
          format: double
          description: >-
            This is the number of completion audio tokens used in the voicemail
            detection.
        cost:
          type: number
          format: double
          description: This is the cost of the component in USD.
      required:
        - model
        - provider
        - promptTextTokens
        - promptAudioTokens
        - completionTextTokens
        - completionAudioTokens
        - cost
    FunctionToolWithToolCallMessagesItem:
      title: FunctionToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    FunctionToolWithToolCall:
      title: FunctionToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/FunctionToolWithToolCallMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - toolCall
    GhlToolWithToolCallMessagesItem:
      title: GhlToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    GhlToolWithToolCall:
      title: GhlToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GhlToolWithToolCallMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        metadata:
          $ref: '#/components/schemas/GhlToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - toolCall
        - metadata
    MakeToolWithToolCallMessagesItem:
      title: MakeToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    MakeToolWithToolCall:
      title: MakeToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MakeToolWithToolCallMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        metadata:
          $ref: '#/components/schemas/MakeToolMetadata'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - toolCall
        - metadata
    BashToolWithToolCallMessagesItem:
      title: BashToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    BashToolWithToolCall:
      title: BashToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/BashToolWithToolCallMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - bash_20241022
          description: The sub type of tool.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        name:
          type: string
          enum:
            - bash
          description: The name of the tool, fixed to 'bash'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - subType
        - toolCall
        - name
    ComputerToolWithToolCallMessagesItem:
      title: ComputerToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    ComputerToolWithToolCall:
      title: ComputerToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ComputerToolWithToolCallMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - computer_20241022
          description: The sub type of tool.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        name:
          type: string
          enum:
            - computer
          description: The name of the tool, fixed to 'computer'
        displayWidthPx:
          type: number
          format: double
          description: The display width in pixels
        displayHeightPx:
          type: number
          format: double
          description: The display height in pixels
        displayNumber:
          type: number
          format: double
          nullable: true
          description: Optional display number
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - subType
        - toolCall
        - name
        - displayWidthPx
        - displayHeightPx
    TextEditorToolWithToolCallMessagesItem:
      title: TextEditorToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    TextEditorToolWithToolCall:
      title: TextEditorToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: '#/components/schemas/TextEditorToolWithToolCallMessagesItem'
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        subType:
          type: string
          enum:
            - text_editor_20241022
          description: The sub type of tool.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        name:
          type: string
          enum:
            - str_replace_editor
          description: The name of the tool, fixed to 'str_replace_editor'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - subType
        - toolCall
        - name
    GoogleCalendarCreateEventToolWithToolCallMessagesItem:
      title: GoogleCalendarCreateEventToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    GoogleCalendarCreateEventToolWithToolCall:
      title: GoogleCalendarCreateEventToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleCalendarCreateEventToolWithToolCallMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - toolCall
    GoogleSheetsRowAppendToolWithToolCallMessagesItem:
      title: GoogleSheetsRowAppendToolWithToolCallMessagesItem
      oneOf:
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-start
            - $ref: '#/components/schemas/ToolMessageStart'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-complete
            - $ref: '#/components/schemas/ToolMessageComplete'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-failed
            - $ref: '#/components/schemas/ToolMessageFailed'
          required:
            - type
        - type: object
          allOf:
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - request-response-delayed
            - $ref: '#/components/schemas/ToolMessageDelayed'
          required:
            - type
    GoogleSheetsRowAppendToolWithToolCall:
      title: GoogleSheetsRowAppendToolWithToolCall
      type: object
      properties:
        async:
          type: boolean
          nullable: true
          description: >-
            This determines if the tool is async.


            If async, the assistant will move forward without waiting for your
            server to respond. This is useful if you just want to trigger
            something on your server.


            If sync, the assistant will wait for your server to respond. This is
            useful if want assistant to respond with the result from your
            server.


            Defaults to synchronous (`false`).
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleSheetsRowAppendToolWithToolCallMessagesItem
          nullable: true
          description: >-
            These are the messages that will be spoken to the user as the tool
            is running.


            For some tools, this is auto-filled based on special fields like
            `tool.destinations`. For others like the function tool, these can be
            custom configured.
        type:
          type: string
          enum:
            - google.sheets.row.append
          description: The type of tool. "google.sheets.row.append" for Google Sheets tool.
        toolCall:
          $ref: '#/components/schemas/ToolCall'
        function:
          $ref: '#/components/schemas/OpenAiFunction'
          nullable: true
          description: >-
            This is the function definition of the tool.


            For `endCall`, `transferCall`, and `dtmf` tools, this is auto-filled
            based on tool-specific fields like `tool.destinations`. But, even in
            those cases, you can provide a custom function definition for
            advanced use cases.


            An example of an advanced use case is if you want to customize the
            message that's spoken for `endCall` tool. You can specify a function
            where it returns an argument "reason". Then, in `messages` array,
            you can have many "request-complete" messages. One of these messages
            will be triggered if the `messages[].conditions` matches the
            "reason" argument.
        server:
          $ref: '#/components/schemas/Server'
          nullable: true
          description: >-
            This is the server that will be hit when this tool is requested by
            the model.


            All requests will be sent with the call object among other things.
            You can find more details in the Server URL documentation.


            This overrides the serverUrl set on the org and the phoneNumber.
            Order of precedence: highest tool.server.url, then
            assistant.serverUrl, then phoneNumber.serverUrl, then org.serverUrl.
      required:
        - type
        - toolCall
    FallbackNeetsVoice:
      title: FallbackNeetsVoice
      type: object
      properties:
        voiceId:
          nullable: true
    NeetsVoice:
      title: NeetsVoice
      type: object
      properties:
        voiceId:
          nullable: true
    DeepgramTranscriberLanguage:
      title: DeepgramTranscriberLanguage
      type: string
      enum:
        - bg
        - ca
        - cs
        - da
        - da-DK
        - de
        - de-CH
        - el
        - en
        - en-AU
        - en-GB
        - en-IN
        - en-NZ
        - en-US
        - es
        - es-419
        - es-LATAM
        - et
        - fi
        - fr
        - fr-CA
        - hi
        - hi-Latn
        - hu
        - id
        - it
        - ja
        - ko
        - ko-KR
        - lt
        - lv
        - ms
        - multi
        - nl
        - nl-BE
        - 'no'
        - pl
        - pt
        - pt-BR
        - ro
        - ru
        - sk
        - sv
        - sv-SE
        - ta
        - taq
        - th
        - th-TH
        - tr
        - uk
        - vi
        - zh
        - zh-CN
        - zh-Hans
        - zh-Hant
        - zh-TW
    DeepgramTranscriberModel:
      title: DeepgramTranscriberModel
      type: string
      enum:
        - nova-2
        - nova-2-general
        - nova-2-meeting
        - nova-2-phonecall
        - nova-2-finance
        - nova-2-conversationalai
        - nova-2-voicemail
        - nova-2-video
        - nova-2-medical
        - nova-2-drivethru
        - nova-2-automotive
        - nova
        - nova-general
        - nova-phonecall
        - nova-medical
        - enhanced
        - enhanced-general
        - enhanced-meeting
        - enhanced-phonecall
        - enhanced-finance
        - base
        - base-general
        - base-meeting
        - base-phonecall
        - base-finance
        - base-conversationalai
        - base-voicemail
        - base-video
    FallbackDeepgramTranscriberLanguage:
      title: FallbackDeepgramTranscriberLanguage
      type: string
      enum:
        - bg
        - ca
        - cs
        - da
        - da-DK
        - de
        - de-CH
        - el
        - en
        - en-AU
        - en-GB
        - en-IN
        - en-NZ
        - en-US
        - es
        - es-419
        - es-LATAM
        - et
        - fi
        - fr
        - fr-CA
        - hi
        - hi-Latn
        - hu
        - id
        - it
        - ja
        - ko
        - ko-KR
        - lt
        - lv
        - ms
        - multi
        - nl
        - nl-BE
        - 'no'
        - pl
        - pt
        - pt-BR
        - ro
        - ru
        - sk
        - sv
        - sv-SE
        - ta
        - taq
        - th
        - th-TH
        - tr
        - uk
        - vi
        - zh
        - zh-CN
        - zh-Hans
        - zh-Hant
        - zh-TW
    FallbackDeepgramTranscriberModel:
      title: FallbackDeepgramTranscriberModel
      type: string
      enum:
        - nova-2
        - nova-2-general
        - nova-2-meeting
        - nova-2-phonecall
        - nova-2-finance
        - nova-2-conversationalai
        - nova-2-voicemail
        - nova-2-video
        - nova-2-medical
        - nova-2-drivethru
        - nova-2-automotive
        - nova
        - nova-general
        - nova-phonecall
        - nova-medical
        - enhanced
        - enhanced-general
        - enhanced-meeting
        - enhanced-phonecall
        - enhanced-finance
        - base
        - base-general
        - base-meeting
        - base-phonecall
        - base-finance
        - base-conversationalai
        - base-voicemail
        - base-video
    TransferMode:
      title: TransferMode
      type: string
      enum:
        - rolling-history
        - swap-system-message-in-history
    PunctuationBoundary:
      title: PunctuationBoundary
      type: string
      enum:
        - 。
        - ，
        - .
        - '!'
        - '?'
        - ;
        - )
        - ،
        - ۔
        - ।
        - ॥
        - '|'
        - '||'
        - ','
        - ':'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://api.vapi.ai
    description: Default
